{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/admin/blogs/add/addblog.component.html","webpack:///src/app/admin/blogs/blog.component.html","webpack:///src/app/admin/bodytype/add/addbodyType.component.html","webpack:///src/app/admin/bodytype/bodytype.component.html","webpack:///src/app/admin/cars/addcars/addcars.component.html","webpack:///src/app/admin/cars/carslist.component.html","webpack:///src/app/admin/carsell/carselldetails/carselldetails.component.html","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.html","webpack:///src/app/admin/carsell/carselllist/carselllist.component.html","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/customer/customers/customers.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/features/add/addfeature.component.html","webpack:///src/app/admin/features/featurelist.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/reviews/reviews.component.html","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.html","webpack:///src/app/admin/sales/orders/modal-content/modal-OrderDetail.component.html","webpack:///src/app/admin/sales/orders/orders.component.html","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.html","webpack:///src/app/admin/settings/amenities/amenities.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/confirm/confirm.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/discount/add/adddiscount.component.html","webpack:///src/app/admin/settings/discount/discount.component.html","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.html","webpack:///src/app/admin/settings/landmarks/landmark.component.html","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.html","webpack:///src/app/admin/settings/offers/offers.component.html","webpack:///src/app/admin/settings/services/addservices/addservices.component.html","webpack:///src/app/admin/settings/services/services.component.html","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.html","webpack:///src/app/admin/settings/setting/setting.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/imageupload/alternateimage.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/imageupload/thumbnailimage.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/CarSell.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/amenities.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/blog.service.ts","webpack:///src/app/_services/bodyType.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/cars.service.ts","webpack:///src/app/_services/carsell.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/discount.service.ts","webpack:///src/app/_services/features.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/landmark.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/offers.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/reviews.service.ts","webpack:///src/app/_services/services.service.ts","webpack:///src/app/_services/setting.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/admin/blogs/add/addblog.component.css","webpack:///src/app/admin/blogs/add/addblog.component.ts","webpack:///src/app/admin/blogs/blog.component.css","webpack:///src/app/admin/blogs/blog.component.ts","webpack:///src/app/admin/bodytype/add/addbodyType.component.css","webpack:///src/app/admin/bodytype/add/addbodyType.component.ts","webpack:///src/app/admin/bodytype/bodytype.component.ts","webpack:///src/app/admin/cars/addcars/addcars.component.css","webpack:///src/app/admin/cars/addcars/addcars.component.ts","webpack:///src/app/admin/cars/carslist.component.css","webpack:///src/app/admin/cars/carslist.component.ts","webpack:///src/app/admin/carsell/carselldetails/carselldetails.component.ts","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.css","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.ts","webpack:///src/app/admin/carsell/carselllist/carselllist.component.css","webpack:///src/app/admin/carsell/carselllist/carselllist.component.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/customer/customers/customers.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/features/add/addfeature.component.ts","webpack:///src/app/admin/features/featurelist.component.css","webpack:///src/app/admin/features/featurelist.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/reviews/reviews.component.ts","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/sales/orders/modal-content/modal-OrderDetail.component.ts","webpack:///src/app/admin/sales/orders/modal-content/ngbd-OrderDetail-content.component.ts","webpack:///src/app/admin/sales/orders/orders.component.ts","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.css","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.ts","webpack:///src/app/admin/settings/amenities/amenities.component.css","webpack:///src/app/admin/settings/amenities/amenities.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.css","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/confirm/confirm.component.css","webpack:///src/app/admin/settings/confirm/confirm.component.ts","webpack:///src/app/admin/settings/confirm/confirmation-dialog.service.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/discount/add/adddiscount.component.ts","webpack:///src/app/admin/settings/discount/discount.component.ts","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.css","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.ts","webpack:///src/app/admin/settings/landmarks/landmark.component.css","webpack:///src/app/admin/settings/landmarks/landmark.component.ts","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.css","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.ts","webpack:///src/app/admin/settings/offers/offers.component.ts","webpack:///src/app/admin/settings/services/addservices/addservices.component.css","webpack:///src/app/admin/settings/services/addservices/addservices.component.ts","webpack:///src/app/admin/settings/services/services.component.css","webpack:///src/app/admin/settings/services/services.component.ts","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.css","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.ts","webpack:///src/app/admin/settings/setting/setting.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/imageupload/alternateimage.component.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/imageupload/thumbnailimage.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","exportAsExcelFile","json","excelFileName","worksheet","json_to_sheet","console","log","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","data","Blob","Date","getTime","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","selector","host","CarSells","CarSellImages","Customers","Make","Models","Country","City","Feature","DashboardSummary","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Report","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","compare","v1","v2","a","b","res","matches","term","name","toLowerCase","includes","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","get","asObservable","set","_set","ExportList","brandId","getById","getAllData","url","next","subscribe","addons","pipe","_search","result","total","patch","Object","assign","sortedData","filter","slice","clear","insert","post","update","updateData","providedIn","AmenitiesService","Amenities","AppsettingService","BannerService","Banner","title","BlogService","getblogId","fromDate","toDate","blogs","loadBlogImages","loadCountry","loadCity","event","updatestatus","BodyTypeService","bodytype","BrandsService","brands","CarsService","getcarId","cars","loadCarsImages","loadBodyType","loadMake","loadModel","loadCustomer","CarSellService","printorder","carsells","loadCarSellImages","loadFeature","carsell","CategoryService","categories","fullName","CustomersService","customers","DashboadService","GetDashboard","locationID","date","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","GetDashboardRange","fdate","tdate","DeliveryService","loadBrands","Delivery","DiscountService","Discount","FeaturesService","ItemsService","loadCategories","loadActiveCategories","loadItems","loadModifierList","loadAddonList","getTodaysItems","items","updateSettings","LandmarkService","Landmark","LocalStorageService","setSelectedBrand","brand","sessionStorage","setItem","JSON","stringify","setSelectedLocation","location","getSelectedLocation","parse","getItem","setLocation","getLocation","getSelectedBrand","getSelectedUser","userInfo","LocationsService","getAllLocations","locations","loadLocationImages","loadTimings","loadAmenities","loadService","loadLandmark","LoginService","currentUserSubject","currentUser","value","login","username","password","ModifiersService","modifiers","OffersService","offerss","orderNo","OrdersService","loadLocations","brandID","orders","categoryName","ReportService","salescategorywiseReport","SalesSummaryRpt","SalesDetailRpt","SalesItemwiseRpt","SalesCategorywiseRpt","SalesCustomerwiseRpt","customerID","SalesUserwiseRpt","ReviewsService","Review","serviceTitle","ServicesService","SettingService","Setting","ToastService","toastr","showSuccess","_title","_message","success","timeOut","showError","error","showWarning","warning","AddBlogComponent","formBuilder","router","route","ls","ts","blogService","submitted","loading","Images","CountryList","CityList","selectedCityID","ButtonText","createForm","ngOnInit","setSelectedBlog","edtor","getContentFromEditor","editorId","tinymce","getContent","blogForm","controls","group","blogID","required","arabicTitle","description","arabicDescription","startDate","endDate","statusID","isFeatured","imagesSource","imageUrl","blogImages","city","country","file","formattedStartDate","formattedEndDate","onFileChange","target","files","filesAmount","reader","FileReader","fileSize","size","alert","onload","push","patchValue","readAsDataURL","formatDate","day","month","year","formattedDate","editForm","obj","desc","setContent","f","setValue","removeImage","index","indexOf","splice","init","onSelect","selectElementValue","split","map","item","trim","paramMap","param","sid","onSubmit","markAllAsTouched","invalid","parseInt","navigate","template","now","BloglistComponent","service","excelService","confirmationDialogService","FeatureList","loading$","submit","_datepicker","getData","Edit","BlogID","updateBlog","blog","status","parseDate","data$","total$","onSort","headers","forEach","header","openConfirmationDialog","confirm","Filter","Delete","providers","AddbodyTypeComponent","bodytypeService","loadingbodyType","setSelected","bodytypeForm","displayOrder","arabicName","bodyTypeID","image","imgComp","BodyTypeComponent","exportAsXLSX","AddcarsComponent","carsService","ModelList","BodyTypeList","CustomerList","MakeList","selectedBodyTypeID","selectedModelID","selectedMakeID","YearList","setSelectedCarSell","carsForm","carID","rowID","customerPhone","vinNo","makeID","modelID","color","registrationNo","checkLitre","engineType","recommendedAmount","binaryImage","userID","gender","carType","carsImages","address","assembly","cityID","bodyColor","countryCode","price","transmition","kilometer","fuelType","bodyType","carSellID","carsID","onChange","CarslistComponent","updateCars","CarSelldetailsComponent","Locations","selectedLocations","reason","customerInfo","makeInfo","modelInfo","countryInfo","cityInfo","featureInfo","images","setSelectedOrder","updateOrder","customer","make","model","feature","AddcarsellComponent","carsellService","FeaturesList","loadCarSellFeature","carSellForm","createdBy","updatedBy","isInspected","carsellImages","featureID","features","carSellAddID","stringToConvert","selectedFeatureID","Number","undefined","toString","CarselllistComponent","CarSellID","order","View","Print","printout","html","newWindow","open","document","write","print","AddbrandComponent","brandService","loadingBrand","imageBgUrl","brandForm","email","companyURl","currency","selectFile","fileData","BrandComponent","selectedBrand","Deactive","rowVersion","AddlocationComponent","locationService","loadingLocations","Image","AmenitiesList","ServiceList","LandmarkList","Items","selectedAmenitiesID","selectedServiceID","selectedLandmarkID","timings","locationTimings","time","arabicTimings","aName","aTime","setSelectedLocations","locationForm","descripiton","arabicAddress","contactNo","minOrderAmount","latitude","longitude","customerStatusID","landmarkID","businessType","gmaplink","lastUpdatedBy","lastUpdatedDate","locationImages","amenities","amenitiesID","serviceID","countryID","brandThumbnailImage","loadItemImages","LocationsComponent","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","mobile","CustomersComponent","DashboardComponent","dashboardSummary","AddfeatureComponent","featureService","setSelectedFeature","featureForm","FeaturelistComponent","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","addonID","AddonsComponent","AddcategoryComponent","categoryService","loadingCategory","setSelectedCategory","categoryForm","categoryID","CategoryComponent","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isApplyDiscount","cost","itemID","calories","selectedModifierIds","selectedAddonIds","ItemsComponent","ItemsettingsComponent","ItemsList","isItemSetting","itemSettingTitle","selectedItemIds","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","SalescategorywiseComponent","salesCategoryWise","locaionID","selectedLocation","loadLocationsMulti","arr","element","x","toLocaleLowerCase","SalescustomerwiseComponent","SalesdetailComponent","orderDetails","locaionIDs","y","disabled","SalesitemwiseComponent","salesItemWise","SalesuserwiseComponent","salesUserWise","SummaryComponent","_model","ReviewsComponent","banner","OrderdetailsComponent","orderOrderCheckout","orderCustomerInfo","customerOrders","orderCheckouts","ModalContentComponent","NgbdModalContent","activeModal","dataObj","OrdersComponent","modalService","salesorders","modalRef","componentInstance","AddamenitiesComponent","amenitiesService","amenitiesForm","AmenitiesComponent","AppsettingsComponent","appsettingService","branchName","branchAddress","branchTiming","deliveryNo","whatsappNo","discount","discountdescription","ID","AppInfoID","appDescription","facebook","twitter","instagram","appInfoID","AddbannerComponent","bannerService","bannerForm","bannerID","BannerComponent","ConfirmComponent","decline","close","accept","dismiss","ConfirmationDialogService","btnOkText","btnCancelText","dialogSize","DeliveryComponent","delivery","AdddiscountComponent","discountService","LocationList","selectedLocationID","fromTime","hour","getHours","minute","getMinutes","toTime","discountForm","discountID","backgroundColor","fontColor","thumbnailImage","arabicImage","thmbimg","thumbnailimageimageUrl","arbimg","alternateimageUrl","DiscountComponent","AddlandmarkComponent","landmarkService","landmarkForm","LandmarkComponent","landmark","AddoffersComponent","offersService","loadingOffers","setSelectedOffers","offersForm","offerID","OffersComponent","offers","AddservicesComponent","servicesService","serviceForm","serviceDescription","arabicServiceTitle","arabicServiceDescription","ServiceComponent","services","AddsettingComponent","settingService","settingForm","pageName","alternateImage","altimg","SettingComponent","setting","AppComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","children","register","enabled","production","bootstrap","CounterComponent","currentCount","incrementCounter","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","onDateSelection","after","isHovered","before","isInside","isRange","equals","validateInput","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HomeComponent","alternateimageComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","markForCheck","ImageuploadComponent","thumbnailimageComponent","LayoutComponent","_Langname","branchname","Logout","changeloc","LocObj","LoginComponent","loginForm","NavMenuComponent","isExpanded","collapse","toggle","environment","getBaseUrl","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Blog</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"blogForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Blog Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=title placeholder=\\\"\\\" formControlName=\\\"title\\\" maxlength=\\\"30\\\">\\r\\n              <small>Remaining characters: {{ 30 - blogForm.controls['title'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                  Title is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicTitle placeholder=\\\"\\\" formControlName=\\\"arabicTitle\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=country formControlName=\\\"country\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"country\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.country.invalid && (f.country.dirty || f.country.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.country.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"city\\\" formControlName=\\\"city\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.city.invalid && (f.city.dirty || f.city.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.city.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"startDate\\\">Start Date</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"startDate\\\" formControlName=\\\"startDate\\\">\\r\\n              <div *ngIf=\\\"f.startDate.invalid && (f.startDate.dirty || f.startDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.startDate.errors?.required\\\">\\r\\n                  Start Date is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"endDate\\\">End Date</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"endDate\\\" formControlName=\\\"endDate\\\">\\r\\n              <div *ngIf=\\\"f.endDate.invalid && (f.endDate.dirty || f.endDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.endDate.errors?.required\\\">\\r\\n                  End Date is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Type</label>\\r\\n              <select class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <option selected disabled>-- Please Select --</option>\\r\\n                <option>Blog's</option>\\r\\n                <option>New's Alert</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\" rows=\\\"5\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Description</label>\\r\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\" rows=\\\"5\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n              <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Blog's</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Blog's List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Blog\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"title\\\" (sort)=\\\"onSort($event)\\\"> Title</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"startDate\\\" (sort)=\\\"onSort($event)\\\">Start Date </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"endDate\\\" (sort)=\\\"onSort($event)\\\">End Date</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td> {{item.startDate | date}} </td>\\r\\n            <td> {{item.endDate | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.blogID)\\\"></i>\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add BodyType</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bodytypeForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">BodyType Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-md-8\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"30\\\">\\r\\n                          <small>Remaining characters: {{ 30 - bodytypeForm.controls['name'].value.length }}</small>\\r\\n                          <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                            <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                              Name is required.\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <!-- Form Row-->\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Display Order</label>\\r\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">BodyType</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">BodyType List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Add BodyType</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"ArabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n            <th width=\\\"15%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.arabicName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.bodyTypeID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Car</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"carsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Car Details\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"float: right;\\\">Save changes</button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Customer</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Enter a valid Saudi Arabia phone number\\\" formControlName=\\\"customerPhone\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Vin No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vinNo\\\" placeholder=\\\"\\\" formControlName=\\\"vinNo\\\">\\r\\n              <div *ngIf=\\\"f.vinNo.invalid && (f.vinNo.dirty || f.vinNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.vinNo.errors.required\\\">\\r\\n                  Vin No is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Make</label>\\r\\n              <select class=\\\"custom-select\\\" id=makeID formControlName=\\\"makeID\\\" (change)=\\\"onChange($event)\\\">\\r\\n                <option [ngValue]=\\\"option.makeID\\\" selected=\\\"option.makeID == makeID\\\" *ngFor=\\\"let option of MakeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.makeID.invalid && (f.makeID.dirty || f.makeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.makeID.errors.required\\\">\\r\\n                  Make is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Model</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"modelID\\\">\\r\\n                <option [ngValue]=\\\"option.modelID\\\" selected=\\\"option.modelID == modelID\\\"\\r\\n                        *ngFor=\\\"let option of ModelList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.modelID.invalid && (f.modelID.dirty || f.modelID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.modelID.errors.required\\\">\\r\\n                  Model is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Year</label>\\r\\n              <select name=\\\"year\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <option *ngFor=\\\"let option of YearList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.year.invalid && (f.year.dirty || f.year.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.year.errors.required\\\">\\r\\n                  Year is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Color</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"color\\\" placeholder=\\\"\\\" formControlName=\\\"color\\\">\\r\\n              <div *ngIf=\\\"f.color.invalid && (f.color.dirty || f.color.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.color.errors.required\\\">\\r\\n                  Color is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Registration No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=registrationNo placeholder=\\\"\\\" formControlName=\\\"registrationNo\\\">\\r\\n              <div *ngIf=\\\"f.registrationNo.invalid && (f.registrationNo.dirty || f.registrationNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.registrationNo.errors.required\\\">\\r\\n                  Registration No. is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Check Litres</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"checkLitre\\\" placeholder=\\\"\\\" formControlName=\\\"checkLitre\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Engine Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=engineType placeholder=\\\"\\\" formControlName=\\\"engineType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Inline Engine Layout</option>\\r\\n                <option>Flat Engine</option>\\r\\n                <option>V-Engine</option>\\r\\n                <option>Twin Cylinder</option>\\r\\n                <option>Three Cylinder</option>\\r\\n                <option>Four Cylinder</option>\\r\\n                <option>Five Cylinder</option>\\r\\n                <option>Six Cylinder</option>\\r\\n                <option>Seven Cylinder</option>\\r\\n                <option>Eight Cylinders</option>\\r\\n                <option>Nine Cylinders</option>\\r\\n                <option>Ten Cylinders</option>\\r\\n                <option>Eleven Cylinders</option>\\r\\n                <option>Twelve Cylinders</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <!--<div *ngIf=\\\"f.engineType.invalid && (f.fuelType.dirty || f.engineType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.engineType.errors.required\\\">\\r\\n                  Engine Type is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Recommended Amount</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recommendedAmount\\\" placeholder=\\\"\\\" formControlName=\\\"recommendedAmount\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Gender</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gender\\\" placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Car Type</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"carType\\\" formControlName=\\\"carType\\\">\\r\\n                <option [ngValue]=\\\"option.bodyTypeID\\\" selected=\\\"option.bodyTypeID == bodyTypeID\\\" *ngFor=\\\"let option of BodyTypeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.carType.invalid && (f.carType.dirty || f.carType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.carType.errors.required\\\">\\r\\n                  Car Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=statusID placeholder=\\\"\\\" formControlName=\\\"statusID\\\" value=\\\"1\\\" hidden>\\r\\n              <!-- Save changes button-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n                  <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n                  <br>\\r\\n                  <label for=\\\"file\\\">Select Images </label>\\r\\n                  <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n                  <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n                  <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n                  <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Car Sell List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Car Sell\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n            <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <!--<th width=\\\"10%\\\">IMAGE</th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"makeName\\\" (sort)=\\\"onSort($event)\\\">Make Name </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"bodyType\\\" (sort)=\\\"onSort($event)\\\">Body Type </th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"modelName\\\" (sort)=\\\"onSort($event)\\\">Model Name </th>\\r\\n            <!-- <th width=\\\"10%\\\" sortable=\\\"createdDate\\\" (sort)=\\\"onSort($event)\\\">Date </th> -->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"address\\\" (sort)=\\\"onSort($event)\\\">Address </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <!--<td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>-->\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.makeName}} </td>\\r\\n            <!--<td> {{item.bodyType}} </td>-->\\r\\n            <td> {{item.modelName}} </td>\\r\\n\\r\\n            <!--     -->\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.address}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 1,'btn-success': item.statusID === 2, 'btn-danger':item.statusID === 3, 'btn-dark':item.statusID === 4}\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==4 ? 'Sold' :\\r\\n                             item.statusID ==1 ? 'Pending' :\\r\\n                             item.statusID ==2 ? 'Accepted' :\\r\\n                             item.statusID ==3 ? 'Rejected' :\\r\\n                             item.statusID ==4 ? 'Sold' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <!--<button class=\\\"btn btn-sm btn-warning\\\">-->\\r\\n              <i class=\\\"fas fa-fw fa-eye\\\" (click)=\\\"View(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n              &nbsp;\\r\\n              <!--<button class=\\\"btn btn-sm btn-success \\\" >-->\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">CarSell Details</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"carsell.statusID!=4\\\">\\r\\n        <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n          <div class=\\\"card-header border-bottom-0\\\">CarSell Status</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(carsell,2)\\\">\\r\\n                <i class=\\\"fas fa-check-circle\\\"></i> Accepted\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(carsell,3)\\\">\\r\\n                <i class=\\\"fas fa-truck\\\"></i> Rejected\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(carsell,4)\\\">\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Sold\\r\\n              </button>\\r\\n            </div>\\r\\n            <br />\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>Reason</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reason\\\" required=\\\"required\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Customer Details</div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Customer Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.fullName}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Contact\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.mobile}}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Email\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.email}}</div>\\r\\n              </div>-->\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Address\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.address}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <!-- Report summary card example-->\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Car Informations</div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Car Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Description\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.description }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Make\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ makeInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Model\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ modelInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Year\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.year }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Registration No.\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.registrationNo }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Price\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.price }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Car Details</div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Country\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ countryInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      City\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ cityInfo.name }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Body Color\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.bodyColor }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Transmition\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.transmition }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Assembly\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"mr-2\\\">\\r\\n                  {{ carsell.assembly }}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Kilometer\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.kilometer }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Fuel Type\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.fuelType }}</div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Engine Type\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.engineType }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Features\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\" style=\\\"display: -webkit-inline-box; flex-wrap: wrap; font-size: 11px; \\\">\\r\\n                  <div *ngFor=\\\"let item of featureInfo \\\">\\r\\n                    <label class=\\\"badge-pill badge-info\\\">{{ item.name }}</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Is Inspected\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.isInspected}}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div *ngFor=\\\"let item of images\\\" class=\\\"mr-2\\\">\\r\\n                  <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                  <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-left-dark shadow \\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-header border-bottom-0\\\">Images</div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let item of images\\\">\\r\\n              <div class=\\\"col-md-2\\\">\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"img-thumbnail\\\" alt=\\\"\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"carSellForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Car Sell Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Customer</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Enter a valid Saudi Arabia phone number\\\" formControlName=\\\"customerPhone\\\" maxlength=\\\"15\\\">\\r\\n              <small>Remaining characters: {{ 15 - carSellForm.controls['customerPhone'].value.length }}</small>\\r\\n              <!--<div *ngIf=\\\"form.get('customerPhone').hasError('saudiPhoneNumber')\\\">\\r\\n                Please enter a valid Saudi Arabia phone number.\\r\\n              </div>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"30\\\">\\r\\n              <small>Remaining characters: {{ 30 - carSellForm.controls['name'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\" maxlength=\\\"100\\\">\\r\\n              <small>Remaining characters: {{ 100 - carSellForm.controls['address'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                  Address is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Registration No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=registrationNo placeholder=\\\"\\\" formControlName=\\\"registrationNo\\\" maxlength=\\\"10\\\">\\r\\n              <small>Remaining characters: {{ 10 - carSellForm.controls['registrationNo'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.registrationNo.invalid && (f.registrationNo.dirty || f.registrationNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.registrationNo.errors.required\\\">\\r\\n                  Registration No. is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Body Type</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"bodyTypeID\\\" formControlName=\\\"bodyTypeID\\\">\\r\\n                <option [ngValue]=\\\"option.bodyTypeID\\\" selected=\\\"option.bodyTypeID == bodyTypeID\\\" *ngFor=\\\"let option of BodyTypeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.bodyTypeID.invalid && (f.bodyTypeID.dirty || f.bodyTypeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.bodyTypeID.errors.required\\\">\\r\\n                  Body Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Features</label>\\r\\n              <ng-select [items]=\\\"FeaturesList\\\" bindLabel=\\\"name\\\" bindValue=\\\"featureID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedFeatureID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=countryCode formControlName=\\\"countryCode\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"countryCode\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.countryCode.invalid && (f.countryCode.dirty || f.countryCode.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.countryCode.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=cityID formControlName=\\\"cityID\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.cityID.invalid && (f.cityID.dirty || f.cityID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.cityID.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Fuel Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=fuelType placeholder=\\\"\\\" formControlName=\\\"fuelType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Petrol</option>\\r\\n                <option>Diesel</option>\\r\\n                <option>Electric</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.fuelType.invalid && (f.fuelType.dirty || f.fuelType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.fuelType.errors.required\\\">\\r\\n                  Fuel Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Engine Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=engineType placeholder=\\\"\\\" formControlName=\\\"engineType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Inline Engine Layout</option>\\r\\n                <option>Flat Engine</option>\\r\\n                <option>V-Engine</option>\\r\\n                <option>Twin Cylinder</option>\\r\\n                <option>Three Cylinder</option>\\r\\n                <option>Four Cylinder</option>\\r\\n                <option>Five Cylinder</option>\\r\\n                <option>Six Cylinder</option>\\r\\n                <option>Seven Cylinder</option>\\r\\n                <option>Eight Cylinders</option>\\r\\n                <option>Nine Cylinders</option>\\r\\n                <option>Ten Cylinders</option>\\r\\n                <option>Eleven Cylinders</option>\\r\\n                <option>Twelve Cylinders</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.engineType.invalid && (f.fuelType.dirty || f.engineType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.engineType.errors.required\\\">\\r\\n                  Engine Type Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Kilometer</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=kilometer placeholder=\\\"\\\" formControlName=\\\"kilometer\\\">\\r\\n              <div *ngIf=\\\"f.kilometer.invalid && (f.kilometer.dirty || f.kilometer.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.kilometer.errors.required\\\">\\r\\n                  Mileage is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Transmition</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=transmition placeholder=\\\"\\\" formControlName=\\\"transmition\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Automatic</option>\\r\\n                <option>Manual</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.transmition.invalid && (f.transmition.dirty || f.transmition.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.transmition.errors.required\\\">\\r\\n                  Transmition is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Price</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n              <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                  Price is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Body Color</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=bodyColor placeholder=\\\"\\\" formControlName=\\\"bodyColor\\\">\\r\\n              <div *ngIf=\\\"f.bodyColor.invalid && (f.bodyColor.dirty || f.bodyColor.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.bodyColor.errors.required\\\">\\r\\n                  Color is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Make</label>\\r\\n              <select class=\\\"custom-select\\\" id=makeID formControlName=\\\"makeID\\\" (change)=\\\"onChange($event)\\\">\\r\\n                <option [ngValue]=\\\"option.makeID\\\" selected=\\\"option.makeID == makeID\\\" *ngFor=\\\"let option of MakeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.makeID.invalid && (f.makeID.dirty || f.makeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.makeID.errors.required\\\">\\r\\n                  Make is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Model</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"modelID\\\">\\r\\n                <option [ngValue]=\\\"option.modelID\\\" selected=\\\"option.modelID == modelID\\\"\\r\\n                        *ngFor=\\\"let option of ModelList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.modelID.invalid && (f.modelID.dirty || f.modelID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.modelID.errors.required\\\">\\r\\n                  Model is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Assembly</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=assembly placeholder=\\\"\\\" formControlName=\\\"assembly\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Local</option>\\r\\n                <option>Imported</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.assembly.invalid && (f.assembly.dirty || f.assembly.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.assembly.errors.required\\\">\\r\\n                  Assembly is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Year</label>\\r\\n              <select name=\\\"year\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <option *ngFor=\\\"let option of YearList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.year.invalid && (f.year.dirty || f.year.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.year.errors.required\\\">\\r\\n                  Year is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Is Inspected</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isInspected\\\" formControlName=\\\"isInspected\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isInspected\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=statusID placeholder=\\\"\\\" formControlName=\\\"statusID\\\" value=\\\"1\\\" hidden>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n              <small>Note: File Size limit is 150 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Car Sell List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Car\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <!--<label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>-->\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <!--<th width=\\\"10%\\\">IMAGE</th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n            <th width=\\\"15%\\\" sortable=\\\"makeName\\\" (sort)=\\\"onSort($event)\\\">Make Name </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"bodyType\\\" (sort)=\\\"onSort($event)\\\">Body Type </th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"modelName\\\" (sort)=\\\"onSort($event)\\\">Model Name </th>\\r\\n            <!-- <th width=\\\"10%\\\" sortable=\\\"createdDate\\\" (sort)=\\\"onSort($event)\\\">Date </th> -->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"address\\\" (sort)=\\\"onSort($event)\\\">Address </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <!--<td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>-->\\r\\n            <td> {{item.name}} </td>\\r\\n            <!--<td> {{item.description}} </td>-->\\r\\n            <td> {{item.makeName}} </td>\\r\\n            <!--<td> {{item.bodyType}} </td>-->\\r\\n            <td> {{item.modelName}} </td>\\r\\n\\r\\n            <!--     -->\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.address}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 1,'btn-success': item.statusID === 2, 'btn-danger':item.statusID === 3, 'btn-dark':item.statusID === 4}\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==4 ? 'Sold' :\\r\\n                             item.statusID ==1 ? 'Pending' :\\r\\n                             item.statusID ==2 ? 'Accepted' :\\r\\n                             item.statusID ==3 ? 'Rejected' :\\r\\n                             item.statusID ==4 ? 'Sold' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <!--<button class=\\\"btn btn-sm btn-warning\\\">-->\\r\\n              <i class=\\\"fas fa-fw fa-eye\\\" (click)=\\\"View(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n              &nbsp;\\r\\n              <!--<button class=\\\"btn btn-sm btn-success \\\" >-->\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Location Details\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"float: right;\\\">Save changes</button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"30\\\">\\r\\n              <small>Remaining characters: {{ 30 - locationForm.controls['name'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n              <div *ngIf=\\\"f.arabicName.invalid && (f.arabicName.dirty || f.arabicName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicName.errors.required\\\">\\r\\n                  Arabic name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\" maxlength=\\\"100\\\" />\\r\\n              <small>Remaining characters: {{ 100 - locationForm.controls['address'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                  Address is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"arabicAddress\\\">\\r\\n              <div *ngIf=\\\"f.arabicAddress.invalid && (f.arabicAddress.dirty || f.arabicAddress.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicAddress.errors.required\\\">\\r\\n                  Arabic Address is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\" maxlength=\\\"15\\\">\\r\\n              <small>Remaining characters: {{ 15 - locationForm.controls['contactNo'].value.length }}</small>\\r\\n              <div *ngIf=\\\"f.contactNo.invalid && (f.contactNo.dirty || f.contactNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.contactNo.errors.required\\\">\\r\\n                  Contact No is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n              <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                  Email is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" id=descripiton formControlName=\\\"descripiton\\\" height=\\\"100px\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.descripiton.invalid && (f.descripiton.dirty || f.descripiton.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.descripiton.errors.required\\\">\\r\\n                  Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Arabic Description</label>\\r\\n              <textarea class=\\\"form-control\\\" id=descripiton formControlName=\\\"arabicDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.arabicDescription.invalid && (f.arabicDescription.dirty || f.arabicDescription.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicDescription.errors.required\\\">\\r\\n                  Arabic Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n              <div *ngIf=\\\"f.latitude.invalid && (f.latitude.dirty || f.latitude.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.latitude.errors.required\\\">\\r\\n                  Latitude Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n              <div *ngIf=\\\"f.longitude.invalid && (f.longitude.dirty || f.longitude.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.longitude.errors.required\\\">\\r\\n                  Longitude is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Amenities</label>\\r\\n              <ng-select [items]=\\\"AmenitiesList\\\" bindLabel=\\\"name\\\" bindValue=\\\"amenitiesID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAmenitiesID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Services</label>\\r\\n              <ng-select [items]=\\\"ServiceList\\\" bindLabel=\\\"serviceTitle\\\" bindValue=\\\"serviceID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedServiceID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.serviceTitle}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"countryID\\\" formControlName=\\\"countryID\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"countryID\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.countryID.invalid && (f.countryID.dirty || f.countryID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.countryID.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=cityID formControlName=\\\"cityID\\\" [(ngModel)]=\\\"cityID\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.cityID.invalid && (f.cityID.dirty || f.cityID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.cityID.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Select Landmark</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"landmarkID\\\">\\r\\n                <option [ngValue]=\\\"option.landmarkID\\\" selected=\\\"option.landmarkID == landmarkID\\\"\\r\\n                        *ngFor=\\\"let option of Items\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">GMap Link</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=gmaplink placeholder=\\\"\\\" formControlName=\\\"gmaplink\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Business Type</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"businessType\\\">\\r\\n                <option selected disabled>-- Please Select --</option>\\r\\n                <option>Oil Change</option>\\r\\n                <option>Car Wash</option>\\r\\n                <option>Mechanic</option>\\r\\n                <option>Polishing</option>\\r\\n                <option>Tyres</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Customer Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"customerStatusID\\\" formControlName=\\\"customerStatusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"customerStatusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">IsFeatured</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n              <small>Note: File Size limit is 150 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <h5>Location Timing's</h5>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <h5>Arabic Timing's</h5>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <h5>Brand Thumbnail Image</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"row\\\" *ngFor=\\\"let timings of locationTimings\\\">\\r\\n                <div class=\\\"col-md-5 form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">{{ timings.name }}</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-7\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" id=\\\"timings{{ timings }}\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"timings.time\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"row\\\" *ngFor=\\\"let time of arabicTimings\\\">\\r\\n                <div class=\\\"col-md-5 form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">{{ time.aName }}</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-7\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" id=\\\"time{{ time }}\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"time.aTime\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <app-imageupload style=\\\"display:inline-block\\\"></app-imageupload>\\r\\n              <!--<div class=\\\"row\\\" *ngFor=\\\"let time of arabicTimings\\\">\\r\\n      <div class=\\\"col-md-5 form-group\\\">\\r\\n        <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">{{ time.arabicName }}</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" id=\\\"time{{ arabicTime }}\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"time.arabicTime\\\">\\r\\n      </div>\\r\\n    </div>-->\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--<div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <h5>Brand Thumbnail Image</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group col-md-4\\\">\\r\\n                <app-imageupload></app-imageupload>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-2 input-group mb-3\\\">\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.descripiton}} </td>\\r\\n            <td> {{item.contactNo}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.customerStatusID === 1, 'btn-danger':item.customerStatusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.customerStatusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Customer Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"fullName\\\" maxlength=\\\"30\\\">\\r\\n                            <small>Remaining characters: {{ 30 - customerForm.controls['fullName'].value.length }}</small>\\r\\n                            <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                              <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                                Name is required.\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                    <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                                            Email is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                    <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                            Password is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Mobile</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                                    <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                                            Contact is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!--<div class=\\\"row d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n  <br />\\r\\n  <br />\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h3 class=\\\" mb-0 text-gray-800\\\">Home > Dashboard</h3>\\r\\n  </div>\\r\\n  <hr style=\\\"color:#888\\\" />\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 class=\\\" mb-0 text-gray-800\\\">WELCOME TO GARAGE CUSTOMER CONTROL PANEL</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>-->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <h2 class=\\\" mb-0 text-gray-800\\\">Welcome To Garage Customer Control Panel</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <br />\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Service's</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalService}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-viruses fa-2x text-gray-300\\\"></i>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Location's</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalLocation}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-search-location fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-danger shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Feature's</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalFeature}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-feather fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Carsell</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalCarsell}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-car fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Feature</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"featureForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Feature Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"30\\\">\\r\\n                <small>Remaining characters: {{ 30 - featureForm.controls['name'].value.length }}</small>\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Display Order</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Features</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Features List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Feature\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 form-group\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!--<div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>-->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"arabicname\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">StatusID</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order</th>\\r\\n            <th width=\\\"15%\\\" style=\\\"\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.arabicName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.featureID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Addons Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Addon</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"10%\\\">Discount </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.discountAmount}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Reviews</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Reviews List</h6>\\r\\n      </div>\\r\\n      <!--<div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Banner\\r\\n        </button>\\r\\n      </div>-->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"35%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Message </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"rate\\\" (sort)=\\\"onSort($event)\\\">Rate </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"location\\\" (sort)=\\\"onSort($event)\\\">Location </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"date\\\" (sort)=\\\"onSort($event)\\\">Date</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\">Status</th>\\r\\n            <!--<th width=\\\"10%\\\">Actions</th>-->\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.message}} </td>\\r\\n            <td> {{item.rate}} </td>\\r\\n            <td> {{item.location}} </td>\\r\\n            <td> {{item.date | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <!--<a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>-->\\r\\n\\r\\n             <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                        <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,103)\\\" *ngIf=\\\"order.statusID!=103\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,104)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (orderOrderCheckout.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}\\r\\n                                            <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                                <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                            </tr>\\r\\n                                        </td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <div class=\\\"modal-header\\\">\\r\\n     \\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n   \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ dataObj.order.statusID == 100 ? \\\"Delivered\\\" : dataObj.order.statusID==101 ?\\\"Order confirmed\\\" : dataObj.order.statusID == 102? \\\"Order prepared\\\" : dataObj.order.statusID == 103? \\\" Order out for delivery\\\" : dataObj.order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n      <hr/>\\r\\n      <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"dataObj.order.statusID!=100\\\">\\r\\n              <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                  <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"\\\">\\r\\n                      <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(dataObj.order,102)\\\" *ngIf=\\\"dataObj.order.statusID!=102\\\">\\r\\n                        <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(dataObj.order,103)\\\" *ngIf=\\\"dataObj.order.statusID!=103\\\">\\r\\n                        <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(dataObj.order,100)\\\" *ngIf=\\\"dataObj.order.statusID!=100\\\">\\r\\n                        <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(dataObj.order,104)\\\">\\r\\n                        <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n              <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Customer Name\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.name }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                   Email\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.email }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Address\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Google Address\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.address }} | Latitude: {{ dataObj.customerOrders.latitude }}| Longitude: {{ dataObj.customerOrders.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Contact Number\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.mobile }}</div>\\r\\n                          </div>\\r\\n                          \\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n\\r\\n                      \\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Order No\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderNo }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Transaction No\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.transactionNo }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Order Type\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderType=='1'?'Home': dataObj.order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                        Order Date\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderDate | date }}</div>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Status\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"mr-2\\\">\\r\\n                                  {{ dataObj.order.statusID == 100 ? \\\"Delivered\\\" : dataObj.order.statusID==101 ?\\\"Order confirmed\\\" : dataObj.order.statusID == 102? \\\"Order prepared\\\" : dataObj.order.statusID == 103? \\\" Order out for delivery\\\" : dataObj.order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 mb-4\\\">\\r\\n              <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Amount Total\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.amountTotal | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Discount\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.discountAmount | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Tax\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.tax | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Service Charges\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.serviceCharges | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                         Grand Total\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.grandTotal | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                          <table class=\\\"table table-striped\\\">\\r\\n                              <thead>\\r\\n                                  <tr class=\\\"table-header\\\">\\r\\n                                      <th width=\\\"50%\\\">Name </th>\\r\\n                                      <th width=\\\"25\\\">Quantity</th>\\r\\n                                      <th width=\\\"25\\\">Price</th>\\r\\n                                  </tr>\\r\\n                              </thead>\\r\\n                              <tbody>\\r\\n                                  <tr *ngFor=\\\"let item of dataObj.orderDetails \\\">\\r\\n                                      <td> {{item.name}}\\r\\n                                          <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                              <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                          </tr>\\r\\n                                      </td>\\r\\n                                      <td> {{item.quantity}} </td>\\r\\n                                      <td> {{item.price}} </td>\\r\\n                                  </tr>\\r\\n                              </tbody>\\r\\n                          </table>\\r\\n                      </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n</div>    \\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n  </div> -->\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button> -->\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"5%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                        <td> {{item.orderNo}} </td>\\r\\n                        <td> {{item.transactionNo}} </td>\\r\\n                        <td> {{item.customerName}} </td>\\r\\n                        <td> {{item.customerMobile}} </td>\\r\\n                        <!-- <td> {{item.amountTotal | number : '1.2-2'}} </td>\\r\\n                        <td> {{item.tax | number : '1.2-2'}} </td>\\r\\n                        <td> {{item.serviceCharges | number : '1.2-2'}} </td> -->\\r\\n                        <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n                        <td>{{item.orderDate | date}}</td>\\r\\n                        <td><span class=\\\"badge badge-yellow\\\">{{item.orderType==1?\\\"Delivery\\\" :\\\"Pick Up\\\"}}</span></td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 102,'btn-warning': item.statusID === 101,'btn-success': item.statusID === 100, 'btn-danger':item.statusID === 103, 'btn-danger':item.statusID === 104 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Delivered' :\\r\\n                             item.statusID ==101 ? 'Confirmed' :\\r\\n                             item.statusID ==102 ? 'Prepared' :\\r\\n                             item.statusID ==103 ? 'On Delivery' :\\r\\n                             item.statusID ==104 ? 'Cancelled' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <!-- <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"open(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                            <a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Amenities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"amenitiesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Amenities Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"30\\\">\\r\\n                <small>Remaining characters: {{ 30 - amenitiesForm.controls['name'].value.length }}</small>\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Amenities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Amenities List</h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-right\\\">\\r\\n          <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n            Add Amenities\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.arabicName}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.amenitiesID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Timings & Info</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Timings & Info Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\"> Branch Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=BranchName placeholder=\\\"\\\" formControlName=\\\"branchName\\\">\\r\\n                                <div *ngIf=\\\"f.branchName.invalid && (f.branchName.dirty || f.branchName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.branchName.errors.required\\\">\\r\\n                                       Branch Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Address</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchAddress placeholder=\\\"\\\" formControlName=\\\"branchAddress\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Discount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=deliveryNo placeholder=\\\"\\\" formControlName=\\\"deliveryNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Whatsapp No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=whatsappNo placeholder=\\\"\\\" formControlName=\\\"whatsappNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Timing </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchTiming placeholder=\\\"\\\" formControlName=\\\"branchTiming\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Discount Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"discountdescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Application Info</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                   \\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Application Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"appDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Facebook Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=facebook placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Twitter Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=twitter placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Instagram Link </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=instagram placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <!-- <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                 \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Banner Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                                    <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                                            Description is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Banner\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ title }}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismiss()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      {{ message }}\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{ btnCancelText }}</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"accept()\\\">{{ btnOkText }}</button>\\r\\n    </div>\\r\\n\";","export default \"\\r\\n<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Area\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">                      \\r\\n                        <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>                          \\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                     \\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.amount}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Discount</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"discountForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Discount Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"50\\\" />\\r\\n                <small>Remaining characters: {{ 50 - discountForm.controls['name'].value.length }}</small>\\r\\n                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"50\\\">-->\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Location</label>\\r\\n                  <ng-select [items]=\\\"LocationList\\\" bindLabel=\\\"name\\\" bindValue=\\\"locationID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedLocationID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputUsername\\\" class=\\\"small mb-1\\\">Background Color</label>\\r\\n                    <input type=\\\"color\\\" id=\\\"backgroundColor\\\" formcontrolname=\\\"backgroundColor\\\" value=\\\"#d1d3e2\\\" class=\\\"form-control\\\" name=\\\"backgroundColor\\\" [(ngModel)]=\\\"backgroundColor\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputUsername\\\" class=\\\"small mb-1\\\">Font Color</label>\\r\\n                    <input type=\\\"color\\\" id=\\\"fontColor\\\" formcontrolname=\\\"fontColor\\\" value=\\\"#d1d3e2\\\" class=\\\"form-control\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"fontColor\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">From Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" placeholder=\\\"\\\" formControlName=\\\"fromDate\\\" required>\\r\\n                  <div *ngIf=\\\"f.fromDate.invalid && (f.fromDate.dirty || f.fromDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fromDate.errors.required\\\">\\r\\n                      From Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">To Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" placeholder=\\\"\\\" formControlName=\\\"toDate\\\" required>\\r\\n                  <div *ngIf=\\\"f.toDate.invalid && (f.toDate.dirty || f.toDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.toDate.errors.required\\\">\\r\\n                      To Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">From Time</label>\\r\\n                  <ngb-timepicker [(ngModel)]=\\\"fromTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">To Time</label>\\r\\n                  <ngb-timepicker [(ngModel)]=\\\"toTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-lg-12\\\">\\r\\n                  <label for=\\\"Item Status\\\">Status</label>\\r\\n                  <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col-md-8 form-group\\\">\\r\\n                  <label for=\\\"file\\\">Thumbnail Image</label>\\r\\n                  <app-thumbnailimage style=\\\"display:inline-block\\\"></app-thumbnailimage>\\r\\n                </div>\\r\\n              </div>-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-lg-12\\\">\\r\\n                  <small>Note: Image Size limit is 150 KB</small>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Save changes button-->\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <label for=\\\"Item Status\\\">English Banner</label>\\r\\n              <app-imageupload></app-imageupload>\\r\\n              <br />\\r\\n              <br />\\r\\n              <label for=\\\"Item Status\\\">Arabic Banner</label>\\r\\n              <app-alternateimage></app-alternateimage>\\r\\n              <br />\\r\\n              <br />\\r\\n              <label for=\\\"file\\\">Brand Thumbnail Image</label>\\r\\n              <app-thumbnailimage></app-thumbnailimage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Discount</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Discount List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n          <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Discount\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From  </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To  </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.fromDate | date}} </td>\\r\\n            <td> {{item.toDate | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.discountID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n     <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n            <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n            </ngb-pagination>\\r\\n        </div>\\r\\n    </div> \\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Landmark</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"landmarkForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Landmark Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\"  maxlength=\\\"30\\\">\\r\\n                            <small>Remaining characters: {{ 30 - landmarkForm.controls['name'].value.length }}</small>\\r\\n                            <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                              <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                Name is required.\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                 \\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Landmark</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Landmark List</h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-right\\\">\\r\\n          <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n            Add Landmark\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>   \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>                                                                                           \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.arabicName}} </td>\\r\\n                      \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.landmarkID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Services</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"serviceForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Service Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"serviceTitle\\\" placeholder=\\\"\\\" formControlName=\\\"serviceTitle\\\" maxlength=\\\"30\\\" />\\r\\n                <small>Remaining characters: {{ 30 - serviceForm.controls['serviceTitle'].value.length }}</small>\\r\\n                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\" maxlength=\\\"50\\\">-->\\r\\n                <div *ngIf=\\\"f.serviceTitle.invalid && (f.serviceTitle.dirty || f.serviceTitle.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.serviceTitle.errors.required\\\">\\r\\n                    Title is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=serviceTitle placeholder=\\\"\\\" formControlName=\\\"serviceTitle\\\">\\r\\n                  <div *ngIf=\\\"f.serviceTitle.invalid && (f.serviceTitle.dirty || f.serviceTitle.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                      <div *ngIf=\\\"f.serviceTitle.errors.required\\\">\\r\\n                          Name is required.\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>-->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicServiceTitle placeholder=\\\"\\\" formControlName=\\\"arabicServiceTitle\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"serviceDescription\\\" placeholder=\\\"\\\" formControlName=\\\"serviceDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicServiceDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicServiceDescription\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Display Order</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"displayOrder\\\" placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Services</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Service List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n          <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Services\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"serviceTitle\\\" (sort)=\\\"onSort($event)\\\"> Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"arabicServiceTitle\\\" (sort)=\\\"onSort($event)\\\"> Arr Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"serviceDescription\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"arabicServiceDescription\\\" (sort)=\\\"onSort($event)\\\">Arr Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.serviceTitle}} </td>\\r\\n            <td> {{item.arabicServiceTitle}} </td>\\r\\n            <td> {{item.serviceDescription}} </td>\\r\\n            <td> {{item.arabicServiceDescription}} </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.serviceID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"settingForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Setting Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=title placeholder=\\\"\\\" formControlName=\\\"title\\\" maxlength=\\\"30\\\">\\r\\n                <small>Remaining characters: {{ 30 - settingForm.controls['title'].value.length }}</small>\\r\\n                <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                    Title is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicTitle placeholder=\\\"\\\" formControlName=\\\"arabicTitle\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Page Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pageName\\\" placeholder=\\\"\\\" formControlName=\\\"pageName\\\" maxlength=\\\"15\\\">\\r\\n                <small>Remaining characters: {{ 15 - settingForm.controls['pageName'].value.length }}</small>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Display Order</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"displayOrder\\\" placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Location</label>\\r\\n                  <ng-select [items]=\\\"LocationList\\\" bindLabel=\\\"name\\\" bindValue=\\\"locationID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedLocationID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n\\r\\n              <app-alternateimage></app-alternateimage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <small>Note: Image Size limit is 150 KB</small>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Setting List</h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <!--<div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n          </div>-->\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-right\\\">\\r\\n          <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n            Add Setting\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"title\\\" (sort)=\\\"onSort($event)\\\"> Title </th>   \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicTitle\\\" (sort)=\\\"onSort($event)\\\"> Arabic Title </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicDescription\\\" (sort)=\\\"onSort($event)\\\"> Arabic description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"pageName\\\" (sort)=\\\"onSort($event)\\\"> Page Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>                        \\r\\n                        <th width=\\\"5%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.title}} </td>\\r\\n                        <td> {{item.arabicTitle}} </td>\\r\\n                        <td> {{item.description}} </td>                        \\r\\n                        <td> {{item.arabicDescription}} </td>                        \\r\\n                        <td> {{item.pageName}} </td>\\r\\n                        <td> {{item.type}} </td>\\r\\n                        <td> {{item.displayOrder}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.id)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n         <!--<div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>--> \\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<router-outlet>\\r\\n\\r\\n</router-outlet>\\r\\n\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ alternateimageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\\r\\n\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ thumbnailimageimageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\\r\\n\";","export default \"<body id=\\\"page-top\\\">\\r\\n  <!-- Page Wrapper -->\\r\\n  <div id=\\\"wrapper\\\">\\r\\n\\r\\n    <!-- Sidebar -->\\r\\n    <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n\\r\\n      <!-- Sidebar - Brand -->\\r\\n      <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n        <div class=\\\"sidebar-brand-icon\\\">\\r\\n          <img src=\\\"../../assets/img/Group 28.svg\\\" style=\\\"width: 50%;\\\" />\\r\\n        </div>\\r\\n      </a>\\r\\n\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider my-0\\\">\\r\\n\\r\\n      <!-- Nav Item - Dashboard -->\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n          <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n\\r\\n      <!-- Heading -->\\r\\n      <div class=\\\"sidebar-heading\\\">\\r\\n        Modules\\r\\n      </div>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n          <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n          <span>Settings</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/discount']\\\">Discount</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/services']\\\">Services</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/amenities']\\\">Amenities</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/location']\\\">Locations</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/landmarks']\\\">Landmarks</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/setting']\\\">Setting</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCarSell\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCarSell\\\">\\r\\n          <i class=\\\"fas fa-fw fa-car-side\\\"></i>\\r\\n          <span>Car Sell</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCarSell\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/bodytype']\\\">Body Type List</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/features']\\\">Features List</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/carsell']\\\">Car Sell List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseReviews\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseReviews\\\">\\r\\n          <i class=\\\"fas fa-fw fa-receipt\\\"></i>\\r\\n          <span>Customer Reviews</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseReviews\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reviews']\\\">Reviews List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!--<hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCars\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCars\\\">\\r\\n          <i class=\\\"fas fa-fw fa-car-alt\\\"></i>\\r\\n          <span>Cars</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCars\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/cars']\\\">Car's List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>-->\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseBlogs\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseBlogs\\\">\\r\\n          <i class=\\\"fas fa-fw fa-blog\\\"></i>\\r\\n          <span>Blogs</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseBlogs\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/blog']\\\">Blog's</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n\\r\\n      <!-- Sidebar Toggler (Sidebar) -->\\r\\n      <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n        <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n      </div>\\r\\n\\r\\n    </ul>\\r\\n    <!-- End of Sidebar -->\\r\\n    <!-- Content Wrapper -->\\r\\n    <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n\\r\\n      <!-- Main Content -->\\r\\n      <div id=\\\"content\\\">\\r\\n\\r\\n        <!-- Topbar -->\\r\\n        <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n\\r\\n          <!-- Sidebar Toggle (Topbar) -->\\r\\n          <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n          </button>\\r\\n\\r\\n\\r\\n\\r\\n          <!-- Topbar Navbar -->\\r\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\r\\n            <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n              <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">Administrator</span>\\r\\n                <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n              </a>\\r\\n              <!-- Dropdown - User Information -->\\r\\n              <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                  <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n                </a>\\r\\n              </div>\\r\\n            </li>\\r\\n\\r\\n          </ul>\\r\\n\\r\\n        </nav>\\r\\n        <!-- End of Topbar -->\\r\\n        <!-- Begin Page Content -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- End of Main Content -->\\r\\n      <!-- Footer -->\\r\\n      <footer class=\\\"sticky-footer bg-white\\\">\\r\\n        <div class=\\\"container my-auto\\\">\\r\\n          <div class=\\\"copyright text-center my-auto\\\">\\r\\n            <span>Copyright &copy; Garage 2022</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- End of Footer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- End of Content Wrapper -->\\r\\n\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\" style=\\\"margin-top: 12rem !important;\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-5\\\">\\r\\n                                    <img src=\\\"../../assets/img/Group 30.svg\\\" style=\\\"height:50px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">GarageCustomerAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n    console.log('worksheet',worksheet);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n}","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class CarSells {\r\n  carSellID:number;\r\n  customerID:number;\r\n  customerPhone:string;\r\n  name:string;\r\n  description:string;\r\n  registrationNo: string;\r\n  bodyTypeID: number;\r\n  bodyType:string;\r\n  features:string;\r\n  fuelType:string;\r\n  engineType:string;\r\n  kilometer:number;\r\n  year:string;\r\n  makeID:number;\r\n  modelID:number;\r\n  makeName:string;\r\n  modelName:string;\r\n  transmition:string;\r\n  price:number;\r\n  isInspected:boolean;\r\n  cityID:number;\r\n  countryID:string;\r\n  address:string;\r\n  carSellAddID:number;\r\n  bodyColor:string;\r\n  assembly:string;\r\n  reason:string;\r\n  statusID:number;\r\n  createdBy:number;\r\n  createdDate:string;\r\n  updatedBy:number;   \r\n}\r\nexport class CarSellImages {\r\n  id: number;\r\n  carSellID: number;\r\n  image: string;\r\n  statusID: number;\r\n\r\n}\r\nexport class Customers {\r\n  customerID: number;\r\n  fullName: string;\r\n  email: string;\r\n  mobile: string;\r\n  city: string;\r\n  password: string;\r\n  image: string;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n}\r\n\r\nexport class Make {\r\n  makeID: number;\r\n  rowID: number;\r\n  name: string;\r\n  aArabicName: string;\r\n  imagePath: string;\r\n  lastUpdatedBy: string;\r\n  lastUpdatedDate: string;\r\n  statusID: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n  displayOrder: number;\r\n}\r\nexport class Models {\r\n  modelID: number;\r\n  rowID: number;\r\n  makeID: number;\r\n  name: string;\r\n  arabicName: string;\r\n  year: string;\r\n  engineNo: string;\r\n  recommendedLitres: string;\r\n  imagePath: string;\r\n  lastUpdatedBy: string;\r\n  lastUpdatedDate: string;\r\n  statusID: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n}\r\nexport class Country {\r\n  code: string;\r\n  name: string;\r\n}\r\nexport class City {\r\n  id: number;\r\n  name: string;\r\n}\r\nexport class Feature {\r\n  featureID: number;\r\n  name: string;\r\n}\r\n","export class DashboardSummary {\r\n  totalService: number;\r\n  totalLocation: number;\r\n  totalFeature: number;\r\n  totalCarsell: number;\r\n}\r\n","export class Orders {\r\n  customerID: number;\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  orderDetailModifier: OrderDetailModifiers[]\r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Report {\r\n\r\n}\r\n\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  tax: number;\r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Amenities } from '../_models/Amenities';\r\n\r\n\r\ninterface SearchAmenitiesResult {\r\n  data: Amenities[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Amenities[], column: SortColumn, direction: string): Amenities[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Amenities, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AmenitiesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Amenities[]>([]);\r\n  private _data$ = new BehaviorSubject<Amenities[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Amenities: Amenities[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Amenities[]>(`api/amenities/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/amenities/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Amenities[]>(url).subscribe(res => {\r\n        this.Amenities = res;\r\n         \r\n        this._data$.next(this.Amenities);\r\n        this._allData$.next(this.Amenities);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAmenitiesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Amenities, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/amenities/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/amenities/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/amenities/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchCategoryResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(brandId) {\r\n    return this.http.get<Appsetting[]>(`api/About/brand/${brandId}`);\r\n  }\r\n\r\n  \r\n  // getAllData(brandId) {\r\n\r\n  //   const url = `api/category/all/${brandId}`;\r\n  //   console.log(url);\r\n  //   tap(() => this._loading$.next(true)),\r\n  //     this.http.get<Category[]>(url).subscribe(res => {\r\n  //       this.categories = res;\r\n  //         debugger\r\n  //       this._data$.next(this.categories);\r\n  //       this._allData$.next(this.categories);\r\n\r\n  //       this._search$.pipe(\r\n  //         switchMap(() => this._search()),\r\n  //         tap(() => this._loading$.next(false))\r\n  //       ).subscribe(result => {\r\n  //         // this._data$.next(result.data);\r\n  //         this._total$.next(result.total);\r\n  //       });\r\n\r\n  //       this._search$.next();\r\n  //     });\r\n  // }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n \r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/About/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/About/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id, brandId) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/banner/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        debugger\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { BlogImages_Junc, Blog, Country } from '../_models/Blog';\r\nimport { City } from '../_models/Blog';\r\n\r\ninterface SearchBlogResult {\r\n  data: Blog[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Blog[], column: SortColumn, direction: string): Blog[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Blog, term: string) {\r\n\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BlogService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Blog[]>([]);\r\n  private _data$ = new BehaviorSubject<Blog[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public blogs: Blog[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/blog/${id}`);\r\n  }\r\n  getblogId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/blog/blogid/${id}`);\r\n  }\r\n\r\n  getAllData(fromDate, toDate) {\r\n    debugger\r\n    const url = `api/blog/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Blog[]>(url).subscribe(res => {\r\n        this.blogs = res;\r\n           \r\n        this._data$.next(this.blogs);\r\n        this._allData$.next(this.blogs);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBlogResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.blogs, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/blog/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadBlogImages(id) {\r\n    debugger\r\n    return this.http.get<BlogImages_Junc[]>(`api/blog/images/${id}`);\r\n  }\r\n  loadCountry() {\r\n    return this.http.get<Country[]>(`api/blog/allCountry`);\r\n  }\r\n  loadCity(event) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/blog/allCity/${event}`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/blog/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(blogs) {\r\n    debugger\r\n    return this.http.post(`api/blog/updatestatus`, blogs)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/blog/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { BodyType } from '../_models/BodyType';\r\n\r\ninterface SearchBodyTypeResult {\r\n  data: BodyType[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: BodyType[], column: SortColumn, direction: string): BodyType[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: BodyType, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BodyTypeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<BodyType[]>([]);\r\n  private _data$ = new BehaviorSubject<BodyType[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public bodytype: BodyType[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList() {\r\n    return this.http.get<BodyType[]>(`api/bodyType/all/`);\r\n  }\r\n  getById(id) {\r\n    \r\n    return this.http.get<BodyType[]>(`api/bodyType/${id}/brand/`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/bodyType/all/`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<BodyType[]>(url).subscribe(res => {\r\n        this.bodytype = res;\r\n           \r\n        this._data$.next(this.bodytype);\r\n        this._allData$.next(this.bodytype);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBodyTypeResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.bodytype, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/bodyType/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/bodyType/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/bodyType/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Cars, CarsImages } from '../_models/Cars';\r\nimport { Features } from '../_models/Feature';\r\nimport { City } from '../_models/City';\r\nimport { BodyType } from '../_models/BodyType';\r\nimport { Customers, Make, Models } from '../_models/Cars';\r\n\r\n\r\ninterface SearchCarsResult {\r\n  data: Cars[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Cars[], column: SortColumn, direction: string): Cars[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Cars, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Cars[]>([]);\r\n  private _data$ = new BehaviorSubject<Cars[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public cars: Cars[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/cars/${id}`);\r\n  }\r\n  getcarId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/cars/carsellid/${id}`);\r\n  }\r\n\r\n  getAllData() {\r\n\r\n    const url = `api/cars/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Cars[]>(url).subscribe(res => {\r\n        this.cars = res;\r\n           \r\n        this._data$.next(this.cars);\r\n        this._allData$.next(this.cars);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCarsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.cars, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/cars/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadCarsImages(id) {\r\n    debugger\r\n    return this.http.get<CarsImages[]>(`api/cars/images/${id}`);\r\n  }\r\n  loadBodyType() {\r\n    return this.http.get<BodyType[]>(`api/bodytype/all`);\r\n  }\r\n  loadMake() {\r\n    debugger\r\n    return this.http.get<Make[]>(`api/carsell/allMake`);\r\n  }\r\n  loadModel(event) {\r\n    return this.http.get<Models[]>( `api/carsell/allModel/${event}`);\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/cars/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(cars) {\r\n    debugger\r\n    return this.http.post(`api/carsell/updatestatus`, cars)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  } \r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { CarSellImages, CarSells } from '../_models/CarSell';\r\nimport { Features } from '../_models/Feature';\r\nimport { City } from '../_models/City';\r\nimport { BodyType } from '../_models/BodyType';\r\nimport { Customers, Make, Models } from '../_models/CarSell';\r\n\r\n\r\ninterface SearchCarSellResult {\r\n  data: CarSells[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: CarSells[], column: SortColumn, direction: string): CarSells[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: CarSells, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarSellService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<CarSells[]>([]);\r\n  private _data$ = new BehaviorSubject<CarSells[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public carsells: CarSells[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/carsell/${id}`);\r\n  }\r\n  getcarId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/carsell/carsellid/${id}`);\r\n  }\r\n  printorder(id) {\r\n    return this.http.get<CarSells[]>(`api/orders/print/${id}`);\r\n  }\r\n  //getAllData(fromDate,toDate) {\r\n  getAllData() {\r\n\r\n    //const url = `api/carsell/all/${fromDate}/${toDate}`;\r\n    const url = `api/carsell/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<CarSells[]>(url).subscribe(res => {\r\n        this.carsells = res;\r\n           \r\n        this._data$.next(this.carsells);\r\n        this._allData$.next(this.carsells);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCarSellResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.carsells, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/carsell/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadCarSellImages(id) {\r\n    debugger\r\n    return this.http.get<CarSellImages[]>( `api/carsell/images/${id}`);\r\n  }\r\n  loadFeature() {\r\n    return this.http.get<Features[]>( `api/feature/all`);\r\n  }\r\n  loadBodyType() {\r\n    return this.http.get<BodyType[]>(`api/bodytype/all`);\r\n  }\r\n  loadMake() {\r\n    return this.http.get<Make[]>( `api/carsell/allMake`);\r\n  }\r\n  loadModel(event) {\r\n    return this.http.get<Models[]>( `api/carsell/allModel/${event}`);\r\n  }\r\n  loadCountry() {\r\n    return this.http.get<Features[]>( `api/carsell/allCountry`);\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  loadCity(event) {\r\n    return this.http.get<any[]>( `api/carsell/allCity/${event}`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/carsell/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(carsell) {\r\n    return this.http.post(`api/carsell/updatestatus`, carsell)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  } \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/customer/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/customer/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Location } from '../_models/Location';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\nimport { State } from '../_models/State';\r\n\r\ninterface SearchDashboardResult {\r\n  data: DashboardSummary[];\r\n  total: number;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DashboadService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public dashboard: DashboardSummary[];\r\n\r\n  GetDashboard(locationID, date) {\r\n    var today = date;\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + dd + '-' + mm;\r\n    return this.http.get<any[]>(`api/dashboard/get/${locationID}/${today}`);\r\n  }\r\n\r\n  GetDashboardRange(locationID, fdate,tdate) {\r\n    return this.http.get<any[]>(`api/dashboard/range/get/${locationID}/${fdate}/${tdate}`);\r\n  }\r\n\r\n  getAllData() {\r\n    return this.http.get<any[]>(`api/dashboard/all`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData(brandId) {\r\n\r\n    const url = `api/delivery/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Discount } from '../_models/Discount';\r\n\r\n\r\ninterface SearchDiscountResult {\r\n  data: Discount[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Discount[], column: SortColumn, direction: string): Discount[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Discount, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DiscountService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Discount[]>([]);\r\n  private _data$ = new BehaviorSubject<Discount[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Discount: Discount[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Discount[]>(`api/discount/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/discount/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Discount[]>(url).subscribe(res => {\r\n        this.Discount = res;\r\n       \r\n        this._data$.next(this.Discount);\r\n        this._allData$.next(this.Discount);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDiscountResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Discount, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/discount/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/discount/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/discount/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Features } from '../_models/Feature';\r\n\r\n\r\ninterface SearchFeatureResult {\r\n  data: Features[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Features[], column: SortColumn, direction: string): Features[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Features, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FeaturesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Features[]>([]);\r\n  private _data$ = new BehaviorSubject<Features[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Feature: Features[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Features[]>(`api/feature/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/feature/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Features[]>(url).subscribe(res => {\r\n        this.Feature = res;\r\n         \r\n        this._data$.next(this.Feature);\r\n        this._allData$.next(this.Feature);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchFeatureResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Feature, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/feature/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/feature/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/feature/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Landmark } from '../_models/Landmark';\r\n\r\n\r\n\r\ninterface SearchLandmarkResult {\r\n  data: Landmark[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Landmark[], column: SortColumn, direction: string): Landmark[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Landmark, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LandmarkService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Landmark[]>([]);\r\n  private _data$ = new BehaviorSubject<Landmark[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Landmark: Landmark[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Landmark[]>(`api/landmark/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/landmark/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Landmark[]>(url).subscribe(res => {\r\n        this.Landmark = res;\r\n         \r\n        this._data$.next(this.Landmark);\r\n        this._allData$.next(this.Landmark);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLandmarkResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Landmark, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/landmark/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/landmark/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/landmark/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location, LocationImages, LocationTimings } from '../_models/Location';\r\nimport { Amenities } from '../_models/Amenities';\r\nimport { Services } from '../_models/Services';\r\nimport { Landmark } from '../_models/Landmark';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id) {   \r\n    return this.http.get<Location[]>(`api/location/${id}`);\r\n  }\r\n  getAllLocations() {\r\n    return this.http.get<Location[]>(`api/location/all`);\r\n  }\r\n  getAllData() {\r\n    \r\n    const url = `api/location/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  loadLocationImages(id) {\r\n    return this.http.get<LocationImages[]>( `api/location/images/${id}`);\r\n  }\r\n  loadTimings(id) {\r\n    return this.http.get<LocationTimings[]>(`api/location/loadTimings/${id}`);\r\n  }\r\n  loadAmenities() {\r\n    return this.http.get<Amenities[]>( `api/amenities/all`);\r\n  }\r\n  loadService() {\r\n    return this.http.get<Services[]>( `api/service/all`);\r\n  }\r\n  loadLandmark() {\r\n    return this.http.get<Landmark[]>( `api/landmark/all`);\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/location/insertlocation', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {  \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Offers } from '../_models/Offers';\r\n\r\n\r\ninterface SearchOffersResult {\r\n  data: Offers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Offers[], column: SortColumn, direction: string): Offers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Offers, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OffersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Offers[]>([]);\r\n  private _data$ = new BehaviorSubject<Offers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public offerss: Offers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Offers[]>(`api/offers/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/offers/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Offers[]>(url).subscribe(res => {\r\n        this.offerss = res;\r\n          \r\n        this._data$.next(this.offerss);\r\n        this._allData$.next(this.offerss);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOffersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.offerss, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/offers/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/offers/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/offers/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id,brandId) {\r\n    return this.http.get<any[]>(`api/orders/${id}/brand/${brandId}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(brandID,locationID,fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/${brandID}/${locationID}/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { SortColumn, SortDirection, State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalescategorywiseReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalescategorywiseReport[], column: SortColumn, direction: string): SalescategorywiseReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: SalescategorywiseReport, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salescategorywiseReport: SalescategorywiseReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    debugger;\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salescategorywiseReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesDetailRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { reviews } from '../_models/Reviews';\r\n\r\n\r\ninterface SearchReviewsResult {\r\n  data: reviews[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: reviews[], column: SortColumn, direction: string): reviews[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: reviews, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReviewsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<reviews[]>([]);\r\n  private _data$ = new BehaviorSubject<reviews[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Review: reviews[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getAllData() {\r\n\r\n    const url = `api/reviews/all/`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<reviews[]>(url).subscribe(res => {\r\n        this.Review = res;\r\n        debugger\r\n        this._data$.next(this.Review);\r\n        this._allData$.next(this.Review);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchReviewsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Review, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Services } from '../_models/Services';\r\n\r\n\r\ninterface SearchAmenitiesResult {\r\n  data: Services[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Services[], column: SortColumn, direction: string): Services[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Services, term: string) {\r\n  debugger\r\n  return data.serviceTitle.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Services[]>([]);\r\n  private _data$ = new BehaviorSubject<Services[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Amenities: Services[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Services[]>(`api/service/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/service/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Services[]>(url).subscribe(res => {\r\n        this.Amenities = res;\r\n         \r\n        this._data$.next(this.Amenities);\r\n        this._allData$.next(this.Amenities);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAmenitiesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Amenities, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/service/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/service/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/service/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { setting } from '../_models/Setting';\r\n\r\n\r\ninterface SearchSettingResult {\r\n  data: setting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: setting[], column: SortColumn, direction: string): setting[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: setting, term: string) {\r\n  debugger\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<setting[]>([]);\r\n  private _data$ = new BehaviorSubject<setting[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Setting: setting[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<setting[]>(`api/setting/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/setting/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<setting[]>(url).subscribe(res => {\r\n        this.Setting = res;\r\n         \r\n        this._data$.next(this.Setting);\r\n        this._allData$.next(this.Setting);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchSettingResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Setting, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/setting/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/setting/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/setting/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Jsb2dzL2FkZC9hZGRibG9nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BlogService } from '../../../_services/blog.service';\r\n//import { EditorModule } from '@tinymce/tinymce-angular';\r\n/*import tinymce from 'tinymce';*/\r\ndeclare var tinymce: any;\r\n@Component({\r\n  selector: 'app-addblog',\r\n  templateUrl: './addblog.component.html',\r\n  styleUrls: ['./addblog.component.css']\r\n})\r\nexport class AddBlogComponent implements OnInit {\r\n  submitted = false;\r\n  blogForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  selectedCityID = [];\r\n  ButtonText = \"Save\";\r\n  datesstart: Date[];\r\n  datesend: Date[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public blogService: BlogService,\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBlog();\r\n    this.edtor();\r\n\r\n  }\r\n  getContentFromEditor(editorId: string): string {\r\n    return tinymce.get(editorId).getContent();\r\n  }\r\n\r\n  get f() { return this.blogForm.controls; }\r\n\r\n  private createForm() {\r\n    this.blogForm = this.formBuilder.group({\r\n      blogID: 0,\r\n      title: ['', Validators.required],\r\n      arabicTitle: [''],\r\n      description: ['', Validators.required],\r\n      arabicDescription: [''],\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required],\r\n      statusID: [1],\r\n      isFeatured: [false],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      blogImages: [],\r\n      city: [, Validators.required],\r\n      country: ['', Validators.required],\r\n      file: ['', Validators.required],\r\n      type: [''],\r\n      formattedStartDate: [''],\r\n      formattedEndDate: [''],\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.blogForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1; // Month indices are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    return formattedDate;\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n\r\n    const desc = tinymce.get(\"description\").setContent(obj.description);\r\n    const arabicDescription = tinymce.get(\"arabicDescription\").setContent(obj.arabicDescription);\r\n\r\n    this.f.title.setValue(obj.title);\r\n    this.f.arabicTitle.setValue(obj.arabicTitle);\r\n    this.f.description.setValue(desc);\r\n    this.f.arabicDescription.setValue(arabicDescription);\r\n    this.f.city.setValue(obj.city);\r\n    this.f.country.setValue(obj.country);\r\n\r\n    //const startDate = new Date(obj.startDate);\r\n    //const endDate = new Date(obj.endDate);\r\n\r\n    //const formattedStartDate = this.formatDate(startDate);\r\n    //const formattedEndDate = this.formatDate(endDate);\r\n\r\n    ////this.blogForm.get('formattedStartDate').setValue(formattedStartDate);\r\n    ////this.blogForm.get('formattedEndDate').setValue(formattedEndDate);\r\n    this.f.startDate.setValue(obj.startDate);\r\n    this.f.endDate.setValue(obj.endDate);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.blogID.setValue(obj.blogID);\r\n    this.f.statusID.setValue(obj.statusID);\r\n    this.loadBlogImages(this.f.blogID.value);\r\n\r\n    if (obj.country != \"\") {\r\n      this.blogService.loadCity(obj.country).subscribe((res: any) => {\r\n        this.CityList = res;\r\n      });\r\n    }\r\n  }\r\n  private loadBlogImages(id) {\r\n    debugger\r\n    this.blogService.loadBlogImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  edtor() {\r\n    tinymce.init(\r\n      {\r\n        selector: \"#description\",\r\n\r\n      });\r\n    tinymce.init(\r\n      {\r\n        selector: \"#arabicDescription\",\r\n\r\n      });\r\n  }\r\n\r\n  \r\n  private loadCountry() {\r\n    debugger\r\n    this.blogService.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.blogService.loadCity(value).subscribe((res: any) => {\r\n      this.CityList = res;\r\n    });\r\n  }\r\n  setSelectedBlog() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.blogID.setValue(sid);\r\n        this.blogService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    const description = this.getContentFromEditor('description');\r\n    const arabicDescription = this.getContentFromEditor('arabicDescription');\r\n    this.blogForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.description.setValue(description);\r\n    this.f.arabicDescription.setValue(arabicDescription);\r\n\r\n    if (this.blogForm.invalid) { return; }\r\n    this.loading = true;\r\n    if (parseInt(this.f.blogID.value) === 0) {\r\n      //Insert location\r\n      this.blogService.insert(this.blogForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/blog']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.blogService.update(this.blogForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/blog']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Jsb2dzL2Jsb2cuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Blog } from 'src/app/_models/Blog';\r\nimport { BlogService } from 'src/app/_services/blog.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { ConfirmationDialogService } from '../settings/confirm/confirmation-dialog.service';\r\n\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-bloglist',\r\n  templateUrl: './blog.component.html',\r\n  styleUrls: ['./blog.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class BloglistComponent implements OnInit {\r\n  data$: Observable<Blog[]>;\r\n  FeatureList =[];\r\n  oldData: Blog[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n\r\n  constructor(public service: BlogService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(BlogID) {\r\n     \r\n    this.router.navigate([\"admin/blog/edit\", BlogID]);\r\n  }\r\n\r\n  updateBlog(blog, status) {\r\n    debugger\r\n    blog.statusID = status;\r\n    this.service.update(blog).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/blog']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n     debugger\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n\r\n    if (await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true) {\r\n      this.service.delete(item).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n          this.getData();\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n    }\r\n    else { }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JvZHl0eXBlL2FkZC9hZGRib2R5VHlwZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BodyTypeService } from 'src/app/_services/bodyType.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addbodyType',\r\n  templateUrl: './addbodyType.component.html',\r\n  styleUrls: ['./addbodyType.component.css']\r\n})\r\nexport class AddbodyTypeComponent implements OnInit {\r\n  submitted = false;\r\n  bodytypeForm: FormGroup;\r\n  loading = false;\r\n  loadingbodyType = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private bodytypeService: BodyTypeService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelected();\r\n  }\r\n\r\n  get f() { return this.bodytypeForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bodytypeForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      displayOrder: [],\r\n      arabicName: [''],\r\n      statusID: [true],\r\n      bodyTypeID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelected() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingbodyType = true;\r\n        this.f.bodyTypeID.setValue(sid);\r\n        this.bodytypeService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingbodyType = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.bodytypeForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bodytypeForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.bodyTypeID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.bodytypeForm.value));\r\n      this.bodytypeService.insert(this.bodytypeForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/bodytype']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.bodytypeService.update(this.bodytypeForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/bodytype']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BodyType } from 'src/app/_models/BodyType';\r\nimport { BodyTypeService } from 'src/app/_services/bodyType.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { ConfirmationDialogService } from '../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-bodytype',\r\n  templateUrl: './bodytype.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class BodyTypeComponent implements OnInit {\r\n  data$: Observable<BodyType[]>;  \r\n  oldData: BodyType[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>; \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BodyTypeService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(bodytype) {\r\n        \r\n    this.router.navigate([\"admin/bodytype/edit\", bodytype]);\r\n  }\r\n\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n\r\n    if (await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true) {\r\n      this.service.delete(item).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n          this.getData();\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n    }\r\n    else { }\r\n  }\r\n\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnMvYWRkY2Fycy9hZGRjYXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarsService } from 'src/app/_services/cars.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { BodyTypeService } from '../../../../_services/bodyType.service';\r\n\r\n@Component({\r\n  selector: 'app-addcars',\r\n  templateUrl: './addcars.component.html',\r\n  styleUrls: ['./addcars.component.css']\r\n})\r\nexport class AddcarsComponent implements OnInit {\r\n  submitted = false;\r\n  carsForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  ModelList = [];\r\n  BodyTypeList = [];\r\n  CustomerList = [];\r\n  MakeList = [];\r\n  selectedBodyTypeID = [];\r\n  selectedModelID = [];\r\n  selectedMakeID = [];\r\n  YearList = ['2023', '2022', '2021', '2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990'];\r\n  ButtonText = \"Save\";\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private carsService: CarsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    //this.loadCarSellFeature();\r\n    this.loadBodyType();\r\n    this.loadMake();\r\n    //this.loadCustomer();\r\n    //this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCarSell();\r\n  }\r\n\r\n  get f() { return this.carsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.carsForm = this.formBuilder.group({\r\n      carID: 0,\r\n      rowID: [0],\r\n      customerID: [0],\r\n      customerPhone: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      vinNo: ['', Validators.required],\r\n      makeID: [, Validators.required],\r\n      modelID: [, Validators.required],\r\n      year: [, Validators.required],\r\n      color: ['', Validators.required],\r\n      registrationNo: ['', Validators.required],\r\n      checkLitre: [],\r\n      engineType: ['', Validators.required],\r\n      recommendedAmount: [''],\r\n      statusID: [1],\r\n      binaryImage: [''],\r\n      locationID: [, Validators.required],\r\n      userID: [, Validators.required],\r\n      gender: [''],\r\n      carType: ['', Validators.required],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      carsImages: [],\r\n      file: [''],\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.carsForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.customerPhone.setValue(obj.customerPhone);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.assembly.setValue(obj.assembly);\r\n    this.f.cityID.setValue(obj.cityID);\r\n    this.f.bodyColor.setValue(obj.bodyColor);\r\n    this.f.countryCode.setValue(obj.countryCode);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.transmition.setValue(obj.transmition);\r\n    this.f.modelID.setValue(obj.modelID);\r\n    this.f.makeID.setValue(obj.makeID);\r\n    this.f.year.setValue(obj.year);\r\n    this.f.checkLitre.setValue(obj.checkLitre);\r\n    this.f.kilometer.setValue(obj.kilometer);\r\n    this.f.fuelType.setValue(obj.fuelType);\r\n    this.f.engineType.setValue(obj.engineType);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.bodyType.setValue(obj.bodyType);\r\n    this.f.registrationNo.setValue(obj.registrationNo);\r\n    this.f.carSellID.setValue(obj.carSellID);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.statusID.setValue(obj.statusID === 1);\r\n    this.loadCarsImages(this.f.carsID.value);\r\n\r\n    if (obj.makeID != \"\") {\r\n      this.carsService.loadModel(obj.makeID).subscribe((res: any) => {\r\n        this.ModelList = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n\r\n  private loadMake() {\r\n    debugger\r\n    this.carsService.loadMake().subscribe((res: any) => {\r\n      this.MakeList = res;\r\n    });\r\n  }\r\n\r\n  onChange(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.carsService.loadModel(value).subscribe((res: any) => {\r\n      this.ModelList = res;\r\n    });\r\n  }\r\n  setSelectedCarSell() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.carSellID.setValue(sid);\r\n        this.carsService.getcarId(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  private loadCarsImages(id) {\r\n    debugger\r\n    this.carsService.loadCarsImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.carsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.carsForm.invalid) { return; }\r\n    this.loading = true;\r\n    //this.f.statusID.setValue(this.f.statusID.value === 1 ? true : false);\r\n    //this.f.features.setValue(this.selectedFeatureID == undefined ? \"\" : this.selectedFeatureID.toString());\r\n    if (parseInt(this.f.carSellID.value) === 0) {\r\n      //Insert location\r\n      this.carsService.insert(this.carsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    }\r\n    else {\r\n      //Update location\r\n      this.carsService.update(this.carsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  private loadBodyType() {\r\n    debugger\r\n    this.carsService.loadBodyType().subscribe((res: any) => {\r\n      this.BodyTypeList = res;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnMvY2Fyc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Cars } from 'src/app/_models/Cars';\r\nimport { CarsService } from 'src/app/_services/cars.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n//import { NgbdModalContent } from '../../sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-carslist',\r\n  templateUrl: './carslist.component.html',\r\n  styleUrls: ['./carslist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CarslistComponent implements OnInit {\r\n  data$: Observable<Cars[]>;\r\n  oldData: Cars[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n  \r\n  constructor(public service: CarsService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(carID) {\r\n     \r\n    this.router.navigate([\"admin/cars/edit\", carID]);\r\n  }\r\n\r\n  updateCars(cars, status) {\r\n    debugger\r\n    cars.statusID = status;\r\n    //Update customer\r\n    this.service.update(cars).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/cars']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n    debugger\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarSells, CarSellImages, Customers, Make, Models, Country, City, Feature } from 'src/app/_models/CarSell';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-carselldetails',\r\n  templateUrl: './carselldetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class CarSelldetailsComponent implements OnInit {\r\n  public carsell = new CarSells();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  reason = [\"\"];\r\n  public customerInfo = new Customers();\r\n  public makeInfo = new Make();\r\n  public modelInfo = new Models();\r\n  public countryInfo = new Country();\r\n  public cityInfo = new City();\r\n  public featureInfo = new Feature();\r\n  public images = new CarSellImages();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: CarSellService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loadCarSellImages(this.carsell.carSellID);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n  setSelectedOrder() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(carsell, status) {\r\n    debugger\r\n    carsell.statusID = status;\r\n    carsell.reason = this.reason;\r\n\r\n    //Update customer\r\n    this.service.updatestatus(carsell).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/carsell']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.carsell = obj.carsell;\r\n    this.customerInfo = obj.customer;\r\n    this.makeInfo = obj.make;\r\n    this.modelInfo = obj.model;\r\n    this.countryInfo = obj.country;\r\n    this.cityInfo = obj.city;\r\n    this.featureInfo = obj.feature;\r\n    this.images = obj.image;\r\n  }\r\n  private loadCarSellImages(carsell) {\r\n    debugger\r\n    this.service.loadCarSellImages(carsell).subscribe((res: any) => {\r\n      this.images = res;\r\n      //this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnNlbGwvY2Fyc2VsbGxpc3QvYWRkY2Fyc2VsbC9hZGRjYXJzZWxsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BodyTypeService } from '../../../../_services/bodyType.service';\r\n\r\n@Component({\r\n  selector: 'app-addcarsell',\r\n  templateUrl: './addcarsell.component.html',\r\n  styleUrls: ['./addcarsell.component.css']\r\n})\r\nexport class AddcarsellComponent implements OnInit {\r\n  submitted = false;\r\n  carSellForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  FeaturesList = [];\r\n  BodyTypeList = [];\r\n  ModelList = [];\r\n  CustomerList = [];\r\n  MakeList = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  selectedFeatureID: [];\r\n  selectedBodyTypeID = [];\r\n  selectedModelID = [];\r\n  selectedMakeID = [];\r\n  selectedCityID = [];\r\n  YearList = ['2023', '2022', '2021', '2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990'];\r\n  ButtonText = \"Save\";\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private carsellService: CarSellService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCarSellFeature();\r\n    this.loadBodyType();\r\n    this.loadMake();\r\n    //this.loadCustomer();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCarSell();\r\n  }\r\n\r\n  get f() { return this.carSellForm.controls; }\r\n\r\n  private createForm() {\r\n    this.carSellForm = this.formBuilder.group({\r\n      carSellID: 0,\r\n      customerID: [0],\r\n      customerPhone: [''],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      statusID: [1],\r\n      createdBy: [],\r\n      updatedBy: [],\r\n      isInspected: [false],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      carsellImages: [],\r\n      featureID: [null],\r\n      features: [],\r\n      registrationNo: ['', Validators.required],\r\n      bodyTypeID: ['', Validators.required],\r\n      bodyType: [''],\r\n      fuelType: ['', Validators.required],\r\n      engineType: ['', Validators.required],\r\n      kilometer: [0, Validators.required],\r\n      year: ['2023', Validators.required],\r\n      makeID: [, Validators.required],\r\n      modelID: [, Validators.required],\r\n      transmition: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      cityID: [, Validators.required],\r\n      countryCode: ['', Validators.required],\r\n      carSellAddID: 0,\r\n      bodyColor: ['', Validators.required],\r\n      assembly: ['', Validators.required],\r\n      file: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.carSellForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.customerPhone.setValue(obj.customerPhone);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.assembly.setValue(obj.assembly);\r\n\r\n    this.f.bodyColor.setValue(obj.bodyColor);\r\n    this.f.countryCode.setValue(obj.countryCode);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.transmition.setValue(obj.transmition);\r\n    this.f.modelID.setValue(obj.modelID);\r\n    this.f.makeID.setValue(obj.makeID);\r\n    this.f.year.setValue(obj.year);\r\n    this.f.kilometer.setValue(obj.kilometer);\r\n    this.f.fuelType.setValue(obj.fuelType);\r\n    this.f.engineType.setValue(obj.engineType);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.bodyType.setValue(obj.bodyType);\r\n    this.f.registrationNo.setValue(obj.registrationNo);\r\n    this.f.carSellID.setValue(obj.carSellID);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.statusID.setValue(obj.statusID === 1);\r\n    this.loadCarSellImages(this.f.carSellID.value);\r\n    if (obj.features != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.features;\r\n      this.selectedFeatureID = stringToConvert.split(',').map(Number);\r\n      this.f.features.setValue(obj.features);\r\n    }\r\n    if (obj.countryCode != \"\") {\r\n      //this.carsellService.loadCity(obj.countryCode).subscribe((res: any) => {\r\n      //  this.CityList = res;\r\n      //  this.f.cityID.setValue(obj.cityID);\r\n      //});\r\n      this.loadCity(obj.countryCode, 1);\r\n    }\r\n    if (obj.makeID != \"\") {\r\n      this.carsellService.loadModel(obj.makeID).subscribe((res: any) => {\r\n        this.ModelList = res;\r\n      });\r\n    }\r\n  }\r\n  private loadCarSellImages(id) {\r\n    debugger\r\n    this.carsellService.loadCarSellImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  private loadCarSellFeature() {\r\n    this.carsellService.loadFeature().subscribe((res: any) => {\r\n      this.FeaturesList = res;\r\n    });\r\n  }\r\n  private loadBodyType() {\r\n    this.carsellService.loadBodyType().subscribe((res: any) => {\r\n      this.BodyTypeList = res;\r\n    });\r\n  }\r\n\r\n  private loadMake() {\r\n    this.carsellService.loadMake().subscribe((res: any) => {\r\n      this.MakeList = res;\r\n    });\r\n  }\r\n  private loadCountry() {\r\n    debugger\r\n    this.carsellService.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n      if (!this.CountryList || this.CountryList.length === 0) {\r\n        this.CountryList = [{ name: 'Saudia Arabia', code: 'SA' }];\r\n      }\r\n      this.f.countryCode.setValue('SA');\r\n      this.loadCity(this.f.countryCode.value, 0);\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n  }\r\n  loadCity(obj, type) {\r\n    this.carsellService.loadCity(obj).subscribe((res: any) => {\r\n      this.CityList = res;\r\n      if (type == 0)\r\n        this.f.cityID.setValue(res[0].id);\r\n\r\n    });\r\n  }\r\n  onChange(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.carsellService.loadModel(value).subscribe((res: any) => {\r\n      this.ModelList = res;\r\n    });\r\n  }\r\n  setSelectedCarSell() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.carSellID.setValue(sid);\r\n        this.carsellService.getcarId(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.carSellForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.carSellForm.invalid) { return; }\r\n    this.loading = true;\r\n    //this.f.statusID.setValue(this.f.statusID.value === 1 ? true : false);\r\n    this.f.features.setValue(this.selectedFeatureID == undefined ? \"\" : this.selectedFeatureID.toString());\r\n    if (parseInt(this.f.carSellID.value) === 0) {\r\n      //Insert location\r\n      this.carsellService.insert(this.carSellForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.carsellService.update(this.carSellForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnNlbGwvY2Fyc2VsbGxpc3QvY2Fyc2VsbGxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CarSells } from 'src/app/_models/CarSell';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { NgbdModalContent } from '../../sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-carselllist',\r\n  templateUrl: './carselllist.component.html',\r\n  styleUrls: ['./carselllist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CarselllistComponent implements OnInit {\r\n  data$: Observable<CarSells[]>;\r\n  FeatureList =[];\r\n  oldData: CarSells[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n  \r\n  constructor(public service: CarSellService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    //this.loadLocations();\r\n  }\r\n  ngOnInit() {\r\n    //const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    //this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(CarSellID) {\r\n     \r\n    this.router.navigate([\"admin/carsell/edit\", CarSellID]);\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/carsell']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  //UpdateStatus(item, status) {\r\n  //  debugger\r\n  //  item.statusID = status;\r\n  //  //Update customer\r\n  //  this.service.updatestatus(item).subscribe(data => {\r\n\r\n  //    if (data != 0) {\r\n  //      this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n  //      this.router.navigate(['/admin/carsell']);\r\n  //    }\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to update record.\")\r\n  //  });\r\n  //}\r\n  \r\n\r\n  getData() {\r\n     debugger\r\n    this.service.getAllData();//(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(carsell) {\r\n    this.router.navigate([\"admin/carselldetails/view\", carsell]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      debugger\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n        debugger\r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LocationTimings, ArabicTimings } from '../../../../_models/Location';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { ImageuploadComponent } from '../../../../imageupload/imageupload.component';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  Images = [];\r\n  Image = [];\r\n  AmenitiesList = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  ServiceList = [];\r\n  LandmarkList = [];\r\n  Items = [];\r\n  selectedAmenitiesID = [];\r\n  selectedServiceID = [];\r\n  selectedLandmarkID = [];\r\n  ButtonText = \"Save\";\r\n  timings = [];\r\n  public locationTimings: Array<Object> = [\r\n    { name: 'Sunday', time: '' },\r\n    { name: 'Monday', time: '' },\r\n    { name: 'Tuesday', time: '' },\r\n    { name: 'Wednesday', time: '' },\r\n    { name: 'Thursday', time: '' },\r\n    { name: 'Friday', time: '' },\r\n    { name: 'Saturday', time: '' }\r\n  ];\r\n  time = [];\r\n  public arabicTimings: Array<Object> = [\r\n    { aName: 'الأحد', aTime: '' },\r\n    { aName: 'الإثنين', aTime: '' },\r\n    { aName: 'الثلاثاء', aTime: '' },\r\n    { aName: 'الأربعاء', aTime: '' },\r\n    { aName: 'الخميس', aTime: '' },\r\n    { aName: 'الجمعة', aTime: '' },\r\n    { aName: 'السبت', aTime: '' }\r\n  ];\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService,\r\n    private service: CarSellService,\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadAmenities();\r\n    this.loadService();\r\n    this.loadLandmark();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n\r\n  private createForm() {\r\n\r\n    this.locationForm = this.formBuilder.group({\r\n      locationID: 0,\r\n      userID: 0,\r\n      name: ['', Validators.required],\r\n      descripiton: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      arabicAddress: [''],\r\n      contactNo: ['', Validators.required],\r\n      arabicName: ['', Validators.required],\r\n      arabicDescription: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      minOrderAmount: [0],\r\n      latitude: ['', Validators.required],\r\n      longitude: ['', Validators.required],\r\n      statusID: [1],\r\n      customerStatusID: [1],\r\n      landmarkID: [],\r\n      businessType:[''],\r\n      gmaplink: [''],\r\n      lastUpdatedBy: [''],\r\n      lastUpdatedDate: [''],\r\n      isFeatured: false,\r\n      file: [''],\r\n      imagesSource: [''],\r\n      locationImages: [],\r\n      amenities: [],\r\n      service: [],\r\n      amenitiesID: [null],\r\n      serviceID: [null],\r\n      locationTimings: [],\r\n      arabicTimings: [],\r\n      cityID: 0,\r\n      countryID: ['', Validators.required],\r\n      brandThumbnailImage: [''],\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.locationForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.arabicAddress.setValue(obj.arabicAddress);\r\n    this.f.descripiton.setValue(obj.descripiton);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);\r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);\r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.userID.setValue(obj.userID);\r\n    this.f.gmaplink.setValue(obj.gmaplink);\r\n    this.f.landmarkID.setValue(obj.landmarkID);\r\n    this.f.businessType.setValue(obj.businessType);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.customerStatusID.setValue(obj.customerStatusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured === 1 ? true : false);\r\n\r\n    this.f.brandThumbnailImage.setValue(obj.brandThumbnailImage);\r\n    this.imgComp.imageUrl = obj.brandThumbnailImage;\r\n\r\n    this.loadItemImages(this.f.locationID.value);\r\n    this.f.locationTimings.setValue(obj.locationTimings);\r\n    this.locationTimings = obj.locationTimings;\r\n    this.f.arabicTimings.setValue(obj.arabicTimings);\r\n    this.arabicTimings = obj.arabicTimings;\r\n    this.f.brandThumbnailImage.setValue(obj.brandThumbnailImage);\r\n\r\n    if (obj.amenities != \"\") {\r\n      var stringToConvert = obj.amenities;\r\n      this.selectedAmenitiesID = stringToConvert.split(',').map(Number);\r\n      this.f.amenities.setValue(obj.amenities);\r\n    }\r\n    if (obj.service != \"\") {\r\n      var stringToConvert = obj.service;\r\n      this.selectedServiceID = stringToConvert.split(',').map(Number);\r\n      this.f.service.setValue(obj.service);\r\n    }\r\n\r\n    this.f.cityID.setValue(obj.cityID);\r\n    if (obj.countryID != \"\") {\r\n      this.loadCity(obj.countryID, 1);\r\n    }\r\n\r\n  }\r\n  private loadCountry() {\r\n    this.service.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n      if (!this.CountryList || this.CountryList.length === 0) {\r\n        this.CountryList = [{ name: 'Saudia Arabia', code: 'SA' }];\r\n      }\r\n      this.f.countryID.setValue('SA');\r\n      this.loadCity(this.f.countryID.value, 0);\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    debugger\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    this.loadCity(value, 1);\r\n    console.log(index);\r\n    console.log(value);\r\n  }\r\n  loadCity(obj, type) {\r\n    debugger\r\n    this.service.loadCity(obj).subscribe((res: any) => {\r\n      this.CityList = res;\r\n      //debugger\r\n      //if (type == 0)\r\n      //  this.f.cityID.setValue(res[0].id);\r\n      //else if (type == 1)\r\n      //  debugger\r\n      //  //var cityID = this.f.cityID;\r\n      //this.f.cityID.setValue(this.f.cityID);\r\n    });\r\n  }\r\n  private loadItemImages(id) {\r\n    this.locationService.loadLocationImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  private loadAmenities() {\r\n    this.locationService.loadAmenities().subscribe((res: any) => {\r\n      this.AmenitiesList = res;\r\n    });\r\n  }\r\n  private loadService() {\r\n    this.locationService.loadService().subscribe((res: any) => {\r\n      this.ServiceList = res;\r\n    });\r\n  }\r\n  private loadLandmark() {\r\n    this.locationService.loadLandmark().subscribe((res: any) => {\r\n      this.Items = res;\r\n    });\r\n  }\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locationTimings.setValue(this.locationTimings);\r\n    this.f.arabicTimings.setValue(this.arabicTimings);\r\n    this.f.amenities.setValue(this.selectedAmenitiesID == undefined ? \"\" : this.selectedAmenitiesID.toString());\r\n    this.f.service.setValue(this.selectedServiceID == undefined ? \"\" : this.selectedServiceID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.customerStatusID.setValue(this.f.customerStatusID.value === true ? 1 : 2);\r\n    this.f.isFeatured.setValue(this.f.isFeatured.value === 1 ? true : false);\r\n    this.f.brandThumbnailImage.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n      //Insert location\r\n      console.log(JSON.stringify(this.locationForm.value));\r\n    }\r\n    else {\r\n      //Update location     \r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ConfirmationDialogService } from '../../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n   \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n     \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVyL2N1c3RvbWVycy9hZGRjdXN0b21lcnMvYWRkY3VzdG9tZXIuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger;\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/customer/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Customers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\n\r\n\r\n//import {\r\n//  ChartComponent,\r\n//  ApexAxisChartSeries,\r\n//  ApexChart,\r\n//  ApexXAxis,\r\n//  ApexTitleSubtitle,\r\n//  ApexMarkers,\r\n//  AnnotationStyle,\r\n//  ApexDataLabels,\r\n//  ApexStroke,\r\n//  ApexGrid,\r\n//  ApexYAxis,\r\n//  ApexAnnotations,\r\n//  ApexNonAxisChartSeries,\r\n//  ApexFill,\r\n//  ApexLegend,\r\n//  ApexTooltip,\r\n//  ApexPlotOptions,\r\n//  ApexResponsive,\r\n//  ApexStates,\r\n//  ApexTheme\r\n//} from \"ng-apexcharts\";\r\nimport { DashboadService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n//export type ChartOptions = {\r\n//  series: ApexAxisChartSeries;\r\n//  chart: ApexChart;\r\n//  xaxis: ApexXAxis;\r\n//  title: ApexTitleSubtitle;\r\n//};\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  //@ViewChild(\"chart\") chart: ChartComponent;\r\n  //public chartOptions;  \r\n  //public chartOptionsDonut;\r\n  selectedLocations = [];\r\n  dashboardSummary=new DashboardSummary();\r\n  \r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  ngOnInit() {\r\n    // const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);   \r\n    // this._datepicker.fromDate=date;\r\n    // this.GetDataDashboard();\r\n    this.GetDashboard();\r\n  }\r\n \r\n  constructor(public service: DashboadService,public ls: LocalStorageService) {\r\n\r\n  }\r\n  //BindTodaysSales(sales, timeSlot) {\r\n  //  this.chartOptions = {\r\n  //    series: [\r\n  //      {\r\n  //        name: \"Sales\",\r\n  //        data: sales\r\n  //      }\r\n  //    ],\r\n  //    chart: {\r\n  //      height: 300,\r\n  //      type: \"bar\"\r\n  //    },\r\n  //    title: {\r\n  //      text: \"\"\r\n  //    },\r\n  //    xaxis: {\r\n  //      categories: timeSlot\r\n  //    }\r\n  //  };\r\n\r\n  //}\r\n  //BindMAEN(maen) {\r\n    \r\n  //  this.chartOptionsDonut = {\r\n  //    series: [maen.morning, maen.afterNoon, maen.evening, maen.night],\r\n  //    chart: {\r\n  //      type: \"donut\"\r\n  //    },\r\n  //    labels: [\"Morning\", \"Evening\", \"Afternoon\", \"Night\"],\r\n  //    responsive: [\r\n  //      {\r\n  //        breakpoint: 250,\r\n  //        options: {\r\n  //          colors: ['#2E93fA', '#66DA26', '#546E7A', '#E91E63', '#FF9800'],\r\n  //          chart: {\r\n  //            width: 100\r\n  //          },\r\n  //          legend: {\r\n  //            position: \"bottom\"\r\n  //          }\r\n  //        }\r\n  //      }\r\n  //    ]\r\n  //  };\r\n  //}\r\n\r\n  GetDashboard() {\r\n    debugger\r\n    this.service.getAllData().subscribe((res: any) => {\r\n      debugger\r\n      this.dashboardSummary = res[0];\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FeaturesService } from 'src/app/_services/features.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addfeature',\r\n  templateUrl: './addfeature.component.html',\r\n})\r\nexport class AddfeatureComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  featureForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private featureService: FeaturesService,\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedFeature();\r\n  }\r\n\r\n  get f() { return this.featureForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.featureForm = this.formBuilder.group({\r\n      featureID: 0,\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      displayOrder: [],\r\n      statusID: [true],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.image.setValue(obj.image);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedFeature() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.featureID.setValue(sid);\r\n        this.featureService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.featureForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.featureForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n\r\n    if (parseInt(this.f.featureID.value) === 0) {\r\n      //Insert services\r\n      this.featureService.insert(this.featureForm.value).subscribe(data => {\r\n        debugger\r\n        if (data != 0) {\r\n          debugger\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/features']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n    else {\r\n      //Update banner\r\n      this.featureService.update(this.featureForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/features']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2ZlYXR1cmVzL2ZlYXR1cmVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Features } from '../../_models/Feature';\r\nimport { FeaturesService } from '../../_services/features.service';\r\nimport { ConfirmationDialogService } from '../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-featurelist',\r\n  templateUrl: './featurelist.component.html',\r\n  styleUrls: ['./featurelist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class FeaturelistComponent implements OnInit {\r\n  data$: Observable<Features[]>;\r\n  FeatureList = [];\r\n  oldData: Features[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: FeaturesService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  Edit(featureID) {\r\n    this.router.navigate([\"admin/features/edit\", featureID]);\r\n  }\r\n\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    if (await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true) {\r\n      this.service.delete(item).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n          this.getData();\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n    }\r\n    else { }\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/features']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(carsell) {\r\n    this.router.navigate([\"admin/carselldetails/view\", carsell]);\r\n  }\r\n\r\n  Filter() {\r\n\r\n    this.getData();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addaddons',\r\n  templateUrl: './addaddons.component.html',\r\n  styleUrls: ['./addaddons.component.css']\r\n})\r\nexport class AddaddonsComponent implements OnInit {\r\n  submitted = false;\r\n  addonForm: FormGroup;\r\n  loading = false;\r\n  loadingaddon = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private addonsService: AddonsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedaddon();\r\n  }\r\n\r\n  get f() { return this.addonForm.controls; }\r\n\r\n  private createForm() {\r\n    this.addonForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      addonID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.addonID.setValue(obj.addonID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedaddon() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingaddon = true;\r\n        this.f.addonID.setValue(sid);\r\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingaddon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.addonForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.addonForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.addonID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.addonForm.value));\r\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    //public tss: ToastrService,\r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n         debugger;\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      debugger;\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        //.pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',  \r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  \r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID,0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders= res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      //.pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n\r\n        this.getData(this.selectedLocations.toString());\r\n    \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getData(locaionIDs) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionIDs, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          \r\n          this.orderDetails = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());   \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      //.pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.selectedLocation);\r\n    this.loadLocations();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { reviews } from 'src/app/_models/Reviews';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReviewsService } from 'src/app/_services/reviews.service';\r\n\r\n@Component({\r\n  selector: 'app-reviews',\r\n  templateUrl: './reviews.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class ReviewsComponent implements OnInit {\r\n  data$: Observable<reviews[]>;  \r\n  oldData: reviews[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ReviewsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new OrderCheckout();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid, this.selectedBrand).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n  \r\n@Component({\r\n  selector: 'app-modal-content',\r\n  templateUrl: './modal-OrderDetail.component.html'\r\n})\r\nexport class ModalContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  } \r\n\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n\r\n  selector: 'app-orderdetails', \r\n  // templateUrl:'./modal-OrderDetail.component.html'\r\n  template: `\r\n <div class=\"modal-header\">\r\n    \r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n   \r\n<div class=\"card shadow mb-4\">\r\n  <div class=\"card-header py-3\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n              <h6 class=\"m-0 font-weight-bold text-orange\">Order Details - <span class=\"badge badge-info\"> {{ dataObj.order.statusID == 100 ? \"Delivered\" : dataObj.order.statusID==101 ?\"Order confirmed\" : dataObj.order.statusID == 102? \"Order prepared\" : dataObj.order.statusID == 103? \" Order out for delivery\" : dataObj.order.statusID == 104? \"Order Cancelled\" : \"-\" }}</span></h6>\r\n          </div>\r\n          <div class=\"col-md-6 text-right\">\r\n\r\n          </div>\r\n      </div>\r\n      <hr/>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\" *ngIf=\"dataObj.order.statusID!=100\">\r\n              <div class=\"card border-left-info shadow mb-4\">\r\n                  <div class=\"card-header border-bottom-0\">Order Status</div>\r\n                  <div class=\"card-body\">\r\n                    <div class=\"\">\r\n                      <button class=\"btn btn-warning mr-1\" (click)=\"updateOrder(dataObj.order,102)\" *ngIf=\"dataObj.order.statusID!=102\">\r\n                        <i class=\"fas fa-check-circle\"></i> Prepared\r\n                      </button>\r\n                      <button class=\"btn btn-info mr-1\" (click)=\"updateOrder(dataObj.order,103)\" *ngIf=\"dataObj.order.statusID!=103\">\r\n                        <i class=\"fas fa-truck\"></i> Out For Delivery\r\n                      </button>\r\n                      <button class=\"btn btn-success mr-1\" (click)=\"updateOrder(dataObj.order,100)\" *ngIf=\"dataObj.order.statusID!=100\">\r\n                        <i class=\"fas fa-people-carry\"></i> Delivered\r\n                      </button>\r\n                      <button class=\"btn btn-danger mr-1\" (click)=\"updateOrder(dataObj.order,104)\">\r\n                        <i class=\"fas fa-people-carry\"></i> Cancelled\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-6 mb-4\">\r\n\r\n              <div class=\"card border-left-success shadow mb-4\">\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Customer Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                    Customer Name\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.name }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                   Email\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.email }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                    Address\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.addressNickName }}</div>\r\n\r\n\r\n\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                  Google Address\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.address }} | Latitude: {{ dataObj.customerOrders.latitude }}| Longitude: {{ dataObj.customerOrders.longitude }}</div>\r\n\r\n\r\n\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                     Contact Number\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.mobile }}</div>\r\n                          </div>\r\n                          \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"card border-left-warning shadow \">\r\n\r\n                  <div class=\"card-body\">\r\n\r\n                      <!-- Report summary card example-->\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Order Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Order No\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderNo }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Transaction No\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.transactionNo }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Order Type\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderType=='1'?'Home': dataObj.order.orderType=='2'?'Work':'Other' }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                        Order Date\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderDate | date }}</div>\r\n                          </div>\r\n                          \r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                       Status\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div class=\"mr-2\">\r\n                                  {{ dataObj.order.statusID == 100 ? \"Delivered\" : dataObj.order.statusID==101 ?\"Order confirmed\" : dataObj.order.statusID == 102? \"Order prepared\" : dataObj.order.statusID == 103? \" Order out for delivery\" : dataObj.order.statusID == 104? \"Order Cancelled\" : \"-\" }}\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-6 mb-4\">\r\n              <div class=\"card border-left-danger shadow mb-4\">\r\n\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Billing Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Amount Total\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.amountTotal | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Discount\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.discountAmount | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Tax\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.tax | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Service Charges\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.serviceCharges | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                         Grand Total\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.grandTotal | number : '1.2-2')}}</div>\r\n                          </div>\r\n\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"card border-left-primary shadow\">\r\n\r\n                  <div class=\"card-body\">\r\n                      <div class=\"tile-body p-0 table-responsive \">\r\n                          <table class=\"table table-striped\">\r\n                              <thead>\r\n                                  <tr class=\"table-header\">\r\n                                      <th width=\"50%\">Name </th>\r\n                                      <th width=\"25\">Quantity</th>\r\n                                      <th width=\"25\">Price</th>\r\n                                  </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                  <tr *ngFor=\"let item of dataObj.orderDetails \">\r\n                                      <td> {{item.name}}\r\n                                          <tr *ngFor=\"let item1 of item.orderDetailModifiers \">\r\n                                              <td class=\"badge badge-pill\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\r\n\r\n                                          </tr>\r\n                                      </td>\r\n                                      <td> {{item.quantity}} </td>\r\n                                      <td> {{item.price}} </td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table>\r\n                      </div>\r\n\r\n                  </div>\r\n\r\n              </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n</div>    \r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n  </div>\r\n\r\n`,\r\n \r\n  \r\n})\r\nexport class NgbdModalContent {\r\n  \r\n  @Input() name;\r\n  dataObj: any = []; \r\n  constructor(public activeModal: NgbActiveModal,public service: OrdersService,\r\n    public ts: ToastService,\r\n    public router: Router) {}    \r\n\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails } from 'src/app/_models/Orders';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalContent } from './modal-content/ngbd-OrderDetail-content.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class OrdersComponent implements OnInit {\r\n  data$: Observable<Orders[]>;\r\n  oldData: Orders[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesorders: Orders[] = [];\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: OrdersService,private modalService: NgbModal,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loadLocations();\r\n  }\r\n\r\n  open(orders) \r\n  {    \r\n            \r\n    this.service.getById(orders, this.selectedBrand).subscribe(res => {          \r\n      console.log(res);\r\n      const modalRef = this.modalService.open(NgbdModalContent);\r\n      modalRef.componentInstance.dataObj = res;      \r\n    });        \r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  getData(locaionID) {\r\n     \r\n    this.service.getAllData(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(orders) {\r\n    this.router.navigate([\"admin/orders/view\", orders]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n          \r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FtZW5pdGllcy9hZGRhbWVuaXRpZXMvYWRkYW1lbml0aWVzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AmenitiesService } from 'src/app/_services/amenities.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addamenities',\r\n  templateUrl: './addamenities.component.html',\r\n  styleUrls: ['./addamenities.component.css']\r\n})\r\nexport class AddamenitiesComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  amenitiesForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private amenitiesService: AmenitiesService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.amenitiesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.amenitiesForm = this.formBuilder.group({\r\n      amenitiesID: 0,\r\n      name: ['', Validators.required],   \r\n      arabicName:[''],   \r\n      statusID: [true],      \r\n      image: [''],            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.amenitiesID.setValue(obj.amenitiesID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.amenitiesID.setValue(sid);\r\n        this.amenitiesService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.amenitiesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.amenitiesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.amenitiesID.value) === 0) {\r\n      //Insert amenities\r\n      console.log(JSON.stringify(this.amenitiesForm.value));\r\n      this.amenitiesService.insert(this.amenitiesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/amenities']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.amenitiesService.update(this.amenitiesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/amenities']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FtZW5pdGllcy9hbWVuaXRpZXMuY29tcG9uZW50LmNzcyJ9 */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { Amenities } from 'src/app/_models/Amenities';\r\nimport { AmenitiesService } from 'src/app/_services/amenities.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-amenities',\r\n  templateUrl: './amenities.component.html',\r\n  styleUrls: ['./amenities.component.css']\r\n})\r\n\r\nexport class AmenitiesComponent implements OnInit {\r\n  data$: Observable<Amenities[]>;  \r\n  oldData: Amenities[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: AmenitiesService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    //  this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(amenities) {\r\n    debugger\r\n        this.router.navigate([\"admin/amenities/edit\", amenities]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FwcHNldHRpbmdzL2FwcHNldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  styleUrls: ['./appsettings.component.css']\r\n})\r\nexport class AppsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n  loadingCategory = false;  \r\n  loading = false;\r\n  constructor(  \r\n    public ts :ToastService,\r\n    private appsettingService: AppsettingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,    \r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService\r\n    ) { \r\n      this.createForm();\r\n     \r\n      brandID: this.ls.getSelectedBrand().brandID;\r\n      this.setSelectedCategory();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n \r\n\r\n  get f() { return this.categoryForm.controls; }\r\n  \r\n  private createForm() {\r\n   \r\n    this.categoryForm = this.formBuilder.group({\r\n      branchName: ['', Validators.required],\r\n      branchAddress: [''],\r\n      branchTiming: [''],\r\n      statusID: [true],\r\n      deliveryNo: [''],\r\n      whatsappNo:[''],\r\n      discount: 0,\r\n      discountdescription:[''],          \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      ID: 0,\r\n      AppInfoID: 0,\r\n      appDescription:[''],     \r\n      facebook:[''],\r\n      twitter:[''],\r\n      instagram:[''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\ndebugger;\r\n    this.f.branchName.setValue(obj.branchName);\r\n    this.f.branchAddress.setValue(obj.branchAddress);\r\n    this.f.branchTiming.setValue(obj.branchTiming);\r\n    this.f.deliveryNo.setValue(obj.deliveryNo);\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.discountdescription.setValue(obj.discountdescription);\r\n    this.f.whatsappNo.setValue(obj.whatsappNo);\r\n    this.f.appDescription.setValue(obj.appDescription);\r\n    this.f.facebook.setValue(obj.facebook);\r\n    this.f.twitter.setValue(obj.twitter);\r\n    this.f.instagram.setValue(obj.instagram);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);    \r\n    this.f.ID.setValue(obj.id);\r\n    this.f.appInfoID.setValue(obj.appInfoID);\r\n  }\r\n\r\n  setSelectedCategory() {\r\n    \r\n    this.loadingCategory = true;\r\n    this.appsettingService.getById(this.f.brandID.value).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingCategory = false;\r\n    });\r\n  }\r\n  onSubmit() {    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    debugger;\r\n    if (parseInt(this.f.ID.value) === 0) {\r\n      //Insert appsetting\r\n      this.appsettingService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update appsetting\r\n      this.appsettingService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvbmZpcm0vY29uZmlybS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n\r\n constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n//import { Observable } from 'rxjs/Observable';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmComponent } from './confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmationDialogService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Delivery } from 'src/app/_models/Delivery';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  data$: Observable<Delivery[]>;  \r\n  oldData: Delivery[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DeliveryService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(delivery) {\r\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { alternateimageComponent } from 'src/app/imageupload/alternateimage.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DiscountService } from 'src/app/_services/discount.service';\r\nimport { LocationsService } from '../../../../_services/locations.service';\r\nimport { thumbnailimageComponent } from '../../../../imageupload/thumbnailimage.component';\r\n\r\n@Component({\r\n  selector: 'app-adddiscount',\r\n  templateUrl: './adddiscount.component.html',\r\n})\r\nexport class AdddiscountComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  discountForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  LocationList = [];\r\n  selectedLocationID = [];\r\n  fromTime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  toTime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  Images = [];\r\n\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  @ViewChild(thumbnailimageComponent, { static: true }) thmbimg;\r\n  @ViewChild(alternateimageComponent, { static: true }) arbimg;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private discountService: DiscountService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.discountForm.controls; }\r\n\r\n  private createForm() {\r\n    this.discountForm = this.formBuilder.group({\r\n      discountID: 0,\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      arabicName: [''],\r\n      arabicDescription: [''],\r\n      toDate: ['', Validators.required],\r\n      toTime: [''],\r\n      backgroundColor: [''],\r\n      fontColor: [''],\r\n      fromDate: ['', Validators.required],\r\n      fromTime: [''],\r\n      statusID: [true],\r\n      image: [''],\r\n      thumbnailImage: [''],\r\n      arabicImage: [''],\r\n      locationID: [null],\r\n      locations: [],\r\n     // file: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.discountID.setValue(obj.discountID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.arabicImage.setValue(obj.arabicImage);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.toTime.setValue(obj.toTime);\r\n    this.f.fromTime.setValue(obj.fromTime);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.backgroundColor.setValue(obj.backgroundColor);\r\n    this.f.fontColor.setValue(obj.fontColor);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.thmbimg.thumbnailimageimageUrl = obj.thumbnailImage;\r\n    this.arbimg.alternateimageUrl = obj.arabicImage;\r\n    //this.arbimg.alternateimageUrl = obj.arabicImage;\r\n    this.fromTime = { hour: new Date(\"1/1/1900 \" + obj.fromTime).getHours(), minute: new Date(\"1/1/1900 \" + obj.fromTime).getMinutes() };\r\n    this.toTime = { hour: new Date(\"1/1/1900 \" + obj.toTime).getHours(), minute: new Date(\"1/1/1900 \" + obj.toTime).getMinutes() };\r\n    if (obj.locations != \"\") {\r\n      var stringToConvert = obj.locations;\r\n      this.selectedLocationID = stringToConvert.split(',').map(Number);\r\n      this.f.locations.setValue(obj.locations);\r\n    }\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.discountID.setValue(sid);\r\n        this.discountService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadLocations() {\r\n    this.locationService.getAllLocations().subscribe((res: any) => {\r\n      this.LocationList = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.discountForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.fromTime.setValue(this.fromTime.hour + \":\" + this.fromTime.minute);\r\n    this.f.toTime.setValue(this.toTime.hour + \":\" + this.toTime.minute);\r\n    if (this.discountForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locations.setValue(this.selectedLocationID == undefined ? \"\" : this.selectedLocationID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    this.f.arabicImage.setValue(this.arbimg.alternateimageUrl);\r\n    this.f.thumbnailImage.setValue(this.thmbimg.thumbnailimageimageUrl);\r\n\r\n    if (parseInt(this.f.discountID.value) === 0) {\r\n      //Insert services\r\n      this.discountService.insert(this.discountForm.value).subscribe(data => {\r\n        debugger\r\n        if (data != 0) {\r\n          debugger\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/discount']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.discountService.update(this.discountForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/discount']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Discount } from 'src/app/_models/Discount';\r\nimport { DiscountService } from 'src/app/_services/discount.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-discount',\r\n  templateUrl: './discount.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class DiscountComponent implements OnInit {\r\n  data$: Observable<Discount[]>;\r\n  oldData: Discount[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: DiscountService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n \r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(discount) {\r\n    this.router.navigate([\"admin/discount/edit\", discount]);\r\n  }\r\n\r\n   Delete(obj) {\r\n     this.service.delete(obj).subscribe((res: any) => {\r\n       if (res != 0) {\r\n         this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n         this.getData();\r\n       }\r\n       else\r\n         this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n     }, error => {\r\n       this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n     });\r\n   }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2xhbmRtYXJrcy9hZGRsYW5kbWFyay9hZGRsYW5kbWFyay5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LandmarkService } from 'src/app/_services/landmark.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addlandmark',\r\n  templateUrl: './addlandmark.component.html',\r\n  styleUrls: ['./addlandmark.component.css']\r\n})\r\nexport class AddlandmarkComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  landmarkForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private landmarkService: LandmarkService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    debugger\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.landmarkForm.controls; }\r\n\r\n  private createForm() {\r\n    this.landmarkForm = this.formBuilder.group({\r\n      landmarkID: 0,\r\n      name: ['', Validators.required],    \r\n      arabicName:[''],  \r\n      statusID: [true],      \r\n      image: [''],            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n     this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.landmarkID.setValue(obj.landmarkID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.landmarkID.setValue(sid);\r\n        this.landmarkService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.landmarkForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.landmarkForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.landmarkID.value) === 0) {\r\n      //Insert landmark\r\n      console.log(JSON.stringify(this.landmarkForm.value));\r\n      this.landmarkService.insert(this.landmarkForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/landmarks']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.landmarkService.update(this.landmarkForm.value).subscribe(data => {\r\n        debugger\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/landmarks']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2xhbmRtYXJrcy9sYW5kbWFyay5jb21wb25lbnQuY3NzIn0= */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LandmarkService } from 'src/app/_services/landmark.service';\r\nimport { Landmark } from 'src/app/_models/Landmark';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n@Component({\r\n  selector: 'app-landmark',\r\n  templateUrl: './landmark.component.html',\r\n  styleUrls: ['./landmark.component.css']\r\n})\r\n\r\nexport class LandmarkComponent implements OnInit {\r\n  data$: Observable<Landmark[]>;  \r\n  oldData: LandmarkService[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LandmarkService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  debugger;\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(landmark) {\r\n    debugger\r\n        this.router.navigate([\"admin/landmarks/edit\", landmark]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if(res!=0){\r\n  //       this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9hZGRvZmZlcnMvYWRkb2ZmZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addoffers',\r\n  templateUrl: './addoffers.component.html',\r\n  styleUrls: ['./addoffers.component.css']\r\n})\r\nexport class AddoffersComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  offersForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private offersService: OffersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.offersForm.controls; }\r\n\r\n  private createForm() {\r\n    this.offersForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      offerID: 0,\r\n      image: [''],\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.offerID.setValue(obj.offerID);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.offerID.setValue(sid);\r\n        this.offersService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.offersForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.offersForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    this.f.fromDate.setValue(this.parseDate(this._datepicker.fromDate));\r\n    this.f.toDate.setValue(this.parseDate(this._datepicker.toDate));\r\n\r\n    if (parseInt(this.f.offerID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.offersService.insert(this.offersForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.offersService.update(this.offersForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Offers } from 'src/app/_models/Offers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OffersComponent implements OnInit {\r\n  data$: Observable<Offers[]>;\r\n  oldData: Offers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: OffersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/offers/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NlcnZpY2VzL2FkZHNlcnZpY2VzL2FkZHNlcnZpY2VzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ServicesService } from 'src/app/_services/services.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addservices',\r\n  templateUrl: './addservices.component.html',\r\n  styleUrls: ['./addservices.component.css']\r\n})\r\nexport class AddservicesComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  serviceForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private servicesService: ServicesService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.serviceForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.serviceForm = this.formBuilder.group({\r\n      serviceID: 0,\r\n      serviceTitle: ['', Validators.required],\r\n      serviceDescription: [''],    \r\n      arabicServiceTitle: [''],\r\n      arabicServiceDescription: [''],  \r\n      displayOrder: [0],      \r\n      statusID: [true],      \r\n      image: [''],   \r\n      type: ['']            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.serviceTitle.setValue(obj.serviceTitle);\r\n    this.f.arabicServiceTitle.setValue(obj.arabicServiceTitle);\r\n    this.f.serviceID.setValue(obj.serviceID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.serviceDescription.setValue(obj.serviceDescription);\r\n    this.f.arabicServiceDescription.setValue(obj.arabicServiceDescription);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.serviceID.setValue(sid);\r\n        this.servicesService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.serviceForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.serviceForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.serviceID.value) === 0) {\r\n      debugger\r\n      //Insert services\r\n      console.log(JSON.stringify(this.serviceForm.value));\r\n      this.servicesService.insert(this.serviceForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/services']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.servicesService.update(this.serviceForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/services']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbXBvbmVudC5jc3MifQ== */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Services } from 'src/app/_models/Services';\r\nimport { ServicesService } from 'src/app/_services/services.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n \r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css']\r\n})\r\n\r\nexport class ServiceComponent implements OnInit {\r\n  data$: Observable<Services[]>;  \r\n  oldData: Services[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: ServicesService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(services) {\r\n    debugger\r\n        this.router.navigate([\"admin/services/edit\", services]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if(res!=0){\r\n  //       this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NldHRpbmcvYWRkc2V0dGluZy9hZGRzZXR0aW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { alternateimageComponent } from 'src/app/imageupload/alternateimage.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { SettingService } from 'src/app/_services/setting.service';\r\nimport { LocationsService } from '../../../../_services/locations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addsetting',\r\n  templateUrl: './addsetting.component.html',\r\n  styleUrls: ['./addsetting.component.css']\r\n})\r\nexport class AddsettingComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  settingForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  LocationList = [];\r\n  selectedLocationID = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  @ViewChild(alternateimageComponent, { static: true }) altimg;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private settingService: SettingService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.settingForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.settingForm = this.formBuilder.group({\r\n      id: 0,\r\n      title: ['', Validators.required],\r\n      description: [''],\r\n      arabicTitle: [''],\r\n      arabicDescription: [''],\r\n      displayOrder: [0],\r\n      pageName: [''],\r\n      type: [''],\r\n      statusID: [true],\r\n      image: [''],\r\n      alternateImage: [''],\r\n      locationID: [null],\r\n      locations: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.title.setValue(obj.title);\r\n    this.f.arabicTitle.setValue(obj.arabicTitle);\r\n    this.f.id.setValue(obj.id);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.alternateImage.setValue(obj.alternateImage);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.pageName.setValue(obj.pageName);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.altimg.alternateimageUrl = obj.alternateImage;\r\n\r\n    if (obj.locations != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.locations;\r\n      this.selectedLocationID = stringToConvert.split(',').map(Number);\r\n      this.f.locations.setValue(obj.locations);\r\n    }\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.id.setValue(sid);\r\n        this.settingService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadLocations() {\r\n    debugger\r\n    this.locationService.getAllLocations().subscribe((res: any) => {\r\n      this.LocationList = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.settingForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.settingForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locations.setValue(this.selectedLocationID == undefined ? \"\" : this.selectedLocationID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    this.f.alternateImage.setValue(this.altimg.alternateimageUrl);\r\n\r\n\r\n    if (parseInt(this.f.id.value) === 0) {\r\n      debugger\r\n      //Insert services\r\n      console.log(JSON.stringify(this.settingForm.value));\r\n      this.settingService.insert(this.settingForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/setting']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.settingService.update(this.settingForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/setting']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { setting } from 'src/app/_models/Setting';\r\nimport { SettingService } from 'src/app/_services/setting.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SettingComponent implements OnInit {\r\n  data$: Observable<setting[]>;\r\n  oldData: setting[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: SettingService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n \r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(setting) {\r\n    this.router.navigate([\"admin/setting/edit\", setting]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if (res != 0) {\r\n  //       this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //       this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ConfirmationDialogService } from './admin/settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n \r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule, NgbTimepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { thumbnailimageComponent } from './imageupload/thumbnailimage.component';\r\nimport { alternateimageComponent } from './imageupload/alternateimage.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\nimport { CustomersComponent } from './admin/customer/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/customer/customers/addcustomers/addcustomer.component';\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\n//import { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { OffersComponent } from './admin/settings/offers/offers.component';\r\nimport { AddoffersComponent } from './admin/settings/offers/addoffers/addoffers.component';\r\nimport { OrdersComponent } from './admin/sales/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/sales/orderdetails/orderdetails.component';\r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\n//import { AdddeliveryComponent } from './admin/settings/Delivery/adddelivery/adddelivery.component';\r\nimport { AppsettingsComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\nimport { ModalContentComponent } from './admin/sales/orders/modal-content/modal-OrderDetail.component';\r\nimport { NgbdModalContent } from './admin/sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nimport { AmenitiesComponent } from './admin/settings/amenities/amenities.component';\r\nimport { AddamenitiesComponent } from './admin/settings/amenities/addamenities/addamenities.component';\r\nimport { AddlandmarkComponent } from './admin/settings/landmarks/addlandmark/addlandmark.component';\r\nimport { LandmarkComponent } from './admin/settings/landmarks/landmark.component';\r\nimport { AddservicesComponent } from './admin/settings/services/addservices/addservices.component';\r\nimport { ServiceComponent } from './admin/settings/services/services.component';\r\nimport { SettingComponent } from './admin/settings/setting/setting.component';\r\nimport { AddsettingComponent } from './admin/settings/setting/addsetting/addsetting.component';\r\nimport { ConfirmComponent } from './admin/settings/confirm/confirm.component';\r\nimport { ConfirmationDialogService } from './admin/settings/confirm/confirmation-dialog.service';\r\nimport { CarselllistComponent } from './admin/carsell/carselllist/carselllist.component';\r\nimport { CarSelldetailsComponent } from './admin/carsell/carselldetails/carselldetails.component';\r\nimport { AddcarsellComponent } from './admin/carsell/carselllist/addcarsell/addcarsell.component';\r\nimport { ReviewsComponent } from './admin/reviews/reviews.component';\r\nimport { DiscountComponent } from './admin/settings/discount/discount.component';\r\nimport { AdddiscountComponent } from './admin/settings/discount/add/adddiscount.component';\r\nimport { FeaturelistComponent } from './admin/features/featurelist.component';\r\nimport { AddfeatureComponent } from './admin/features/add/addfeature.component';\r\n\r\nimport { BodyTypeComponent } from './admin/bodytype/bodytype.component';\r\nimport { AddbodyTypeComponent } from './admin/bodytype/add/addbodyType.component';\r\n\r\nimport { BloglistComponent } from './admin/blogs/blog.component';\r\nimport { AddBlogComponent } from './admin/blogs/add/addblog.component';\r\n\r\nimport { CarslistComponent } from './admin/cars/carslist.component';\r\nimport { AddcarsComponent } from './admin/cars/addcars/addcars.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    alternateimageComponent,\r\n    thumbnailimageComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    OffersComponent,\r\n    AddoffersComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    OrdersComponent,\r\n    OrderdetailsComponent,\r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    //AdddeliveryComponent,\r\n    AppsettingsComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    ModalContentComponent,\r\n    NgbdModalContent,\r\n    AmenitiesComponent,\r\n    AddamenitiesComponent,\r\n    LandmarkComponent,\r\n    AddlandmarkComponent,\r\n    AddservicesComponent,\r\n    ServiceComponent,\r\n    SettingComponent,\r\n    AddsettingComponent,\r\n    ConfirmComponent,\r\n    CarselllistComponent,\r\n    AddcarsellComponent,\r\n    ReviewsComponent,\r\n    DiscountComponent,\r\n    AdddiscountComponent,\r\n    CarSelldetailsComponent,\r\n    FeaturelistComponent,\r\n    AddfeatureComponent,\r\n    BodyTypeComponent,\r\n    AddbodyTypeComponent,\r\n    BloglistComponent,\r\n    AddBlogComponent,\r\n    CarslistComponent,\r\n    AddcarsComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    //NgApexchartsModule,\r\n\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          { path: 'orders', component: OrdersComponent },\r\n          { path: 'orders/add', component: OrderdetailsComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'customer', component: CustomersComponent },\r\n          { path: 'customer/add', component: AddcustomerComponent },\r\n          { path: 'customer/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'banner', component: BannerComponent },\r\n          { path: 'banner/add', component: AddbannerComponent },\r\n          { path: 'banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'offers', component: OffersComponent },\r\n          { path: 'offers/add', component: AddoffersComponent },\r\n          { path: 'offers/edit/:id', component: AddoffersComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n          // { path: 'delivery', component: DeliveryComponent },\r\n          // { path: 'delivery/add', component: AdddeliveryComponent },\r\n          // { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'appsettings', component: AppsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'amenities', component: AmenitiesComponent },\r\n          { path: 'amenities/add', component: AddamenitiesComponent },\r\n          { path: 'amenities/edit/:id', component: AddamenitiesComponent },\r\n\r\n          { path: 'landmarks', component: LandmarkComponent },\r\n          { path: 'landmarks/add', component: AddlandmarkComponent },\r\n          { path: 'landmarks/edit/:id', component: AddlandmarkComponent },\r\n\r\n          { path: 'services', component: ServiceComponent },\r\n          { path: 'services/add', component: AddservicesComponent },\r\n          { path: 'services/edit/:id', component: AddservicesComponent },\r\n\r\n          { path: 'setting', component: SettingComponent },\r\n          { path: 'setting/add', component: AddsettingComponent },\r\n          { path: 'setting/edit/:id', component: AddsettingComponent },\r\n\r\n          { path: 'carsell', component: CarselllistComponent },\r\n          { path: 'carselldetails', component: CarSelldetailsComponent },\r\n          { path: 'carselldetails/view/:id', component: CarSelldetailsComponent },\r\n          { path: 'carsell/add', component: AddcarsellComponent },\r\n          { path: 'carsell/edit/:id', component: AddcarsellComponent },\r\n\r\n          { path: 'reviews', component: ReviewsComponent },\r\n\r\n          { path: 'discount', component: DiscountComponent },\r\n          { path: 'discount/add', component: AdddiscountComponent },\r\n          { path: 'discount/edit/:id', component: AdddiscountComponent },\r\n\r\n          { path: 'features', component: FeaturelistComponent },\r\n          { path: 'features/add', component: AddfeatureComponent },\r\n          { path: 'features/edit/:id', component: AddfeatureComponent },\r\n\r\n          { path: 'bodytype', component: BodyTypeComponent },\r\n          { path: 'bodytype/add', component: AddbodyTypeComponent },\r\n          { path: 'bodytype/edit/:id', component: AddbodyTypeComponent },\r\n\r\n          { path: 'blog', component: BloglistComponent },\r\n          { path: 'blog/add', component: AddBlogComponent },\r\n          { path: 'blog/edit/:id', component: AddBlogComponent },\r\n\r\n          { path: 'cars', component: CarslistComponent },\r\n          { path: 'cars/add', component: AddcarsComponent },\r\n          { path: 'cars/edit/:id', component: AddcarsComponent },\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [ConfirmationDialogService],\r\n  exports: [NgbdDatepickerRangePopup, NgbTimepicker],\r\n  bootstrap: [AppComponent, NgbdDatepickerRangePopup, NgbTimepicker]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-alternateimage',\r\n  templateUrl: './alternateimage.component.html'\r\n})\r\nexport class alternateimageComponent {\r\n\r\n  alternateimageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.alternateimageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-thumbnailimage',\r\n  templateUrl: './thumbnailimage.component.html'\r\n})\r\nexport class thumbnailimageComponent {\r\n\r\n  thumbnailimageimageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.thumbnailimageimageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  branchname = \"\";\r\n  email = \"\";\r\n  // locationID: 0;\r\n  // Locations: [];\r\n  // private selectedBrand;\r\n\r\n  ngOnInit() {\r\n   ///var data = this.ls.getSelectedBrand();\r\n\r\n    \r\n    //this.loadLocations();\r\n\r\n\r\n    // if (data == null)\r\n    //   this.router.navigate([\"/\"]);\r\n\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public ls: LocalStorageService) {\r\n    // this.branchname = this.ls.getSelectedBrand().name;\r\n    // this.email = this.ls.getSelectedBrand().email;\r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private loadLocations() {\r\n    // var loc = this.ls.getLocation();\r\n    // if (loc != null) {\r\n    //   this.Locations = this.ls.getLocation();\r\n    //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n    // }\r\n    // else {\r\n    //   this.service.getAllLocations(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n    //     debugger\r\n    //     if (res.length > 0) {\r\n    //       this.ls.setLocation(res);\r\n    //       this.ls.setSelectedLocation(res[0]);\r\n    //       this.locationID =res[0].locationID;\r\n    //       this.Locations =res;\r\n    //     }\r\n    //     else {\r\n    //       this.router.navigate(['/']);\r\n    //     }\r\n    //   });\r\n    // }\r\n    // this.Locations = this.ls.getLocation();\r\n    // this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  }\r\n  changeloc(LocObj) {\r\n\r\n    // this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    debugger\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    debugger\r\n    if (this.f.username.value == \"admin@garage.com\" && this.f.password.value == \"Admin@123\") {\r\n\r\n      this.router.navigate([\"/admin/dashboard\"]);\r\n    }\r\n    else {\r\n      this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n    }\r\n  }\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}