{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/admin/blogs/add/addblog.component.html","webpack:///src/app/admin/blogs/blog.component.html","webpack:///src/app/admin/bodytype/add/addbodyType.component.html","webpack:///src/app/admin/bodytype/bodytype.component.html","webpack:///src/app/admin/cars/addcars/addcars.component.html","webpack:///src/app/admin/cars/carslist.component.html","webpack:///src/app/admin/carsell/carselldetails/carselldetails.component.html","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.html","webpack:///src/app/admin/carsell/carselllist/carselllist.component.html","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/customer/customers/customers.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/features/add/addfeature.component.html","webpack:///src/app/admin/features/featurelist.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/reviews/reviews.component.html","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.html","webpack:///src/app/admin/sales/orders/modal-content/modal-OrderDetail.component.html","webpack:///src/app/admin/sales/orders/orders.component.html","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.html","webpack:///src/app/admin/settings/amenities/amenities.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/confirm/confirm.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/discount/add/adddiscount.component.html","webpack:///src/app/admin/settings/discount/discount.component.html","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.html","webpack:///src/app/admin/settings/landmarks/landmark.component.html","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.html","webpack:///src/app/admin/settings/offers/offers.component.html","webpack:///src/app/admin/settings/services/addservices/addservices.component.html","webpack:///src/app/admin/settings/services/services.component.html","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.html","webpack:///src/app/admin/settings/setting/setting.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/imageupload/alternateimage.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/CarSell.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/amenities.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/blog.service.ts","webpack:///src/app/_services/bodyType.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/cars.service.ts","webpack:///src/app/_services/carsell.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/discount.service.ts","webpack:///src/app/_services/features.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/landmark.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/offers.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/reviews.service.ts","webpack:///src/app/_services/services.service.ts","webpack:///src/app/_services/setting.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/admin/blogs/add/addblog.component.css","webpack:///src/app/admin/blogs/add/addblog.component.ts","webpack:///src/app/admin/blogs/blog.component.css","webpack:///src/app/admin/blogs/blog.component.ts","webpack:///src/app/admin/bodytype/add/addbodyType.component.css","webpack:///src/app/admin/bodytype/add/addbodyType.component.ts","webpack:///src/app/admin/bodytype/bodytype.component.ts","webpack:///src/app/admin/cars/addcars/addcars.component.css","webpack:///src/app/admin/cars/addcars/addcars.component.ts","webpack:///src/app/admin/cars/carslist.component.css","webpack:///src/app/admin/cars/carslist.component.ts","webpack:///src/app/admin/carsell/carselldetails/carselldetails.component.ts","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.css","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.ts","webpack:///src/app/admin/carsell/carselllist/carselllist.component.css","webpack:///src/app/admin/carsell/carselllist/carselllist.component.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/customer/customers/customers.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/features/add/addfeature.component.ts","webpack:///src/app/admin/features/featurelist.component.css","webpack:///src/app/admin/features/featurelist.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/reviews/reviews.component.ts","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/sales/orders/modal-content/modal-OrderDetail.component.ts","webpack:///src/app/admin/sales/orders/modal-content/ngbd-OrderDetail-content.component.ts","webpack:///src/app/admin/sales/orders/orders.component.ts","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.css","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.ts","webpack:///src/app/admin/settings/amenities/amenities.component.css","webpack:///src/app/admin/settings/amenities/amenities.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.css","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/confirm/confirm.component.css","webpack:///src/app/admin/settings/confirm/confirm.component.ts","webpack:///src/app/admin/settings/confirm/confirmation-dialog.service.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/discount/add/adddiscount.component.ts","webpack:///src/app/admin/settings/discount/discount.component.ts","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.css","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.ts","webpack:///src/app/admin/settings/landmarks/landmark.component.css","webpack:///src/app/admin/settings/landmarks/landmark.component.ts","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.css","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.ts","webpack:///src/app/admin/settings/offers/offers.component.ts","webpack:///src/app/admin/settings/services/addservices/addservices.component.css","webpack:///src/app/admin/settings/services/addservices/addservices.component.ts","webpack:///src/app/admin/settings/services/services.component.css","webpack:///src/app/admin/settings/services/services.component.ts","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.css","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.ts","webpack:///src/app/admin/settings/setting/setting.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/imageupload/alternateimage.component.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","json","excelFileName","worksheet","json_to_sheet","console","log","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","data","Blob","Date","getTime","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","selector","host","CarSells","CarSellImages","Customers","Make","Models","Country","City","Feature","DashboardSummary","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Report","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","compare","v1","v2","a","b","res","matches","term","name","toLowerCase","includes","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","asObservable","_set","brandId","get","url","next","subscribe","addons","pipe","_search","result","total","patch","Object","assign","sortedData","filter","slice","post","updateData","providedIn","AmenitiesService","Amenities","AppsettingService","BannerService","Banner","title","BlogService","fromDate","toDate","blogs","event","BodyTypeService","bodytype","BrandsService","brands","CarsService","cars","CarSellService","carsells","carsell","CategoryService","categories","fullName","CustomersService","customers","DashboadService","locationID","date","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fdate","tdate","DeliveryService","Delivery","DiscountService","Discount","FeaturesService","ItemsService","items","LandmarkService","Landmark","LocalStorageService","brand","sessionStorage","setItem","JSON","stringify","location","parse","getItem","userInfo","LocationsService","locations","LoginService","currentUserSubject","currentUser","value","username","password","ModifiersService","modifiers","OffersService","offerss","orderNo","OrdersService","brandID","orders","categoryName","ReportService","salescategorywiseReport","customerID","ReviewsService","Review","serviceTitle","ServicesService","SettingService","Setting","ToastService","toastr","_title","_message","success","timeOut","error","warning","AddBlogComponent","formBuilder","router","route","ls","ts","blogService","submitted","loading","Images","CountryList","CityList","selectedCityID","ButtonText","createForm","loadCountry","setSelectedBlog","edtor","editorId","tinymce","getContent","blogForm","controls","group","blogID","required","arabicTitle","description","arabicDescription","startDate","endDate","statusID","isFeatured","imagesSource","imageUrl","blogImages","city","country","file","formattedStartDate","formattedEndDate","target","files","filesAmount","reader","FileReader","fileSize","size","alert","onload","push","patchValue","readAsDataURL","day","month","year","formattedDate","obj","desc","setContent","f","setValue","loadBlogImages","loadCity","index","indexOf","splice","init","selectElementValue","split","map","item","trim","paramMap","param","sid","getById","editForm","getContentFromEditor","markAllAsTouched","invalid","parseInt","insert","showSuccess","navigate","showError","update","template","now","BloglistComponent","service","excelService","confirmationDialogService","FeatureList","loading$","submit","_datepicker","getData","BlogID","blog","status","getAllData","parseDate","data$","total$","headers","forEach","header","confirm","providers","AddbodyTypeComponent","bodytypeService","loadingbodyType","setSelected","bodytypeForm","displayOrder","arabicName","bodyTypeID","image","imgComp","BodyTypeComponent","ExportList","exportAsExcelFile","AddcarsComponent","carsService","ModelList","BodyTypeList","CustomerList","MakeList","selectedBodyTypeID","selectedModelID","selectedMakeID","YearList","loadBodyType","loadMake","setSelectedCarSell","carsForm","carID","rowID","customerPhone","vinNo","makeID","modelID","color","registrationNo","checkLitre","engineType","recommendedAmount","binaryImage","userID","gender","carType","carsImages","address","assembly","cityID","bodyColor","countryCode","price","transmition","kilometer","fuelType","bodyType","carSellID","loadCarsImages","carsID","loadModel","getcarId","CarslistComponent","CarSelldetailsComponent","Locations","selectedLocations","reason","customerInfo","makeInfo","modelInfo","countryInfo","cityInfo","featureInfo","images","loadCarSellImages","setSelectedOrder","updatestatus","customer","make","model","feature","AddcarsellComponent","carsellService","FeaturesList","loadCarSellFeature","carSellForm","createdBy","updatedBy","isInspected","carsellImages","featureID","features","carSellAddID","stringToConvert","selectedFeatureID","Number","loadFeature","undefined","toString","CarselllistComponent","CarSellID","order","printorder","printout","html","newWindow","open","document","write","print","AddbrandComponent","brandService","loadingBrand","imageBgUrl","setSelectedBrand","brandForm","email","companyURl","currency","fileData","BrandComponent","selectedBrand","rowVersion","AddlocationComponent","locationService","loadingLocations","Image","AmenitiesList","ServiceList","LandmarkList","Items","selectedAmenitiesID","selectedServiceID","selectedLandmarkID","timings","locationTimings","time","loadAmenities","loadService","loadLandmark","setSelectedLocations","locationForm","descripiton","arabicAddress","contactNo","minOrderAmount","latitude","longitude","customerStatusID","landmarkID","gmaplink","lastUpdatedBy","lastUpdatedDate","locationImages","amenities","amenitiesID","serviceID","countryID","brandThumbnailImage","loadItemImages","loadLocationImages","LocationsComponent","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","mobile","getSelectedBrand","CustomersComponent","DashboardComponent","dashboardSummary","GetDashboard","sales","timeSlot","chartOptions","series","chart","height","text","xaxis","maen","chartOptionsDonut","morning","afterNoon","evening","night","labels","responsive","breakpoint","options","colors","width","legend","position","AddfeatureComponent","featureService","setSelectedFeature","featureForm","FeaturelistComponent","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","addonID","AddonsComponent","AddcategoryComponent","categoryService","loadingCategory","setSelectedCategory","categoryForm","categoryID","CategoryComponent","tss","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isApplyDiscount","cost","itemID","calories","selectedModifierIds","selectedAddonIds","loadActiveCategories","loadModifierList","loadAddonList","ItemsComponent","ItemsettingsComponent","ItemsList","loadItems","getTodaysItems","isItemSetting","itemSettingTitle","selectedItemIds","updateSettings","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","SalescategorywiseComponent","salesCategoryWise","loadLocations","locaionID","SalesCategorywiseRpt","selectedLocation","loadLocationsMulti","arr","element","x","toLocaleLowerCase","SalescustomerwiseComponent","SalesCustomerwiseRpt","SalesdetailComponent","orderDetails","locaionIDs","SalesDetailRpt","y","disabled","SalesitemwiseComponent","salesItemWise","SalesItemwiseRpt","SalesuserwiseComponent","salesUserWise","getSelectedLocation","SummaryComponent","_model","SalesSummaryRpt","ReviewsComponent","banner","OrderdetailsComponent","orderOrderCheckout","orderCustomerInfo","customerOrders","orderCheckouts","ModalContentComponent","NgbdModalContent","activeModal","dataObj","OrdersComponent","modalService","salesorders","modalRef","componentInstance","AddamenitiesComponent","amenitiesService","amenitiesForm","AmenitiesComponent","AppsettingsComponent","appsettingService","branchName","branchAddress","branchTiming","deliveryNo","whatsappNo","discount","discountdescription","ID","AppInfoID","appDescription","facebook","twitter","instagram","appInfoID","AddbannerComponent","bannerService","bannerForm","bannerID","BannerComponent","ConfirmComponent","close","dismiss","ConfirmationDialogService","btnOkText","btnCancelText","dialogSize","DeliveryComponent","delivery","AdddiscountComponent","discountService","LocationList","selectedLocationID","fromTime","hour","getHours","minute","getMinutes","toTime","discountForm","discountID","arabicImage","arbimg","alternateimageUrl","getAllLocations","DiscountComponent","AddlandmarkComponent","landmarkService","landmarkForm","LandmarkComponent","landmark","AddoffersComponent","offersService","loadingOffers","setSelectedOffers","offersForm","offerID","OffersComponent","offers","AddservicesComponent","servicesService","serviceForm","serviceDescription","arabicServiceTitle","arabicServiceDescription","ServiceComponent","services","AddsettingComponent","settingService","settingForm","pageName","alternateImage","altimg","SettingComponent","setting","AppComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","children","register","enabled","production","bootstrap","CounterComponent","currentCount","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","after","before","equals","isInside","isHovered","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HomeComponent","alternateimageComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","markForCheck","ImageuploadComponent","LayoutComponent","_Langname","branchname","clear","LocObj","LoginComponent","loginForm","NavMenuComponent","isExpanded","environment","getBaseUrl","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;ACAf,eAASoB,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIN,KAAJ,CAAU,yBAAyBE,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACC,IAAF,GAAS,kBAAT;AACA,gBAAMD,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACO,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAP,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAQ,YAAM,CAACC,OAAP,GAAiBT,wBAAjB;AACAA,8BAAwB,CAACU,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,UAAMC,UAAU,GAAG,iFAAnB;AACA,UAAMC,eAAe,GAAG,OAAxB;;UAGaC,YAAY;AAEvB,gCAAc;AAAA;AAAG;;AAFM;AAAA;AAAA,iBAIhB,2BAAkBC,IAAlB,EAA+BC,aAA/B,EAAoD;AAEzD,gBAAMC,SAAS,GAAmB,2CAAWC,aAAX,CAAyBH,IAAzB,CAAlC;AACAI,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,SAAxB;AACA,gBAAMI,QAAQ,GAAkB;AAAEC,oBAAM,EAAE;AAAE,wBAAQL;AAAV,eAAV;AAAiCM,wBAAU,EAAE,CAAC,MAAD;AAA7C,aAAhC;AACA,gBAAMC,WAAW,GAAQ,2CAAWH,QAAX,EAAqB;AAAEI,sBAAQ,EAAE,MAAZ;AAAoBC,kBAAI,EAAE;AAA1B,aAArB,CAAzB,CALyD,CAMzD;;AACA,iBAAKC,eAAL,CAAqBH,WAArB,EAAkCR,aAAlC;AACD;AAZsB;AAAA;AAAA,iBAcf,yBAAgBY,MAAhB,EAA6BC,QAA7B,EAA6C;AACnD,gBAAMC,IAAI,GAAS,IAAIC,IAAJ,CAAS,CAACH,MAAD,CAAT,EAAmB;AACpCF,kBAAI,EAAEd;AAD8B,aAAnB,CAAnB;AAGA,8DAAiBkB,IAAjB,EAAuBD,QAAQ,GAAG,UAAX,GAAwB,IAAIG,IAAJ,GAAWC,OAAX,EAAxB,GAA+CpB,eAAtE;AACD;AAnBsB;;AAAA;AAAA,S;;;;;;AAAZC,kBAAY,eADxB,kEACwB,E,mCAAA,GAAZA,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,UAAMoB,OAAM,GAAmC;AAAE,eAAO,MAAT;AAAiB,gBAAQ,EAAzB;AAA6B,YAAI;AAAjC,OAA/C;;UAeaC,kBAAkB;;;;AAEpB,eAAAC,QAAA,GAAuB,EAAvB;AACA,eAAAC,SAAA,GAA2B,EAA3B;AACC,eAAAC,IAAA,GAAO,IAAI,0DAAJ,EAAP;AAMX;;AAV8B;AAAA;AAAA,iBAM7B,kBAAS;AACP,iBAAKD,SAAL,GAAiBH,OAAM,CAAC,KAAKG,SAAN,CAAvB;AACA,iBAAKC,IAAL,CAAUC,IAAV,CAAe;AAACC,oBAAM,EAAE,KAAKJ,QAAd;AAAwBC,uBAAS,EAAE,KAAKA;AAAxC,aAAf;AACD;AAT4B;;AAAA;AAAA,S;;;;gBAE5B;;;gBACA;;;gBACA;;;AAJUF,wBAAkB,eAR9B,gEAAU;AACTM,gBAAQ,EAAE,cADD;AAETC,YAAI,EAAE;AACJ,yBAAe,qBADX;AAEJ,0BAAgB,sBAFZ;AAGJ,qBAAW;AAHP;AAFG,OAAV,CAQ8B,GAAlBP,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACpBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaQ,Q;;;;UAiCAC,a;;;;UAOAC,S;;;;UAaAC,I;;;;UAaAC,M;;;;UAgBAC,O;;;;UAIAC,I;;;;UAIAC,O;;;;;;;;;;;;;;;;;;;AC1Fb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,gB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,M;;;;UAsBAC,Y;;;;UAYAC,oB;;;;UAWAC,a;;;;UAYAC,c;;;;;;;;;;;;;;;;;;;ACzDb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,M;;;;UAIAC,a;;;;UAaAC,iB;;;;UAeAC,mB;;;;UAQAC,uB;;;;UAcAC,mB;;;;UAUAC,uB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDb,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA8BU,MAA9B,EAAkDH,SAAlD,EAAmE;AACjE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA+ByC,IAA/B,EAA6C;AAE3C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYE,aAAa;AAExB,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA8B,EAA9B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA8B,EAA9B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHuB;AAAA;AAAA,eAmBxB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB5B;AAAA;AAAA,eAoBxB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBhC;AAAA;AAAA,eAqBxB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBf;AAAA,eAyBxB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBvB;AAAA;AAAA,eAsBxB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBvB;AAAA,eA0BxB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BnC;AAAA;AAAA,eAuBxB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB3B;AAAA,eA2BxB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BtC;AAAA;AAAA,eA4BxB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B7C;AAAA;AAAA,eA6BxB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BzD;AAAA;AAAA,eA+BxB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCuB;AAAA;AAAA,eAkCxB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCuB;AAAA;AAAA,iBAsCxB,oBAAWE,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,0BAA0CD,OAA1C,EAAP;AACD;AAxCuB;AAAA;AAAA,iBAyCxB,iBAAQ/E,EAAR,EAAW+E,OAAX,EAAoB;AAElB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,sBAAsChF,EAAtC,oBAAkD+E,OAAlD,EAAP;AACD;AA5CuB;AAAA;AAAA,iBA6CxB,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,4BAAqBF,OAArB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,KAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAwBC,GAAxB,EAA6BE,SAA7B,CAAuC,UAAAzB,GAAG,EAAI;AAC5C,mBAAI,CAAC0B,MAAL,GAAc1B,GAAd;;AAEA,mBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,KAAI,CAACE,MAAtB;;AACA,mBAAI,CAAChB,SAAL,CAAec,IAAf,CAAoB,KAAI,CAACE,MAAzB;;AAEA,mBAAI,CAACjB,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,KAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,KAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,qBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,qBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,mBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAlEuB;AAAA;AAAA,iBAmEhB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAtEuB;AAAA;AAAA,iBAwEhB,mBAAO;AACb,+BAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,gBAAQA,UAAR;AAAA,gBAAoBC,aAApB,gBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,gBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,gBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,gBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKyD,MAAN,EAAcT,UAAd,EAA0BC,aAA1B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AArFuB;AAAA;AAAA,iBAwFxB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAtGuB;AAAA;AAAA,iBAuGxB,gBAAOzD,IAAP,EAAa;AAEX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,sBAAoC5E,IAApC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA9GuB;AAAA;AAAA,iBAgHxB,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAtHuB;AAAA;AAAA,iBAuHxB,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,CAAP;AACD;AAzHuB;;AAAA;AAAA,S;;;;gBAlCjB;;;;AAkCIhC,mBAAa,eAJzB,iEAAW;AACViC,kBAAU,EAAE;AADF,OAAX,CAIyB,E,iCAEE,+D,EAFF,GAAbjC,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAMX,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAiCU,MAAjC,EAAqDH,SAArD,EAAsE;AACpE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAkCyC,IAAlC,EAAgD;AAC9C;AACA,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYoC,gBAAgB;AAE3B,kCAAoBjC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAiC,EAAjC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAiC,EAAjC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAH0B;AAAA;AAAA,eAmB3B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnBzB;AAAA;AAAA,eAoB3B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB7B;AAAA;AAAA,eAqB3B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBZ;AAAA,eAyB3B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBpB;AAAA;AAAA,eAsB3B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBpB;AAAA,eA0B3B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BhC;AAAA;AAAA,eAuB3B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBxB;AAAA,eA2B3B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BnC;AAAA;AAAA,eA4B3B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B1C;AAAA;AAAA,eA6B3B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BtD;AAAA;AAAA,eA+B3B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjC0B;AAAA;AAAA,eAkC3B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApC0B;AAAA;AAAA,iBAuC3B,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,yBAA4ChF,EAA5C,EAAP;AACD;AA1C0B;AAAA;AAAA,iBA2C3B,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,sBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA2BC,GAA3B,EAAgCE,SAAhC,CAA0C,UAAAzB,GAAG,EAAI;AAC/C,oBAAI,CAACyC,SAAL,GAAiBzC,GAAjB;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAACiB,SAAtB;;AACA,oBAAI,CAAC/B,SAAL,CAAec,IAAf,CAAoB,MAAI,CAACiB,SAAzB;;AAEA,oBAAI,CAAChC,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAhE0B;AAAA;AAAA,iBAiEnB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AApE0B;AAAA;AAAA,iBAsEnB,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKwE,SAAN,EAAiBxB,UAAjB,EAA6BC,aAA7B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAnF0B;AAAA;AAAA,iBAsF3B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AApG0B;AAAA;AAAA,iBAqG3B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,yBAAuC5E,IAAvC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA7G0B;AAAA;AAAA,iBA+G3B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,yBAAuCC,UAAvC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AArH0B;AAAA;AAAA,iBAsH3B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,yBAAuCC,UAAvC,CAAP;AACD;AAxH0B;;AAAA;AAAA,S;;;;gBAlCpB;;;;AAkCIE,sBAAgB,eAJ5B,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAI4B,E,iCAED,+D,EAFC,GAAhBC,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBb,UAAM7C,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAE7C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYsC,iBAAiB;AAE5B,mCAAoBnC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAH2B;AAAA;AAAA,eAmB5B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnBxB;AAAA;AAAA,eAoB5B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB5B;AAAA;AAAA,eAqB5B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBX;AAAA,eAyB5B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBnB;AAAA;AAAA,eAsB5B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBnB;AAAA,eA0B5B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1B/B;AAAA;AAAA,eAuB5B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBvB;AAAA,eA2B5B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BlC;AAAA;AAAA,eA4B5B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5BzC;AAAA;AAAA,eA6B5B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BrD;AAAA;AAAA,eA+B5B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjC2B;AAAA;AAAA,eAkC5B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApC2B;AAAA;AAAA,iBAuC5B,iBAAQE,OAAR,EAAiB;AACf,mBAAO,KAAKd,IAAL,CAAUe,GAAV,2BAA+CD,OAA/C,EAAP;AACD,WAzC2B,CA4C5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAjE4B;AAAA;AAAA,iBAkEpB,cAAKU,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AArE2B;AAAA;AAAA,iBA0E5B,iBAAQ;AACN;AACA,iBAAKf,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAxF2B;AAAA;AAAA,iBAyF5B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,qBAAmC5E,IAAnC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAhG2B;AAAA;AAAA,iBAkG5B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,qBAAmCC,UAAnC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAxG2B;AAAA;AAAA,iBA0G5B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AA5G2B;;AAAA;AAAA,S;;;;gBApCrB;;;;AAoCII,uBAAiB,eAJ7B,iEAAW;AACVH,kBAAU,EAAE;AADF,OAAX,CAI6B,E,iCAEF,+D,EAFE,GAAjBG,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBb,UAAM/C,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA8BU,MAA9B,EAAkDH,SAAlD,EAAmE;AACjE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA+ByC,IAA/B,EAA6C;AAC3C;AACA,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYuC,aAAa;AAExB,+BAAoBpC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA8B,EAA9B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA8B,EAA9B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHuB;AAAA;AAAA,eAmBxB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB5B;AAAA;AAAA,eAoBxB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBhC;AAAA;AAAA,eAqBxB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBf;AAAA,eAyBxB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBvB;AAAA;AAAA,eAsBxB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBvB;AAAA,eA0BxB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BnC;AAAA;AAAA,eAuBxB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB3B;AAAA,eA2BxB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BtC;AAAA;AAAA,eA4BxB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B7C;AAAA;AAAA,eA6BxB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BzD;AAAA;AAAA,eA+BxB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCuB;AAAA;AAAA,eAkCxB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCuB;AAAA;AAAA,iBAuCxB,iBAAQ7E,EAAR,EAAY+E,OAAZ,EAAqB;AACnB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,sBAAsChF,EAAtC,oBAAkD+E,OAAlD,EAAP;AACD;AAzCuB;AAAA;AAAA,iBA0CxB,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,4BAAqBF,OAArB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAwBC,GAAxB,EAA6BE,SAA7B,CAAuC,UAAAzB,GAAG,EAAI;AAC5C,oBAAI,CAAC4C,MAAL,GAAc5C,GAAd;AACA;;AACA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAACoB,MAAtB;;AACA,oBAAI,CAAClC,SAAL,CAAec,IAAf,CAAoB,MAAI,CAACoB,MAAzB;;AAEA,oBAAI,CAACnC,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AA/DuB;AAAA;AAAA,iBAgEhB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAnEuB;AAAA;AAAA,iBAqEhB,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK2E,MAAN,EAAc3B,UAAd,EAA0BC,aAA1B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAlFuB;AAAA;AAAA,iBAqFxB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAnGuB;AAAA;AAAA,iBAoGxB,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,sBAAoC5E,IAApC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA5GuB;AAAA;AAAA,iBA8GxB,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AApHuB;AAAA;AAAA,iBAqHxB,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,CAAP;AACD;AAvHuB;;AAAA;AAAA,S;;;;gBAlCjB;;;;AAkCIK,mBAAa,eAJzB,iEAAW;AACVJ,kBAAU,EAAE;AADF,OAAX,CAIyB,E,iCAEE,+D,EAFF,GAAbI,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAMhD,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA4BU,MAA5B,EAAgDH,SAAhD,EAAiE;AAC/D,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA6ByC,IAA7B,EAA2C;AAEzC,eAAOzC,IAAI,CAACoF,KAAL,CAAWzC,WAAX,GAAyBC,QAAzB,CAAkCH,IAAI,CAACE,WAAL,EAAlC,CAAP;AACD;;UAMY0C,WAAW;AAEtB,6BAAoBvC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA4B,EAA5B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA4B,EAA5B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHqB;AAAA;AAAA,eAmBtB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB9B;AAAA;AAAA,eAoBtB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBlC;AAAA;AAAA,eAqBtB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBjB;AAAA,eAwBtB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAxBzB;AAAA;AAAA,eAsBtB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBzB;AAAA,eAyBtB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AAzBrC;AAAA;AAAA,eAuBtB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB7B;AAAA,eA0BtB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA1BxC;AAAA;AAAA,eA2BtB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3B/C;AAAA;AAAA,eA4BtB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA5B3D;AAAA;AAAA,eA8BtB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAhCqB;AAAA;AAAA,eAkCtB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCqB;AAAA;AAAA,iBAsCtB,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,oBAAiChF,EAAjC,EAAP;AACD;AAzCqB;AAAA;AAAA,iBA0CtB,mBAAUA,EAAV,EAAc;AACZ;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,2BAAwChF,EAAxC,EAAP;AACD;AA7CqB;AAAA;AAAA,iBA+CtB,oBAAWyG,QAAX,EAAqBC,MAArB,EAA6B;AAAA;;AAC3B;AACA,gBAAMzB,GAAG,0BAAmBwB,QAAnB,cAA+BC,MAA/B,CAAT;AACAlG,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAsBC,GAAtB,EAA2BE,SAA3B,CAAqC,UAAAzB,GAAG,EAAI;AAC1C,oBAAI,CAACiD,KAAL,GAAajD,GAAb;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAACyB,KAAtB;;AACA,oBAAI,CAACvC,SAAL,CAAec,IAAf,CAAoB,MAAI,CAACyB,KAAzB;;AAEA,oBAAI,CAACxC,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AApEqB;AAAA;AAAA,iBAsEd,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAzEqB;AAAA;AAAA,iBA2Ed,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKgF,KAAN,EAAahC,UAAb,EAAyBC,aAAzB,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAxFqB;AAAA;AAAA,iBA0FtB,iBAAQ;AACN,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAvGqB;AAAA;AAAA,iBAwGtB,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,CAAe,iBAAf,EAAkC5E,IAAlC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA/GqB;AAAA;AAAA,iBAgHtB,wBAAe1D,EAAf,EAAmB;AACjB;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,2BAAoDhF,EAApD,EAAP;AACD;AAnHqB;AAAA;AAAA,iBAoHtB,uBAAc;AACZ,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,uBAAP;AACD;AAtHqB;AAAA;AAAA,iBAuHtB,kBAAS4B,KAAT,EAAgB;AACd;AACA,mBAAO,KAAK3C,IAAL,CAAUe,GAAV,4BAAyC4B,KAAzC,EAAP;AACD;AA1HqB;AAAA;AAAA,iBA2HtB,gBAAOZ,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,oBAAkCC,UAAlC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAjIqB;AAAA;AAAA,iBAkItB,sBAAaiD,KAAb,EAAoB;AAClB;AACA,mBAAO,KAAK1C,IAAL,CAAU8B,IAAV,0BAAwCY,KAAxC,EACJtB,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAzIqB;AAAA;AAAA,iBA0ItB,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,oBAAkCC,UAAlC,CAAP;AACD;AA5IqB;;AAAA;AAAA,S;;;;gBAlCf;;;;AAkCIQ,iBAAW,eAJvB,iEAAW;AACVP,kBAAU,EAAE;AADF,OAAX,CAIuB,E,iCAEI,+D,EAFJ,GAAXO,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAMnD,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAE7C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMY+C,eAAe;AAE1B,iCAAoB5C,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHyB;AAAA;AAAA,eAmB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB1B;AAAA;AAAA,eAoB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB9B;AAAA;AAAA,eAqB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBb;AAAA,eAyB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBrB;AAAA;AAAA,eAsB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBrB;AAAA,eA0B1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BjC;AAAA;AAAA,eAuB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBzB;AAAA,eA2B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BpC;AAAA;AAAA,eA4B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B3C;AAAA;AAAA,eA6B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BvD;AAAA;AAAA,eA+B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCyB;AAAA;AAAA,eAkC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCyB;AAAA;AAAA,iBAsC1B,sBAAa;AACX,mBAAO,KAAKZ,IAAL,CAAUe,GAAV,qBAAP;AACD;AAxCyB;AAAA;AAAA,iBAyC1B,iBAAQhF,EAAR,EAAY;AAEV,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,wBAA0ChF,EAA1C,aAAP;AACD;AA5CyB;AAAA;AAAA,iBA6C1B,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,sBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,oBAAI,CAACoD,QAAL,GAAgBpD,GAAhB;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAAC4B,QAAtB;;AACA,oBAAI,CAAC1C,SAAL,CAAec,IAAf,CAAoB,MAAI,CAAC4B,QAAzB;;AAEA,oBAAI,CAAC3C,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAlEyB;AAAA;AAAA,iBAmElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAtEyB;AAAA;AAAA,iBAwElB,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKmF,QAAN,EAAgBnC,UAAhB,EAA4BC,aAA5B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AArFyB;AAAA;AAAA,iBAwF1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAtGyB;AAAA;AAAA,iBAuG1B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA9GyB;AAAA;AAAA,iBAgH1B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAtHyB;AAAA;AAAA,iBAuH1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AAzHyB;;AAAA;AAAA,S;;;;gBAlCnB;;;;AAkCIa,qBAAe,eAJ3B,iEAAW;AACVZ,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAfY,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAMxD,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA8BU,MAA9B,EAAkDH,SAAlD,EAAmE;AACjE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA+ByC,IAA/B,EAA6C;AAE3C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYiD,aAAa;AAExB,+BAAoB9C,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA8B,EAA9B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA8B,EAA9B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHuB;AAAA;AAAA,eAmBxB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB5B;AAAA;AAAA,eAoBxB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBhC;AAAA;AAAA,eAqBxB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBf;AAAA,eAyBxB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBvB;AAAA;AAAA,eAsBxB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBvB;AAAA,eA0BxB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BnC;AAAA;AAAA,eAuBxB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB3B;AAAA,eA2BxB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BtC;AAAA;AAAA,eA4BxB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B7C;AAAA;AAAA,eA6BxB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BzD;AAAA;AAAA,eA+BxB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCuB;AAAA;AAAA,eAkCxB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCuB;AAAA;AAAA,iBAuCxB,iBAAQ7E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,qBAAqChF,EAArC,EAAP;AACD;AAzCuB;AAAA;AAAA,iBA0CxB,oBAAW+E,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,2BAAoBF,OAApB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAwBC,GAAxB,EAA6BE,SAA7B,CAAuC,UAAAzB,GAAG,EAAI;AAC5C,oBAAI,CAACsD,MAAL,GAActD,GAAd;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAAC8B,MAAtB;;AACA,oBAAI,CAAC5C,SAAL,CAAec,IAAf,CAAoB,MAAI,CAAC8B,MAAzB;;AAEA,oBAAI,CAAC7C,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AA/DuB;AAAA;AAAA,iBAgEhB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAnEuB;AAAA;AAAA,iBAqEhB,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKqF,MAAN,EAAcrC,UAAd,EAA0BC,aAA1B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAlFuB;AAAA;AAAA,iBAqFxB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAnGuB;AAAA;AAAA,iBAoGxB,gBAAOzD,IAAP,EAAa;AACX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,qBAAmC5E,IAAnC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA3GuB;AAAA;AAAA,iBA6GxB,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,qBAAmCC,UAAnC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAnHuB;AAAA;AAAA,iBAqHvB,iBAAO1D,EAAP,EAAW;AACT,mBAAO,KAAKiE,IAAL,sCAA4CjE,EAA5C,EAAP;AACD;AAvHsB;;AAAA;AAAA,S;;;;gBAlCjB;;;;AAkCI+G,mBAAa,eAJzB,iEAAW;AACVd,kBAAU,EAAE;AADF,OAAX,CAIyB,E,iCAEE,+D,EAFF,GAAbc,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBb,UAAM1D,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA4BU,MAA5B,EAAgDH,SAAhD,EAAiE;AAC/D,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA6ByC,IAA7B,EAA2C;AAEzC,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYmD,WAAW;AAEtB,6BAAoBhD,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA4B,EAA5B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA4B,EAA5B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHqB;AAAA;AAAA,eAmBtB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB9B;AAAA;AAAA,eAoBtB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBlC;AAAA;AAAA,eAqBtB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBjB;AAAA,eAyBtB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBzB;AAAA;AAAA,eAsBtB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBzB;AAAA,eA0BtB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BrC;AAAA;AAAA,eAuBtB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB7B;AAAA,eA2BtB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BxC;AAAA;AAAA,eA4BtB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B/C;AAAA;AAAA,eA6BtB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7B3D;AAAA;AAAA,eA+BtB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCqB;AAAA;AAAA,eAmCtB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AArCqB;AAAA;AAAA,iBAuCtB,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,oBAAiChF,EAAjC,EAAP;AACD;AA1CqB;AAAA;AAAA,iBA2CtB,kBAASA,EAAT,EAAa;AACX;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,8BAA2ChF,EAA3C,EAAP;AACD;AA9CqB;AAAA;AAAA,iBAgDtB,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,iBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAsBC,GAAtB,EAA2BE,SAA3B,CAAqC,UAAAzB,GAAG,EAAI;AAC1C,oBAAI,CAACwD,IAAL,GAAYxD,GAAZ;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAACgC,IAAtB;;AACA,oBAAI,CAAC9C,SAAL,CAAec,IAAf,CAAoB,MAAI,CAACgC,IAAzB;;AAEA,oBAAI,CAAC/C,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AArEqB;AAAA;AAAA,iBAuEd,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AA1EqB;AAAA;AAAA,iBA4Ed,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKuF,IAAN,EAAYvC,UAAZ,EAAwBC,aAAxB,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAzFqB;AAAA;AAAA,iBA2FtB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAzGqB;AAAA;AAAA,iBA0GtB,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,CAAe,iBAAf,EAAkC5E,IAAlC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAjHqB;AAAA;AAAA,iBAkHtB,wBAAe1D,EAAf,EAAmB;AACjB;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,2BAA+ChF,EAA/C,EAAP;AACD;AArHqB;AAAA;AAAA,iBAsHtB,wBAAe;AACb,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,oBAAP;AACD;AAxHqB;AAAA;AAAA,iBAyHtB,oBAAW;AACT;AACA,mBAAO,KAAKf,IAAL,CAAUe,GAAV,uBAAP;AACD;AA5HqB;AAAA;AAAA,iBA6HtB,mBAAU4B,KAAV,EAAiB;AACf,mBAAO,KAAK3C,IAAL,CAAUe,GAAV,gCAAiD4B,KAAjD,EAAP;AACD;AA/HqB;AAAA;AAAA,iBAgItB,wBAAe;AACb,mBAAO,KAAK3C,IAAL,CAAUe,GAAV,oBAAP;AACD;AAlIqB;AAAA;AAAA,iBAmItB,gBAAOgB,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,oBAAkCC,UAAlC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAzIqB;AAAA;AAAA,iBA0ItB,sBAAawD,IAAb,EAAmB;AACjB;AACA,mBAAO,KAAKjD,IAAL,CAAU8B,IAAV,6BAA2CmB,IAA3C,EACJ7B,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAjJqB;;AAAA;AAAA,S;;;;gBAtCf;;;;AAsCIuD,iBAAW,eAJvB,iEAAW;AACVhB,kBAAU,EAAE;AADF,OAAX,CAIuB,E,iCAEI,+D,EAFJ,GAAXgB,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAM5D,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAE7C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYqD,cAAc;AAEzB,gCAAoBlD,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHwB;AAAA;AAAA,eAmBzB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB3B;AAAA;AAAA,eAoBzB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB/B;AAAA;AAAA,eAqBzB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBd;AAAA,eAyBzB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBtB;AAAA;AAAA,eAsBzB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBtB;AAAA,eA0BzB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BlC;AAAA;AAAA,eAuBzB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB1B;AAAA,eA2BzB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BrC;AAAA;AAAA,eA4BzB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B5C;AAAA;AAAA,eA6BzB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BxD;AAAA;AAAA,eA+BzB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCwB;AAAA;AAAA,eAmCzB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AArCwB;AAAA;AAAA,iBAuCzB,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,uBAAoChF,EAApC,EAAP;AACD;AA1CwB;AAAA;AAAA,iBA2CzB,kBAASA,EAAT,EAAa;AACX;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,iCAA8ChF,EAA9C,EAAP;AACD;AA9CwB;AAAA;AAAA,iBA+CzB,oBAAWA,EAAX,EAAe;AACb,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,4BAA8ChF,EAA9C,EAAP;AACD,WAjDwB,CAkDzB;;AAlDyB;AAAA;AAAA,iBAmDzB,sBAAa;AAAA;;AAEX;AACA,gBAAMiF,GAAG,oBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,oBAAI,CAAC0D,QAAL,GAAgB1D,GAAhB;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAACkC,QAAtB;;AACA,oBAAI,CAAChD,SAAL,CAAec,IAAf,CAAoB,MAAI,CAACkC,QAAzB;;AAEA,oBAAI,CAACjD,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAzEwB;AAAA;AAAA,iBA2EjB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AA9EwB;AAAA;AAAA,iBAgFjB,mBAAO;AACb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKyF,QAAN,EAAgBzC,UAAhB,EAA4BC,aAA5B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AA7FwB;AAAA;AAAA,iBA+FzB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AA7GwB;AAAA;AAAA,iBA8GzB,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,CAAe,oBAAf,EAAqC5E,IAArC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AArHwB;AAAA;AAAA,iBAsHzB,2BAAkB1D,EAAlB,EAAsB;AACpB;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,8BAAsDhF,EAAtD,EAAP;AACD;AAzHwB;AAAA;AAAA,iBA0HzB,uBAAc;AACZ,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,mBAAP;AACD;AA5HwB;AAAA;AAAA,iBA6HzB,wBAAe;AACb,mBAAO,KAAKf,IAAL,CAAUe,GAAV,oBAAP;AACD;AA/HwB;AAAA;AAAA,iBAgIzB,oBAAW;AACT,mBAAO,KAAKf,IAAL,CAAUe,GAAV,uBAAP;AACD;AAlIwB;AAAA;AAAA,iBAmIzB,mBAAU4B,KAAV,EAAiB;AACf,mBAAO,KAAK3C,IAAL,CAAUe,GAAV,gCAAiD4B,KAAjD,EAAP;AACD;AArIwB;AAAA;AAAA,iBAsIzB,uBAAc;AACZ,mBAAO,KAAK3C,IAAL,CAAUe,GAAV,0BAAP;AACD;AAxIwB;AAAA;AAAA,iBAyIzB,wBAAe;AACb,mBAAO,KAAKf,IAAL,CAAUe,GAAV,oBAAP;AACD;AA3IwB;AAAA;AAAA,iBA4IzB,kBAAS4B,KAAT,EAAgB;AACd,mBAAO,KAAK3C,IAAL,CAAUe,GAAV,+BAA6C4B,KAA7C,EAAP;AACD;AA9IwB;AAAA;AAAA,iBA+IzB,gBAAOZ,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AArJwB;AAAA;AAAA,iBAsJzB,sBAAa2D,OAAb,EAAsB;AACpB,mBAAO,KAAKpD,IAAL,CAAU8B,IAAV,6BAA2CsB,OAA3C,EACJhC,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA5JwB;;AAAA;AAAA,S;;;;gBAtClB;;;;AAsCIyD,oBAAc,eAJ1B,iEAAW;AACVlB,kBAAU,EAAE;AADF,OAAX,CAI0B,E,iCAEC,+D,EAFD,GAAdkB,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3Bb,UAAM9D,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAE7C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYwD,eAAe;AAE1B,iCAAoBrD,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAEZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AAPP;;AAHyB;AAAA;AAAA,eAkB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAlB1B;AAAA;AAAA,eAmB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AAnB9B;AAAA;AAAA,eAoB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WApBb;AAAA,eAwB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAxBrB;AAAA;AAAA,eAqB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WArBrB;AAAA,eAyB1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AAzBjC;AAAA;AAAA,eAsB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAtBzB;AAAA,eA0B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA1BpC;AAAA;AAAA,eA2B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3B3C;AAAA;AAAA,eA4B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA5BvD;AAAA;AAAA,eA8B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAhCyB;AAAA;AAAA,eAiC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AAnCyB;AAAA;AAAA,iBAsC1B,iBAAQ7E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,wBAA0ChF,EAA1C,oBAAsD+E,OAAtD,EAAP;AACD;AAxCyB;AAAA;AAAA,iBA0C1B,oBAAWA,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA8CD,OAA9C,EAAP;AACD;AA5CyB;AAAA;AAAA,iBA6C1B,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,8BAAuBF,OAAvB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,MAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,oBAAI,CAAC6D,UAAL,GAAkB7D,GAAlB;;AAEA,oBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,MAAI,CAACqC,UAAtB;;AACA,oBAAI,CAACnD,SAAL,CAAec,IAAf,CAAoB,MAAI,CAACqC,UAAzB;;AAEA,oBAAI,CAACpD,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,MAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,sBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,sBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,oBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAlEyB;AAAA;AAAA,iBAmElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAtEyB;AAAA;AAAA,iBAwElB,mBAAO;AAEb,gCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,iBAAQA,UAAR;AAAA,gBAAoBC,aAApB,iBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,iBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,iBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,iBAAmDA,UAAnD,CAFa,CAIb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK4F,UAAN,EAAkB5C,UAAlB,EAA8BC,aAA9B,CAArB,CALa,CAOb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CATa,CAWb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAtFyB;AAAA;AAAA,iBAyF1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAvGyB;AAAA;AAAA,iBAwG1B,gBAAOzD,IAAP,EAAa;AACX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA/GyB;AAAA;AAAA,iBAiH1B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAvHyB;AAAA;AAAA,iBAyH1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AA3HyB;;AAAA;AAAA,S;;;;gBAjCnB;;;;AAiCIsB,qBAAe,eAJ3B,iEAAW;AACVrB,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAfqB,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBb,UAAMjE,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAiCU,MAAjC,EAAqDH,SAArD,EAAsE;AACpE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAkCyC,IAAlC,EAAgD;AAE9C,eAAOzC,IAAI,CAACqG,QAAL,CAAc1D,WAAd,GAA4BC,QAA5B,CAAqCH,IAAI,CAACE,WAAL,EAArC,CAAP;AACD;;UAMY2D,gBAAgB;AAE3B,kCAAoBxD,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAiC,EAAjC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAiC,EAAjC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAH0B;AAAA;AAAA,eAmB3B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnBzB;AAAA;AAAA,eAoB3B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB7B;AAAA;AAAA,eAqB3B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBZ;AAAA,eAyB3B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBpB;AAAA;AAAA,eAsB3B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBpB;AAAA,eA0B3B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BhC;AAAA;AAAA,eAuB3B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBxB;AAAA,eA2B3B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BnC;AAAA;AAAA,eA4B3B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B1C;AAAA;AAAA,eA6B3B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BtD;AAAA;AAAA,eA+B3B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjC0B;AAAA;AAAA,eAkC3B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApC0B;AAAA;AAAA,iBAsC3B,oBAAWE,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA+CD,OAA/C,EAAP;AACD;AAxC0B;AAAA;AAAA,iBAyC3B,iBAAQ/E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,wBAA2ChF,EAA3C,oBAAuD+E,OAAvD,EAAP;AACD;AA3C0B;AAAA;AAAA,iBA4C3B,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,8BAAuBF,OAAvB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA2BC,GAA3B,EAAgCE,SAAhC,CAA0C,UAAAzB,GAAG,EAAI;AAC/C,qBAAI,CAACgE,SAAL,GAAiBhE,GAAjB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACwC,SAAtB;;AACA,qBAAI,CAACtD,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACwC,SAAzB;;AAEA,qBAAI,CAACvD,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAjE0B;AAAA;AAAA,iBAkEnB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AArE0B;AAAA;AAAA,iBAuEnB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK+F,SAAN,EAAiB/C,UAAjB,EAA6BC,aAA7B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AApF0B;AAAA;AAAA,iBAuF3B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AArG0B;AAAA;AAAA,iBAsG3B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA9G0B;AAAA;AAAA,iBAgH3B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAtH0B;AAAA;AAAA,iBAuH3B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AAzH0B;;AAAA;AAAA,S;;;;gBAnCpB;;;;AAmCIyB,sBAAgB,eAJ5B,iEAAW;AACVxB,kBAAU,EAAE;AADF,OAAX,CAI4B,E,iCAED,+D,EAFC,GAAhBwB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpBAE,eAAe;AAE1B,iCAAoB1D,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAG,SAAA,GAAY,IAAI,oDAAJ,CAAwC,EAAxC,CAAZ;AACA,eAAAE,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAHP;;AAHyB;AAAA;AAAA,iBAS1B,sBAAasD,UAAb,EAAyBC,IAAzB,EAA+B;AAC7B,gBAAIC,KAAK,GAAGD,IAAZ;AACA,gBAAIE,EAAE,GAAGC,MAAM,CAACF,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,gBAAIC,EAAE,GAAGH,MAAM,CAACF,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,CAH6B,CAG2B;;AACxD,gBAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AAEAR,iBAAK,GAAGO,IAAI,GAAG,GAAP,GAAaN,EAAb,GAAkB,GAAlB,GAAwBI,EAAhC;AACA,mBAAO,KAAKlE,IAAL,CAAUe,GAAV,6BAA0C4C,UAA1C,cAAwDE,KAAxD,EAAP;AACD;AAjByB;AAAA;AAAA,iBAmB1B,2BAAkBF,UAAlB,EAA8BW,KAA9B,EAAoCC,KAApC,EAA2C;AACzC,mBAAO,KAAKvE,IAAL,CAAUe,GAAV,mCAAgD4C,UAAhD,cAA8DW,KAA9D,cAAuEC,KAAvE,EAAP;AACD;AArByB;AAAA;AAAA,iBAuB1B,sBAAa;AACX,mBAAO,KAAKvE,IAAL,CAAUe,GAAV,qBAAP;AACD;AAzByB;;AAAA;AAAA,S;;;;gBAfnB;;;;AAeI2C,qBAAe,eAJ3B,iEAAW;AACV1B,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAf0B,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAMtE,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAE7C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMY2E,eAAe;AAE1B,iCAAoBxE,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHyB;AAAA;AAAA,eAmB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB1B;AAAA;AAAA,eAoB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB9B;AAAA;AAAA,eAqB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBb;AAAA,eAyB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBrB;AAAA;AAAA,eAsB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBrB;AAAA,eA0B1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BjC;AAAA;AAAA,eAuB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBzB;AAAA,eA2B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BpC;AAAA;AAAA,eA4B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B3C;AAAA;AAAA,eA6B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BvD;AAAA;AAAA,eA+B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCyB;AAAA;AAAA,eAkC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCyB;AAAA;AAAA,iBAsC1B,oBAAWE,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,yBAAyCD,OAAzC,EAAP;AACD;AAxCyB;AAAA;AAAA,iBAyC1B,iBAAQ/E,EAAR,EAAY;AACV,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,wBAA0ChF,EAA1C,EAAP;AACD,WA3CyB,CA4C1B;AACA;AACA;;AA9C0B;AAAA;AAAA,iBAgD1B,oBAAW+E,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,8BAAuBF,OAAvB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,qBAAI,CAACgF,QAAL,GAAgBhF,GAAhB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACwD,QAAtB;;AACA,qBAAI,CAACtE,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACwD,QAAzB;;AAEA,qBAAI,CAACvE,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AArEyB;AAAA;AAAA,iBAsElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAzEyB;AAAA;AAAA,iBA2ElB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK+G,QAAN,EAAgB/D,UAAhB,EAA4BC,aAA5B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAxFyB;AAAA;AAAA,iBA2F1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAzGyB;AAAA;AAAA,iBA0G1B,gBAAOzD,IAAP,EAAa;AAEX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AAlHyB;AAAA;AAAA,iBAoH1B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA1HyB;AAAA;AAAA,iBA2H1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AA7HyB;;AAAA;AAAA,S;;;;gBAnCnB;;;;AAmCIyC,qBAAe,eAJ3B,iEAAW;AACVxC,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAfwC,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBb,UAAMpF,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAC7C;AACA,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMY6E,eAAe;AAE1B,iCAAoB1E,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHyB;AAAA;AAAA,eAmB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB1B;AAAA;AAAA,eAoB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB9B;AAAA;AAAA,eAqB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBb;AAAA,eAyB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBrB;AAAA;AAAA,eAsB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBrB;AAAA,eA0B1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BjC;AAAA;AAAA,eAuB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBzB;AAAA,eA2B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BpC;AAAA;AAAA,eA4B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B3C;AAAA;AAAA,eA6B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BvD;AAAA;AAAA,eA+B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCyB;AAAA;AAAA,eAkC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCyB;AAAA;AAAA,iBAuC1B,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,wBAA0ChF,EAA1C,EAAP;AACD;AA1CyB;AAAA;AAAA,iBA2C1B,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,qBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,qBAAI,CAACkF,QAAL,GAAgBlF,GAAhB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAAC0D,QAAtB;;AACA,qBAAI,CAACxE,SAAL,CAAec,IAAf,CAAoB,OAAI,CAAC0D,QAAzB;;AAEA,qBAAI,CAACzE,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAhEyB;AAAA;AAAA,iBAiElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AApEyB;AAAA;AAAA,iBAsElB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKiH,QAAN,EAAgBjE,UAAhB,EAA4BC,aAA5B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAnFyB;AAAA;AAAA,iBAsF1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AApGyB;AAAA;AAAA,iBAqG1B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA7GyB;AAAA;AAAA,iBA+G1B,gBAAOsC,UAAP,EAAmB;AACjB;AACA,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAtHyB;AAAA;AAAA,iBAuH1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AAzHyB;;AAAA;AAAA,S;;;;gBAlCnB;;;;AAkCI2C,qBAAe,eAJ3B,iEAAW;AACV1C,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAf0C,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAMtF,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAC7C;AACA,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMY+E,eAAe;AAE1B,iCAAoB5E,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHyB;AAAA;AAAA,eAmB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB1B;AAAA;AAAA,eAoB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB9B;AAAA;AAAA,eAqB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBb;AAAA,eAyB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBrB;AAAA;AAAA,eAsB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBrB;AAAA,eA0B1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BjC;AAAA;AAAA,eAuB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBzB;AAAA,eA2B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BpC;AAAA;AAAA,eA4B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B3C;AAAA;AAAA,eA6B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BvD;AAAA;AAAA,eA+B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCyB;AAAA;AAAA,eAkC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCyB;AAAA;AAAA,iBAuC1B,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,uBAAyChF,EAAzC,EAAP;AACD;AA1CyB;AAAA;AAAA,iBA2C1B,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,oBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,qBAAI,CAACnB,OAAL,GAAemB,GAAf;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAAC3C,OAAtB;;AACA,qBAAI,CAAC6B,SAAL,CAAec,IAAf,CAAoB,OAAI,CAAC3C,OAAzB;;AAEA,qBAAI,CAAC4B,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAhEyB;AAAA;AAAA,iBAiElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AApEyB;AAAA;AAAA,iBAsElB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKY,OAAN,EAAeoC,UAAf,EAA2BC,aAA3B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAnFyB;AAAA;AAAA,iBAsF1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AApGyB;AAAA;AAAA,iBAqG1B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,uBAAqC5E,IAArC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA7GyB;AAAA;AAAA,iBA+G1B,gBAAOsC,UAAP,EAAmB;AACjB;AACA,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAtHyB;AAAA;AAAA,iBAuH1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,CAAP;AACD;AAzHyB;;AAAA;AAAA,S;;;;gBAlCnB;;;;AAkCI6C,qBAAe,eAJ3B,iEAAW;AACV5C,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAf4C,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBb,UAAMxF,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA6BU,MAA7B,EAAiDH,SAAjD,EAAkE;AAChE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA8ByC,IAA9B,EAA4C;AAE1C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYgF,YAAY;AAEvB,8BAAoB7E,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,EAA7B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA6B,EAA7B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHsB;AAAA;AAAA,eAmBvB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB7B;AAAA;AAAA,eAoBvB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBjC;AAAA;AAAA,eAqBvB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBhB;AAAA,eAyBvB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBxB;AAAA;AAAA,eAsBvB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBxB;AAAA,eA0BvB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BpC;AAAA;AAAA,eAuBvB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB5B;AAAA,eA2BvB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BvC;AAAA;AAAA,eA4BvB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B9C;AAAA;AAAA,eA6BvB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7B1D;AAAA;AAAA,eA+BvB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCsB;AAAA;AAAA,eAkCvB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCsB;AAAA;AAAA,iBAqCvB,oBAAWE,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,wBAAuCD,OAAvC,EAAP;AACD;AAvCsB;AAAA;AAAA,iBAwCvB,wBAAeA,OAAf,EAAwB;AACtB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA+CD,OAA/C,EAAP;AACD;AA1CsB;AAAA;AAAA,iBA2CvB,8BAAqBA,OAArB,EAA8B;AAE5B,mBAAO,KAAKd,IAAL,CAAUe,GAAV,kCAAqDD,OAArD,EAAP;AACD;AA9CsB;AAAA;AAAA,iBA+CvB,mBAAUA,OAAV,EAAmB;AACjB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,wBAA2CD,OAA3C,EAAP;AACD;AAjDsB;AAAA;AAAA,iBAkDvB,0BAAiBA,OAAjB,EAA0B;AACxB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA+CD,OAA/C,EAAP;AACD;AApDsB;AAAA;AAAA,iBAqDvB,uBAAcA,OAAd,EAAuB;AACrB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,0BAA6CD,OAA7C,EAAP;AACD;AAvDsB;AAAA;AAAA,iBAwDvB,iBAAQ/E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,oBAAmChF,EAAnC,oBAA+C+E,OAA/C,EAAP;AACD;AA1DsB;AAAA;AAAA,iBA2DvB,wBAAeA,OAAf,EAAwB;AACtB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,6BAA4CD,OAA5C,EAAP;AACD;AA7DsB;AAAA;AAAA,iBA8DvB,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,0BAAmBF,OAAnB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAuBC,GAAvB,EAA4BE,SAA5B,CAAsC,UAAAzB,GAAG,EAAI;AAC3C,qBAAI,CAACqF,KAAL,GAAarF,GAAb;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAAC6D,KAAtB;;AACA,qBAAI,CAAC3E,SAAL,CAAec,IAAf,CAAoB,OAAI,CAAC6D,KAAzB;;AAEA,qBAAI,CAAC5E,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAnFsB;AAAA;AAAA,iBAoFf,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAvFsB;AAAA;AAAA,iBAyFf,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKoH,KAAN,EAAapE,UAAb,EAAyBC,aAAzB,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAtGsB;AAAA;AAAA,iBAyGvB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAvHsB;AAAA;AAAA,iBAwHvB,gBAAOzD,IAAP,EAAa;AACX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,oBAAkC5E,IAAlC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA/HsB;AAAA;AAAA,iBAiIvB,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,oBAAkCC,UAAlC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAvIsB;AAAA;AAAA,iBAwIvB,wBAAesC,UAAf,EAA2B;AAEzB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,6BAA2CC,UAA3C,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA/IsB;AAAA;AAAA,iBAgJvB,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,oBAAkCC,UAAlC,CAAP;AACD;AAlJsB;;AAAA;AAAA,S;;;;gBAnChB;;;;AAmCI8C,kBAAY,eAJxB,iEAAW;AACV7C,kBAAU,EAAE;AADF,OAAX,CAIwB,E,iCAEG,+D,EAFH,GAAZ6C,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAMzF,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAC7C;AACA,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYkF,eAAe;AAE1B,iCAAoB/E,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHyB;AAAA;AAAA,eAmB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB1B;AAAA;AAAA,eAoB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB9B;AAAA;AAAA,eAqB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBb;AAAA,eAyB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBrB;AAAA;AAAA,eAsB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBrB;AAAA,eA0B1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BjC;AAAA;AAAA,eAuB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBzB;AAAA,eA2B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BpC;AAAA;AAAA,eA4B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B3C;AAAA;AAAA,eA6B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BvD;AAAA;AAAA,eA+B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCyB;AAAA;AAAA,eAkC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCyB;AAAA;AAAA,iBAuC1B,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,wBAA0ChF,EAA1C,EAAP;AACD;AA1CyB;AAAA;AAAA,iBA2C1B,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,qBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,qBAAI,CAACuF,QAAL,GAAgBvF,GAAhB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAAC+D,QAAtB;;AACA,qBAAI,CAAC7E,SAAL,CAAec,IAAf,CAAoB,OAAI,CAAC+D,QAAzB;;AAEA,qBAAI,CAAC9E,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAhEyB;AAAA;AAAA,iBAiElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AApEyB;AAAA;AAAA,iBAsElB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKsH,QAAN,EAAgBtE,UAAhB,EAA4BC,aAA5B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAnFyB;AAAA;AAAA,iBAsF1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AApGyB;AAAA;AAAA,iBAqG1B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA7GyB;AAAA;AAAA,iBA+G1B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AArHyB;AAAA;AAAA,iBAsH1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AAxHyB;;AAAA;AAAA,S;;;;gBAnCnB;;;;AAmCIgD,qBAAe,eAJ3B,iEAAW;AACV/C,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAf+C,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC9BAE,mBAAmB;AAI9B,uCAAc;AAAA;AAEb;;AAN6B;AAAA;AAAA,iBAS9B,0BAAiBC,KAAjB,EAAwB;AACtBC,0BAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA5C;AACD;AAX6B;AAAA;AAAA,iBAa9B,6BAAoBK,QAApB,EAA8B;AAC5BJ,0BAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2CC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAA3C;AACD;AAf6B;AAAA;AAAA,iBAgB9B,+BAAsB;AACpB,mBAAOF,IAAI,CAACG,KAAL,CAAWL,cAAc,CAACM,OAAf,CAAuB,kBAAvB,CAAX,CAAP;AACD;AAlB6B;AAAA;AAAA,iBAmB9B,qBAAYF,QAAZ,EAAsB;AACpBJ,0BAAc,CAACC,OAAf,CAAuB,YAAvB,EAAqCC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAArC;AACD;AArB6B;AAAA;AAAA,iBAsB9B,uBAAc;AAEZ,mBAAOF,IAAI,CAACG,KAAL,CAAWL,cAAc,CAACM,OAAf,CAAuB,YAAvB,CAAX,CAAP;AACD;AAzB6B;AAAA;AAAA,iBA0B9B,4BAAmB;AAEjB,mBAAOJ,IAAI,CAACG,KAAL,CAAWL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX,CAAP;AACD;AA7B6B;AAAA;AAAA,iBA+B9B,2BAAkB;AAChB,gBAAIC,QAAQ,GAAGL,IAAI,CAACG,KAAL,CAAWL,cAAc,CAACM,OAAf,CAAuB,aAAvB,CAAX,CAAf;;AACA,gBAAGC,QAAQ,KAAI,IAAf,EAAoB;AAClBA,sBAAQ,GAAGL,IAAI,CAACG,KAAL,CAAWE,QAAQ,CAACxI,IAApB,CAAX;AACA,qBAAOwI,QAAP;AACD;AACF;AArC6B;;AAAA;AAAA,S;;;;;;AAAnBT,yBAAmB,eAH/B,iEAAW;AACVjD,kBAAU,EAAE;AADF,OAAX,CAG+B,E,mCAAA,GAAnBiD,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUb,UAAM7F,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAC7C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMY8F,gBAAgB;AAE3B,kCAAoB3F,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAH0B;AAAA;AAAA,eAmB3B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnBzB;AAAA;AAAA,eAoB3B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB7B;AAAA;AAAA,eAqB3B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBZ;AAAA,eAyB3B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBpB;AAAA;AAAA,eAsB3B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBpB;AAAA,eA0B3B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BhC;AAAA;AAAA,eAuB3B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBxB;AAAA,eA2B3B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BnC;AAAA;AAAA,eA4B3B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B1C;AAAA;AAAA,eA6B3B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BtD;AAAA;AAAA,eA+B3B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjC0B;AAAA;AAAA,eAkC3B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApC0B;AAAA;AAAA,iBAuC3B,iBAAQ7E,EAAR,EAAY;AACV,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,wBAA0ChF,EAA1C,EAAP;AACD;AAzC0B;AAAA;AAAA,iBA0C3B,2BAAkB;AAChB,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,oBAAP;AACD;AA5C0B;AAAA;AAAA,iBA6C3B,sBAAa;AAAA;;AAEX,gBAAMC,GAAG,qBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,qBAAI,CAACmG,SAAL,GAAiBnG,GAAjB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAAC2E,SAAtB;;AACA,qBAAI,CAACzF,SAAL,CAAec,IAAf,CAAoB,OAAI,CAAC2E,SAAzB;;AAEA,qBAAI,CAAC1F,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAlE0B;AAAA;AAAA,iBAmEnB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAtE0B;AAAA;AAAA,iBAwEnB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKkI,SAAN,EAAiBlF,UAAjB,EAA6BC,aAA7B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AArF0B;AAAA;AAAA,iBAwF3B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAtG0B;AAAA;AAAA,iBAuG3B,4BAAmB5E,EAAnB,EAAuB;AACrB,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,+BAAwDhF,EAAxD,EAAP;AACD;AAzG0B;AAAA;AAAA,iBA0G3B,qBAAYA,EAAZ,EAAgB;AACd,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,oCAA6DhF,EAA7D,EAAP;AACD;AA5G0B;AAAA;AAAA,iBA6G3B,yBAAgB;AACd,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,qBAAP;AACD;AA/G0B;AAAA;AAAA,iBAgH3B,uBAAc;AACZ,mBAAO,KAAKf,IAAL,CAAUe,GAAV,mBAAP;AACD;AAlH0B;AAAA;AAAA,iBAmH3B,wBAAe;AACb,mBAAO,KAAKf,IAAL,CAAUe,GAAV,oBAAP;AACD;AArH0B;AAAA;AAAA,iBAsH3B,gBAAO7D,IAAP,EAAa;AACX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,CAAe,6BAAf,EAA8C5E,IAA9C,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA5H0B;AAAA;AAAA,iBA8H3B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AApI0B;AAAA;AAAA,iBAsI3B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AAxI0B;;AAAA;AAAA,S;;;;gBApCpB;;;;AAoCI4D,sBAAgB,eAJ5B,iEAAW;AACV3D,kBAAU,EAAE;AADF,OAAX,CAI4B,E,iCAED,+D,EAFC,GAAhB2D,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3BAE,YAAY;AAIvB,8BAAoB7F,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAClB,eAAK8F,kBAAL,GAA0B,IAAI,oDAAJ,CAA0BT,IAAI,CAACG,KAAL,CAAWL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX,CAA1B,CAA1B;AACA,eAAKM,WAAL,GAAmB,KAAKD,kBAAL,CAAwBlF,YAAxB,EAAnB;AACD;;AAPsB;AAAA;AAAA,eASvB,eAA2B;AACzB,mBAAO,KAAKkF,kBAAL,CAAwBE,KAA/B;AACD;AAXsB;AAAA;AAAA,iBAavB,eAAMC,QAAN,EAAgBC,QAAhB,EAA0B;AAExB,mBAAO,KAAKlG,IAAL,CAAUe,GAAV,kCAA+CkF,QAA/C,cAA2DC,QAA3D,EAAP;AAED;AAjBsB;AAAA;AAAA,iBAkBvB,yBAAgBpF,OAAhB,EAAyB;AACvB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA8CD,OAA9C,EAAP;AACD;AApBsB;;AAAA;AAAA,S;;;;gBAThB;;;;AASI+E,kBAAY,eAJxB,iEAAW;AACV7D,kBAAU,EAAE;AADF,OAAX,CAIwB,E,iCAIG,+D,EAJH,GAAZ6D,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,UAAMzG,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAiCU,MAAjC,EAAqDH,SAArD,EAAsE;AACpE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAkCyC,IAAlC,EAAgD;AAE9C,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYsG,gBAAgB;AAE3B,kCAAoBnG,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAiC,EAAjC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAiC,EAAjC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAH0B;AAAA;AAAA,eAmB3B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnBzB;AAAA;AAAA,eAoB3B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB7B;AAAA;AAAA,eAqB3B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBZ;AAAA,eAyB3B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBpB;AAAA;AAAA,eAsB3B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBpB;AAAA,eA0B3B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BhC;AAAA;AAAA,eAuB3B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBxB;AAAA,eA2B3B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BnC;AAAA;AAAA,eA4B3B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B1C;AAAA;AAAA,eA6B3B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BtD;AAAA;AAAA,eA+B3B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjC0B;AAAA;AAAA,eAkC3B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApC0B;AAAA;AAAA,iBAsC3B,oBAAWE,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA+CD,OAA/C,EAAP;AACD;AAxC0B;AAAA;AAAA,iBAyC3B,iBAAQ/E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,wBAA2ChF,EAA3C,oBAAuD+E,OAAvD,EAAP;AACD;AA3C0B;AAAA;AAAA,iBA4C3B,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,8BAAuBF,OAAvB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA2BC,GAA3B,EAAgCE,SAAhC,CAA0C,UAAAzB,GAAG,EAAI;AAC/C,qBAAI,CAAC2G,SAAL,GAAiB3G,GAAjB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACmF,SAAtB;;AACA,qBAAI,CAACjG,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACmF,SAAzB;;AAEA,qBAAI,CAAClG,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAjE0B;AAAA;AAAA,iBAkEnB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AArE0B;AAAA;AAAA,iBAuEnB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK0I,SAAN,EAAiB1F,UAAjB,EAA6BC,aAA7B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AApF0B;AAAA;AAAA,iBAuF3B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AArG0B;AAAA;AAAA,iBAsG3B,gBAAOzD,IAAP,EAAa;AACX,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,wBAAsC5E,IAAtC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AA5G0B;AAAA;AAAA,iBA8G3B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AApH0B;AAAA;AAAA,iBAqH3B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,wBAAsCC,UAAtC,CAAP;AACD;AAvH0B;;AAAA;AAAA,S;;;;gBAlCpB;;;;AAkCIoE,sBAAgB,eAJ5B,iEAAW;AACVnE,kBAAU,EAAE;AADF,OAAX,CAI4B,E,iCAED,+D,EAFC,GAAhBmE,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBb,UAAM/G,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA8BU,MAA9B,EAAkDH,SAAlD,EAAmE;AACjE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA+ByC,IAA/B,EAA6C;AAC3C;AACA,eAAOzC,IAAI,CAACqG,QAAL,CAAc1D,WAAd,GAA4BC,QAA5B,CAAqCH,IAAI,CAACE,WAAL,EAArC,CAAP;AACD;;UAMYwG,aAAa;AAExB,+BAAoBrG,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA8B,EAA9B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA8B,EAA9B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHuB;AAAA;AAAA,eAmBxB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB5B;AAAA;AAAA,eAoBxB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApBhC;AAAA;AAAA,eAqBxB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBf;AAAA,eAyBxB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBvB;AAAA;AAAA,eAsBxB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBvB;AAAA,eA0BxB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BnC;AAAA;AAAA,eAuBxB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB3B;AAAA,eA2BxB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BtC;AAAA;AAAA,eA4BxB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B7C;AAAA;AAAA,eA6BxB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BzD;AAAA;AAAA,eA+BxB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCuB;AAAA;AAAA,eAkCxB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCuB;AAAA;AAAA,iBAuCxB,iBAAQ7E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,sBAAsChF,EAAtC,oBAAkD+E,OAAlD,EAAP;AACD;AAzCuB;AAAA;AAAA,iBA0CxB,oBAAWA,OAAX,EAAoB;AAAA;;AAElB,gBAAME,GAAG,4BAAqBF,OAArB,CAAT;AACAvE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAwBC,GAAxB,EAA6BE,SAA7B,CAAuC,UAAAzB,GAAG,EAAI;AAC5C,qBAAI,CAAC6G,OAAL,GAAe7G,GAAf;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACqF,OAAtB;;AACA,qBAAI,CAACnG,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACqF,OAAzB;;AAEA,qBAAI,CAACpG,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AA/DuB;AAAA;AAAA,iBAgEhB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAnEuB;AAAA;AAAA,iBAqEhB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK4I,OAAN,EAAe5F,UAAf,EAA2BC,aAA3B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAlFuB;AAAA;AAAA,iBAqFxB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAnGuB;AAAA;AAAA,iBAoGxB,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,sBAAoC5E,IAApC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA5GuB;AAAA;AAAA,iBA8GxB,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AApHuB;AAAA;AAAA,iBAqHxB,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,CAAP;AACD;AAvHuB;;AAAA;AAAA,S;;;;gBAnCjB;;;;AAmCIsE,mBAAa,eAJzB,iEAAW;AACVrE,kBAAU,EAAE;AADF,OAAX,CAIyB,E,iCAEE,+D,EAFF,GAAbqE,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBb,UAAMjH,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA8BU,MAA9B,EAAkDH,SAAlD,EAAmE;AACjE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAA+ByC,IAA/B,EAA6C;AAE3C,eAAOzC,IAAI,CAACqJ,OAAL,CAAa1G,WAAb,GAA2BC,QAA3B,CAAoCH,IAAI,CAACE,WAAL,EAApC,CAAP;AACD;;UAMY2G,aAAa;AAExB,+BAAoBxG,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAKZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA8B,EAA9B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA8B,EAA9B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AAVP;;AAHuB;AAAA;AAAA,iBAIxB,uBAAcG,OAAd,EAAuB;AACrB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA8CD,OAA9C,EAAP;AACD;AANuB;AAAA;AAAA,eAqBxB,eAAa;AAAE,mBAAO,KAAKT,OAAL,CAAaO,YAAb,EAAP;AAAqC;AArB5B;AAAA;AAAA,eAsBxB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AAtBhC;AAAA;AAAA,eAuBxB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WAvBf;AAAA,eA2BxB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AA3BvB;AAAA;AAAA,eAwBxB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAxBvB;AAAA,eA4BxB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA5BnC;AAAA;AAAA,eAyBxB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAzB3B;AAAA,eA6BxB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA7BtC;AAAA;AAAA,eA8BxB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA9B7C;AAAA;AAAA,eA+BxB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA/BzD;AAAA;AAAA,eAiCxB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAnCuB;AAAA;AAAA,eAqCxB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AAvCuB;AAAA;AAAA,iBAyCxB,iBAAQ7E,EAAR,EAAW+E,OAAX,EAAoB;AAClB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,sBAAmChF,EAAnC,oBAA+C+E,OAA/C,EAAP;AACD;AA3CuB;AAAA;AAAA,iBA4CxB,oBAAW/E,EAAX,EAAc+E,OAAd,EAAuB;AACrB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA4ChF,EAA5C,EAAP;AACD;AA9CuB;AAAA;AAAA,iBA+CxB,oBAAW0K,OAAX,EAAmB9C,UAAnB,EAA8BnB,QAA9B,EAAuCC,MAAvC,EAA+C;AAAA;;AAE7C,gBAAMzB,GAAG,4BAAqByF,OAArB,cAAgC9C,UAAhC,gBAAgDnB,QAAhD,cAA4DC,MAA5D,CAAT;AACAlG,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAwBC,GAAxB,EAA6BE,SAA7B,CAAuC,UAAAzB,GAAG,EAAI;AAC5C,qBAAI,CAACiH,MAAL,GAAcjH,GAAd;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACyF,MAAtB;;AACA,qBAAI,CAACvG,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACyF,MAAzB;;AAEA,qBAAI,CAACxG,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AApEuB;AAAA;AAAA,iBAsEhB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAzEuB;AAAA;AAAA,iBA2EhB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKgJ,MAAN,EAAchG,UAAd,EAA0BC,aAA1B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAxFuB;AAAA;AAAA,iBA0FxB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAxGuB;AAAA;AAAA,iBA0GxB,gBAAOoB,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,sBAAoCC,UAApC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAhHuB;;AAAA;AAAA,S;;;;gBAlCjB;;;;AAkCI+G,mBAAa,eAJzB,iEAAW;AACVxE,kBAAU,EAAE;AADF,OAAX,CAIyB,E,iCAEE,+D,EAFF,GAAbwE,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBb,UAAMpH,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA+CU,MAA/C,EAAmEH,SAAnE,EAAoF;AAClF,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAgDyC,IAAhD,EAA8D;AAC5D,eAAOzC,IAAI,CAACyJ,YAAL,CAAkB9G,WAAlB,GAAgCC,QAAhC,CAAyCH,IAAI,CAACE,WAAL,EAAzC,CAAP;AACD;;UAMY+G,aAAa;AAExB,+BAAoB5G,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAEZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA+C,EAA/C,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA+C,EAA/C,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AAPP;;AAHuB;AAAA;AAAA,eAiBxB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAjB5B;AAAA;AAAA,eAkBxB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AAlBhC;AAAA;AAAA,eAmBxB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WAnBf;AAAA,eAuBxB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAvBvB;AAAA;AAAA,eAoBxB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WApBvB;AAAA,eAwBxB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AAxBnC;AAAA;AAAA,eAqBxB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WArB3B;AAAA,eAyBxB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AAzBtC;AAAA;AAAA,eA0BxB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA1B7C;AAAA;AAAA,eA2BxB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA3BzD;AAAA;AAAA,eA6BxB,eAAY;AACV;AACA,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAhCuB;AAAA;AAAA,eAiCxB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AAnCuB;AAAA;AAAA,iBAqChB,cAAKY,KAAL,EAA4B;AAElCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AAzCuB;AAAA;AAAA,iBA2ClB,mBAAO;AAEX,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CAFW,CAIX;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKmJ,uBAAN,EAA+BnG,UAA/B,EAA2CC,aAA3C,CAArB,CALW,CAOX;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CATW,CAWX;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACH;AAzDyB;AAAA;AAAA,iBA2D1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AAzEyB;AAAA;AAAA,iBA2ExB,yBAAgB8F,OAAhB,EAAwBjE,QAAxB,EAAiCC,MAAjC,EAAyC;AACvC,mBAAO,KAAKzC,IAAL,CAAUe,GAAV,8BAAqD0F,OAArD,cAAgEjE,QAAhE,cAA4EC,MAA5E,EAAP;AACD;AA7EuB;AAAA;AAAA,iBA+ExB,wBAAegE,OAAf,EAAuB9C,UAAvB,EAAkCnB,QAAlC,EAA2CC,MAA3C,EAAmD;AACjD,mBAAO,KAAKzC,IAAL,CAAUe,GAAV,kCAA6D0F,OAA7D,cAAwE9C,UAAxE,cAAsFnB,QAAtF,cAAkGC,MAAlG,EAAP;AACD;AAjFuB;AAAA;AAAA,iBAmFxB,0BAAiBgE,OAAjB,EAAyB9C,UAAzB,EAAoCnB,QAApC,EAA6CC,MAA7C,EAAqD;AACnD,mBAAO,KAAKzC,IAAL,CAAUe,GAAV,oCAAiE0F,OAAjE,cAA4E9C,UAA5E,cAA0FnB,QAA1F,cAAsGC,MAAtG,EAAP;AACD;AArFuB;AAAA;AAAA,iBAuFxB,8BAAqBgE,OAArB,EAA6B9C,UAA7B,EAAwCnB,QAAxC,EAAiDC,MAAjD,EAAyD;AACvD,mBAAO,KAAKzC,IAAL,CAAUe,GAAV,wCAAyE0F,OAAzE,cAAoF9C,UAApF,cAAkGnB,QAAlG,cAA8GC,MAA9G,EAAP;AACD;AAzFuB;AAAA;AAAA,iBA2FxB,8BAAqBgE,OAArB,EAA6B9C,UAA7B,EAAwCmD,UAAxC,EAAmDtE,QAAnD,EAA4DC,MAA5D,EAAoE;AAClE,mBAAO,KAAKzC,IAAL,CAAUe,GAAV,wCAAyE0F,OAAzE,cAAoF9C,UAApF,cAAkGmD,UAAlG,cAAgHtE,QAAhH,cAA4HC,MAA5H,EAAP;AACD;AA7FuB;AAAA;AAAA,iBA+FxB,0BAAiBgE,OAAjB,EAAyB9C,UAAzB,EAAoCnB,QAApC,EAA6CC,MAA7C,EAAqD;AACnD,mBAAO,KAAKzC,IAAL,CAAUe,GAAV,oCAA+D0F,OAA/D,cAA0E9C,UAA1E,cAAwFnB,QAAxF,cAAoGC,MAApG,EAAP;AACD;AAjGuB;AAAA;AAAA,iBAmGxB,uBAAc3B,OAAd,EAAuB;AACrB,mBAAO,KAAKd,IAAL,CAAUe,GAAV,4BAA8CD,OAA9C,EAAP;AACD;AArGuB;;AAAA;AAAA,S;;;;gBAhCjB;;;;AAgCI8F,mBAAa,eAJzB,iEAAW;AACV5E,kBAAU,EAAE;AADF,OAAX,CAIyB,E,iCAEE,+D,EAFF,GAAb4E,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBb,UAAMxH,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA+BU,MAA/B,EAAmDH,SAAnD,EAAoE;AAClE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAgCyC,IAAhC,EAA8C;AAC5C;AACA,eAAOzC,IAAI,CAAC0C,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,IAAI,CAACE,WAAL,EAAjC,CAAP;AACD;;UAMYkH,cAAc;AAEzB,gCAAoB/G,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAEZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA+B,EAA/B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA+B,EAA/B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AAPP;;AAHwB;AAAA;AAAA,eAkBzB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAlB3B;AAAA;AAAA,eAmBzB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AAnB/B;AAAA;AAAA,eAoBzB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WApBd;AAAA,eAwBzB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAxBtB;AAAA;AAAA,eAqBzB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WArBtB;AAAA,eAyBzB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AAzBlC;AAAA;AAAA,eAsBzB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAtB1B;AAAA,eA0BzB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA1BrC;AAAA;AAAA,eA2BzB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3B5C;AAAA;AAAA,eA4BzB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA5BxD;AAAA;AAAA,eA8BzB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAhCwB;AAAA;AAAA,eAiCzB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AAnCwB;AAAA;AAAA,iBAqCzB,sBAAa;AAAA;;AAEX,gBAAMI,GAAG,qBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAyBC,GAAzB,EAA8BE,SAA9B,CAAwC,UAAAzB,GAAG,EAAI;AAC7C,qBAAI,CAACuH,MAAL,GAAcvH,GAAd;AACA;;AACA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAAC+F,MAAtB;;AACA,qBAAI,CAAC7G,SAAL,CAAec,IAAf,CAAoB,OAAI,CAAC+F,MAAzB;;AAEA,qBAAI,CAAC9G,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AA1DwB;AAAA;AAAA,iBA2DjB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AA9DwB;AAAA;AAAA,iBAgEjB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKsJ,MAAN,EAActG,UAAd,EAA0BC,aAA1B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AA7EwB;AAAA;AAAA,iBAgFzB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AA9FwB;;AAAA;AAAA,S;;;;gBAlClB;;;;AAkCIoG,oBAAc,eAJ1B,iEAAW;AACV/E,kBAAU,EAAE;AADF,OAAX,CAI0B,E,iCAEC,+D,EAFD,GAAd+E,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAM3H,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAAgCU,MAAhC,EAAoDH,SAApD,EAAqE;AACnE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAiCyC,IAAjC,EAA+C;AAC7C;AACA,eAAOzC,IAAI,CAAC+J,YAAL,CAAkBpH,WAAlB,GAAgCC,QAAhC,CAAyCH,IAAI,CAACE,WAAL,EAAzC,CAAP;AACD;;UAMYqH,eAAe;AAE1B,iCAAoBlH,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAgC,EAAhC,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAAgC,EAAhC,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHyB;AAAA;AAAA,eAmB1B,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB1B;AAAA;AAAA,eAoB1B,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB9B;AAAA;AAAA,eAqB1B,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBb;AAAA,eAyB1B,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBrB;AAAA;AAAA,eAsB1B,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBrB;AAAA,eA0B1B,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BjC;AAAA;AAAA,eAuB1B,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvBzB;AAAA,eA2B1B,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BpC;AAAA;AAAA,eA4B1B,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B3C;AAAA;AAAA,eA6B1B,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BvD;AAAA;AAAA,eA+B1B,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCyB;AAAA;AAAA,eAkC1B,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCyB;AAAA;AAAA,iBAuC1B,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,uBAAyChF,EAAzC,EAAP;AACD;AA1CyB;AAAA;AAAA,iBA2C1B,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,oBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAA0BC,GAA1B,EAA+BE,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C,qBAAI,CAACyC,SAAL,GAAiBzC,GAAjB;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACiB,SAAtB;;AACA,qBAAI,CAAC/B,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACiB,SAAzB;;AAEA,qBAAI,CAAChC,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAhEyB;AAAA;AAAA,iBAiElB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AApEyB;AAAA;AAAA,iBAsElB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAKwE,SAAN,EAAiBxB,UAAjB,EAA6BC,aAA7B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAnFyB;AAAA;AAAA,iBAsF1B,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AApGyB;AAAA;AAAA,iBAqG1B,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,uBAAqC5E,IAArC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA7GyB;AAAA;AAAA,iBA+G1B,gBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AArHyB;AAAA;AAAA,iBAsH1B,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,CAAP;AACD;AAxHyB;;AAAA;AAAA,S;;;;gBAlCnB;;;;AAkCImF,qBAAe,eAJ3B,iEAAW;AACVlF,kBAAU,EAAE;AADF,OAAX,CAI2B,E,iCAEA,+D,EAFA,GAAfkF,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBb,UAAM9H,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,EAAb;AAAA,eAA4BD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAzD;AAAA,OAAhB;;AAEA,eAAS5B,IAAT,CAAcR,IAAd,EAA+BU,MAA/B,EAAmDH,SAAnD,EAAoE;AAClE,YAAIA,SAAS,KAAK,EAAd,IAAoBG,MAAM,KAAK,EAAnC,EAAuC;AACrC,iBAAOV,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,mBAAIA,IAAJ,EAAUQ,IAAV,CAAe,UAAC6B,CAAD,EAAIC,CAAJ,EAAU;AAC9B,gBAAMC,GAAG,GAAGL,OAAO,WAAIG,CAAC,CAAC3B,MAAD,CAAL,aAAoB4B,CAAC,CAAC5B,MAAD,CAArB,EAAnB;AACA,mBAAOH,SAAS,KAAK,KAAd,GAAsBgC,GAAtB,GAA4B,CAACA,GAApC;AACD,WAHM,CAAP;AAID;AACF;;AAED,eAASC,OAAT,CAAiBxC,IAAjB,EAAgCyC,IAAhC,EAA8C;AAC5C;AACA,eAAOzC,IAAI,CAACoF,KAAL,CAAWzC,WAAX,GAAyBC,QAAzB,CAAkCH,IAAI,CAACE,WAAL,EAAlC,CAAP;AACD;;UAMYsH,cAAc;AAEzB,gCAAoBnH,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGZ,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,IAA7B,CAAZ;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAA+B,EAA/B,CAAZ;AACA,eAAAC,MAAA,GAAS,IAAI,oDAAJ,CAA+B,EAA/B,CAAT;AACA,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA4B,CAA5B,CAAV;AAEA,eAAAC,MAAA,GAAgB;AACtBC,gBAAI,EAAE,CADgB;AAEtBC,oBAAQ,EAAE,EAFY;AAGtBC,sBAAU,EAAE,EAHU;AAItBC,sBAAU,EAAE,EAJU;AAKtBC,yBAAa,EAAE;AALO,WAAhB;AARP;;AAHwB;AAAA;AAAA,eAmBzB,eAAa;AAAE,mBAAO,KAAKN,OAAL,CAAaO,YAAb,EAAP;AAAqC;AAnB3B;AAAA;AAAA,eAoBzB,eAAe;AAAE,mBAAO,KAAKX,SAAL,CAAeW,YAAf,EAAP;AAAuC;AApB/B;AAAA;AAAA,eAqBzB,eAAW;AAAE,mBAAO,KAAKN,MAAL,CAAYC,IAAnB;AAA0B,WArBd;AAAA,eAyBzB,aAASA,IAAT,EAAuB;AAAE,iBAAKM,IAAL,CAAU;AAAEN,kBAAI,EAAJA;AAAF,aAAV;AAAsB;AAzBtB;AAAA;AAAA,eAsBzB,eAAe;AAAE,mBAAO,KAAKD,MAAL,CAAYE,QAAnB;AAA8B,WAtBtB;AAAA,eA0BzB,aAAaA,QAAb,EAA+B;AAAE,iBAAKK,IAAL,CAAU;AAAEL,sBAAQ,EAARA;AAAF,aAAV;AAA0B;AA1BlC;AAAA;AAAA,eAuBzB,eAAiB;AAAE,mBAAO,KAAKF,MAAL,CAAYG,UAAnB;AAAgC,WAvB1B;AAAA,eA2BzB,aAAeA,UAAf,EAAgC;AAAE,iBAAKI,IAAL,CAAU;AAAEJ,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA3BrC;AAAA;AAAA,eA4BzB,aAAeC,UAAf,EAAuC;AAAE,iBAAKG,IAAL,CAAU;AAAEH,wBAAU,EAAVA;AAAF,aAAV;AAA4B;AA5B5C;AAAA;AAAA,eA6BzB,aAAkBC,aAAlB,EAAgD;AAAE,iBAAKE,IAAL,CAAU;AAAEF,2BAAa,EAAbA;AAAF,aAAV;AAA+B;AA7BxD;AAAA;AAAA,eA+BzB,eAAY;AACV,mBAAO,KAAKP,MAAL,CAAYQ,YAAZ,EAAP;AACD;AAjCwB;AAAA;AAAA,eAkCzB,eAAe;AACb,mBAAO,KAAKT,SAAL,CAAeS,YAAf,EAAP;AACD;AApCwB;AAAA;AAAA,iBAuCzB,iBAAQ7E,EAAR,EAAY;AACV;AACA,mBAAO,KAAKiE,IAAL,CAAUe,GAAV,uBAAwChF,EAAxC,EAAP;AACD;AA1CwB;AAAA;AAAA,iBA2CzB,sBAAa;AAAA;;AAEX,gBAAMiF,GAAG,oBAAT;AACAzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ;AACA,uEAAI;AAAA,qBAAM,OAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,IAApB,CAAN;AAAA,aAAJ,GACE,KAAKjB,IAAL,CAAUe,GAAV,CAAyBC,GAAzB,EAA8BE,SAA9B,CAAwC,UAAAzB,GAAG,EAAI;AAC7C,qBAAI,CAAC2H,OAAL,GAAe3H,GAAf;;AAEA,qBAAI,CAACW,MAAL,CAAYa,IAAZ,CAAiB,OAAI,CAACmG,OAAtB;;AACA,qBAAI,CAACjH,SAAL,CAAec,IAAf,CAAoB,OAAI,CAACmG,OAAzB;;AAEA,qBAAI,CAAClH,QAAL,CAAckB,IAAd,CACE,iEAAU;AAAA,uBAAM,OAAI,CAACC,OAAL,EAAN;AAAA,eAAV,CADF,EAEE,2DAAI;AAAA,uBAAM,OAAI,CAACpB,SAAL,CAAegB,IAAf,CAAoB,KAApB,CAAN;AAAA,eAAJ,CAFF,EAGEC,SAHF,CAGY,UAAAI,MAAM,EAAI;AACpB,uBAAI,CAAClB,MAAL,CAAYa,IAAZ,CAAiBK,MAAM,CAACpE,IAAxB;;AACA,uBAAI,CAACmD,OAAL,CAAaY,IAAb,CAAkBK,MAAM,CAACC,KAAzB;AACD,eAND;;AAQA,qBAAI,CAACrB,QAAL,CAAce,IAAd;AACD,aAfD,CADF;AAiBD;AAhEwB;AAAA;AAAA,iBAiEjB,cAAKO,KAAL,EAA4B;AAClCC,kBAAM,CAACC,MAAP,CAAc,KAAKpB,MAAnB,EAA2BkB,KAA3B;;AACA,iBAAKtB,QAAL,CAAce,IAAd;AACD;AApEwB;AAAA;AAAA,iBAsEjB,mBAAO;AACb,iCAAkE,KAAKX,MAAvE;AAAA,gBAAQI,UAAR,kBAAQA,UAAR;AAAA,gBAAoBC,aAApB,kBAAoBA,aAApB;AAAA,gBAAmCH,QAAnC,kBAAmCA,QAAnC;AAAA,gBAA6CD,IAA7C,kBAA6CA,IAA7C;AAAA,gBAAmDE,UAAnD,kBAAmDA,UAAnD,CADa,CAGb;;AACA,gBAAIkB,UAAU,GAAGjE,IAAI,CAAC,KAAK0J,OAAN,EAAe1G,UAAf,EAA2BC,aAA3B,CAArB,CAJa,CAMb;;AACAgB,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,UAAA1E,IAAI;AAAA,qBAAIwC,OAAO,CAACxC,IAAD,EAAOuD,UAAP,CAAX;AAAA,aAAtB,CAAb;AACA,gBAAMc,KAAK,GAAGI,UAAU,CAACjH,MAAzB,CARa,CAUb;;AACA,gBAAMwC,IAAI,GAAGyE,UAAU,CAACE,KAAX,CAAiB,CAACtB,IAAI,GAAG,CAAR,IAAaC,QAA9B,EAAwC,CAACD,IAAI,GAAG,CAAR,IAAaC,QAAb,GAAwBA,QAAhE,CAAb;AACA,mBAAO,gDAAG;AAAEtD,kBAAI,EAAJA,IAAF;AAAQqE,mBAAK,EAALA;AAAR,aAAH,CAAP;AACD;AAnFwB;AAAA;AAAA,iBAsFzB,iBAAQ;AACN;AACA,iBAAKrB,QAAL,CAAce,IAAd;;AACA,iBAAKb,MAAL,CAAYa,IAAZ,CAAiB,IAAjB;;AACA,iBAAKd,SAAL,CAAec,IAAf,CAAoB,IAApB;;AACA,iBAAKZ,OAAL,CAAaY,IAAb,CAAkB,IAAlB;;AACA,iBAAKhB,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,iBAAKX,MAAL,GAAc;AACZC,kBAAI,EAAE,CADM;AAEZC,sBAAQ,EAAE,EAFE;AAGZC,wBAAU,EAAE,EAHA;AAIZC,wBAAU,EAAE,EAJA;AAKZC,2BAAa,EAAE;AALH,aAAd;AAOD;AApGwB;AAAA;AAAA,iBAqGzB,gBAAOzD,IAAP,EAAa;AACX;AACA,mBAAO,KAAK8C,IAAL,CAAU8B,IAAV,uBAAqC5E,IAArC,EACJkE,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AAEflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAJK,CADD,CAAP;AAMD;AA7GwB;AAAA;AAAA,iBA+GzB,gBAAOsC,UAAP,EAAmB;AACjB;AACA,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,EACJX,IADI,CACC,2DAAI,UAAA3B,GAAG,EAAI;AACflD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;AACA,qBAAOA,GAAP;AACD,aAHK,CADD,CAAP;AAKD;AAtHwB;AAAA;AAAA,iBAuHzB,iBAAOsC,UAAP,EAAmB;AACjB,mBAAO,KAAK/B,IAAL,CAAU8B,IAAV,uBAAqCC,UAArC,CAAP;AACD;AAzHwB;;AAAA;AAAA,S;;;;gBAlClB;;;;AAkCIoF,oBAAc,eAJ1B,iEAAW;AACVnF,kBAAU,EAAE;AADF,OAAX,CAI0B,E,iCAEC,+D,EAFD,GAAdmF,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC9BCE,YAAY;AAExB,8BAAmBC,MAAnB,EAA0C;AAAA;;AAAvB,eAAAA,MAAA,GAAAA,MAAA;AAA0B;;AAFrB;AAAA;AAAA,iBAIjB,qBAAYC,MAAZ,EAAoBC,QAApB,EAA8B;AACnC,iBAAKF,MAAL,CAAYG,OAAZ,CAAoBF,MAApB,EAA4BC,QAA5B,EAAsC;AACpCE,qBAAO,EAAE;AAD2B,aAAtC;AAGD;AARuB;AAAA;AAAA,iBASjB,mBAAUH,MAAV,EAAkBC,QAAlB,EAA4B;AACjC,iBAAKF,MAAL,CAAYK,KAAZ,CAAkBJ,MAAlB,EAA0BC,QAA1B,EAAoC;AAClCE,qBAAO,EAAE;AADyB,aAApC;AAGD;AAbuB;AAAA;AAAA,iBAcjB,qBAAYH,MAAZ,EAAoBC,QAApB,EAA8B;AACnC,iBAAKF,MAAL,CAAYM,OAAZ,CAAoBL,MAApB,EAA4BC,QAA5B,EAAsC;AACpCE,qBAAO,EAAE;AAD2B,aAAtC;AAGD;AAlBuB;;AAAA;AAAA,S;;;;gBALjB;;;;AAKKL,kBAAY,eAHzB,iEAAW;AACVrF,kBAAU,EAAE;AADF,OAAX,CAGyB,E,iCAEG,wD,EAFH,GAAZqF,YAAY,CAAZ;;;;;;;;;;;;;;;;ACLd;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFQ,gBAAgB;AAY3B,kCACUC,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMSC,WANT,EAMiC;AAAA;;AALvB,eAAAL,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAjBT,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,UAAA,GAAa,MAAb;AAaE,eAAKC,UAAL;AACA,eAAKC,WAAL;AACD;;AAvB0B;AAAA;AAAA,iBAyB3B,oBAAW;AACT,iBAAKC,eAAL;AACA,iBAAKC,KAAL;AAED;AA7B0B;AAAA;AAAA,iBA8B3B,8BAAqBC,QAArB,EAAqC;AACnC,mBAAOC,OAAO,CAACjI,GAAR,CAAYgI,QAAZ,EAAsBE,UAAtB,EAAP;AACD;AAhC0B;AAAA;AAAA,eAkC3B,eAAQ;AAAE,mBAAO,KAAKC,QAAL,CAAcC,QAArB;AAAgC;AAlCf;AAAA;AAAA,iBAoCnB,sBAAa;AACnB,iBAAKD,QAAL,GAAgB,KAAKpB,WAAL,CAAiBsB,KAAjB,CAAuB;AACrCC,oBAAM,EAAE,CAD6B;AAErC/G,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWgH,QAAhB,CAF8B;AAGrCC,yBAAW,EAAE,CAAC,EAAD,CAHwB;AAIrCC,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAJwB;AAKrCG,+BAAiB,EAAE,CAAC,EAAD,CALkB;AAMrCC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAN0B;AAOrCK,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAP4B;AAQrCM,sBAAQ,EAAE,CAAC,CAAD,CAR2B;AASrCC,wBAAU,EAAE,CAAC,KAAD,CATyB;AAUrCC,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWR,QAAhB,CAVuB;AAWrCS,sBAAQ,EAAE,CAAC,EAAD,CAX2B;AAYrCC,wBAAU,EAAE,EAZyB;AAarCC,kBAAI,EAAE,GAAG,0DAAWX,QAAd,CAb+B;AAcrCY,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWZ,QAAhB,CAd4B;AAerCa,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWb,QAAhB,CAf+B;AAgBrCxM,kBAAI,EAAE,CAAC,EAAD,CAhB+B;AAiBrCsN,gCAAkB,EAAE,CAAC,EAAD,CAjBiB;AAkBrCC,8BAAgB,EAAE,CAAC,EAAD;AAlBmB,aAAvB,CAAhB;AAoBD;AAzD0B;AAAA;AAAA,iBA0D3B,sBAAa1H,KAAb,EAAoB;AAAA;;;;AAClB,iBAAK2F,MAAL,GAAc,CAAH,KAAG,KAAKA,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,EAAX,GAAe,EAA7B;;AACA,gBAAI3F,KAAK,CAAC2H,MAAN,CAAaC,KAAb,IAAsB5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAIC,WAAW,GAAG7H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB7P,MAArC;;AACA,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+P,WAApB,EAAiC/P,CAAC,EAAlC,EAAsC;AACpC,oBAAIgQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,oBAAIC,QAAQ,GAAGhI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,EAAsBmQ,IAAtB,GAA6B,MAA5C;;AACA,oBAAID,QAAQ,GAAG,CAAf,EAAkB;AAAEE,uBAAK,CAAC,wBAAD,CAAL;AAAkC,iBAAtD,MACK;AACHJ,wBAAM,CAACK,MAAP,GAAgB,UAACnI,KAAD,EAAgB;AAC9BpG,2BAAO,CAACC,GAAR,CAAYmG,KAAK,CAAC2H,MAAN,CAAahJ,MAAzB;;AACA,2BAAI,CAACgH,MAAL,CAAYyC,IAAZ,CAAiBpI,KAAK,CAAC2H,MAAN,CAAahJ,MAA9B;;AACA,2BAAI,CAAC4H,QAAL,CAAc8B,UAAd,CAAyB;AACvBlB,kCAAY,EAAE,OAAI,CAACxB;AADI,qBAAzB;AAGD,mBAND;;AAOAmC,wBAAM,CAACQ,aAAP,CAAqBtI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,CAArB;AACD;AACF;AACF;AACF;AA9E0B;AAAA;AAAA,iBA+EnB,oBAAWmJ,IAAX,EAAqB;AAC3B,gBAAMsH,GAAG,GAAGtH,IAAI,CAACI,OAAL,EAAZ;AACA,gBAAMmH,KAAK,GAAGvH,IAAI,CAACO,QAAL,KAAkB,CAAhC,CAF2B,CAEQ;;AACnC,gBAAMiH,IAAI,GAAGxH,IAAI,CAACS,WAAL,EAAb;AAEA,gBAAMgH,aAAa,aAAMH,GAAN,cAAaC,KAAb,cAAsBC,IAAtB,CAAnB;AACA,mBAAOC,aAAP;AACD;AAtF0B;AAAA;AAAA,iBAuFnB,kBAASC,GAAT,EAAc;AAAA;;AACpB;AAEA,gBAAMC,IAAI,GAAGvC,OAAO,CAACjI,GAAR,CAAY,aAAZ,EAA2ByK,UAA3B,CAAsCF,GAAG,CAAC9B,WAA1C,CAAb;AACA,gBAAMC,iBAAiB,GAAGT,OAAO,CAACjI,GAAR,CAAY,mBAAZ,EAAiCyK,UAAjC,CAA4CF,GAAG,CAAC7B,iBAAhD,CAA1B;AAEA,iBAAKgC,CAAL,CAAOnJ,KAAP,CAAaoJ,QAAb,CAAsBJ,GAAG,CAAChJ,KAA1B;AACA,iBAAKmJ,CAAL,CAAOlC,WAAP,CAAmBmC,QAAnB,CAA4BJ,GAAG,CAAC/B,WAAhC;AACA,iBAAKkC,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BH,IAA5B;AACA,iBAAKE,CAAL,CAAOhC,iBAAP,CAAyBiC,QAAzB,CAAkCjC,iBAAlC;AACA,iBAAKgC,CAAL,CAAOxB,IAAP,CAAYyB,QAAZ,CAAqBJ,GAAG,CAACrB,IAAzB;AACA,iBAAKwB,CAAL,CAAOvB,OAAP,CAAewB,QAAf,CAAwBJ,GAAG,CAACpB,OAA5B,EAXoB,CAapB;AACA;AAEA;AACA;AAEA;AACA;;AACA,iBAAKuB,CAAL,CAAO/B,SAAP,CAAiBgC,QAAjB,CAA0BJ,GAAG,CAAC5B,SAA9B;AACA,iBAAK+B,CAAL,CAAO9B,OAAP,CAAe+B,QAAf,CAAwBJ,GAAG,CAAC3B,OAA5B;AACA,iBAAK8B,CAAL,CAAO3O,IAAP,CAAY4O,QAAZ,CAAqBJ,GAAG,CAACxO,IAAzB;AACA,iBAAK2O,CAAL,CAAOpC,MAAP,CAAcqC,QAAd,CAAuBJ,GAAG,CAACjC,MAA3B;AACA,iBAAKoC,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAA7B;AACA,iBAAK+B,cAAL,CAAoB,KAAKF,CAAL,CAAOpC,MAAP,CAAcrD,KAAlC;;AAEA,gBAAIsF,GAAG,CAACpB,OAAJ,IAAe,EAAnB,EAAuB;AACrB,mBAAK/B,WAAL,CAAiByD,QAAjB,CAA0BN,GAAG,CAACpB,OAA9B,EAAuChJ,SAAvC,CAAiD,UAACzB,GAAD,EAAc;AAC7D,uBAAI,CAAC+I,QAAL,GAAgB/I,GAAhB;AACD,eAFD;AAGD;AACF;AAxH0B;AAAA;AAAA,iBAyHnB,wBAAe1D,EAAf,EAAmB;AAAA;;AACzB;AACA,iBAAKoM,WAAL,CAAiBwD,cAAjB,CAAgC5P,EAAhC,EAAoCmF,SAApC,CAA8C,UAACzB,GAAD,EAAc;AAC1D,qBAAI,CAAC6I,MAAL,GAAc7I,GAAd;;AACA,qBAAI,CAACgM,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,OAAI,CAACpD,MAAlC;AACD,aAHD;AAID;AA/H0B;AAAA;AAAA,iBAgI3B,qBAAYgD,GAAZ,EAAiB;AACf,gBAAMO,KAAK,GAAG,KAAKvD,MAAL,CAAYwD,OAAZ,CAAoBR,GAApB,CAAd;AACA,iBAAKhD,MAAL,CAAYyD,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AAEA,iBAAKJ,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,KAAKpD,MAAlC;AACD;AArI0B;AAAA;AAAA,iBAsI3B,iBAAQ;AACNU,mBAAO,CAACgD,IAAR,CACE;AACEnO,sBAAQ,EAAE;AADZ,aADF;AAKAmL,mBAAO,CAACgD,IAAR,CACE;AACEnO,sBAAQ,EAAE;AADZ,aADF;AAKD;AAjJ0B;AAAA;AAAA,iBAoJnB,uBAAc;AAAA;;AACpB;AACA,iBAAKsK,WAAL,CAAiBS,WAAjB,GAA+B1H,SAA/B,CAAyC,UAACzB,GAAD,EAAc;AACrD,qBAAI,CAAC8I,WAAL,GAAmB9I,GAAnB;AACD,aAFD;AAGD;AAzJ0B;AAAA;AAAA,iBA2J3B,kBAASkD,KAAT,EAAgB;AAAA;;AACd,gBAAIsJ,kBAAkB,GAAGtJ,KAAK,CAAC2H,MAAN,CAAatE,KAAtC;;AACA,wCAAqBiG,kBAAkB,CAACC,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAkC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAAtC,CAArB;AAAA;AAAA,gBAAKR,KAAL;AAAA,gBAAY7F,KAAZ;;AACAzJ,mBAAO,CAACC,GAAR,CAAYqP,KAAZ;AACAtP,mBAAO,CAACC,GAAR,CAAYwJ,KAAZ;AAEA,iBAAKmC,WAAL,CAAiByD,QAAjB,CAA0B5F,KAA1B,EAAiC9E,SAAjC,CAA2C,UAACzB,GAAD,EAAc;AACvD,qBAAI,CAAC+I,QAAL,GAAgB/I,GAAhB;AACD,aAFD;AAGD;AApK0B;AAAA;AAAA,iBAqK3B,2BAAkB;AAAA;;AAChB;AACA,iBAAKuI,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACnE,OAAL,GAAe,IAAf;;AACA,uBAAI,CAACoD,CAAL,CAAOpC,MAAP,CAAcqC,QAAd,CAAuBc,GAAvB;;AACA,uBAAI,CAACrE,WAAL,CAAiBsE,OAAjB,CAAyBD,GAAzB,EAA8BtL,SAA9B,CAAwC,UAAAzB,GAAG,EAAI;AAC7C;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAAC4I,OAAL,GAAe,KAAf;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAnL0B;AAAA;AAAA,iBAoL3B,oBAAW;AAAA;;AACT;AACA,gBAAMmB,WAAW,GAAG,KAAKmD,oBAAL,CAA0B,aAA1B,CAApB;AACA,gBAAMlD,iBAAiB,GAAG,KAAKkD,oBAAL,CAA0B,mBAA1B,CAA1B;AACA,iBAAKzD,QAAL,CAAc0D,gBAAd;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;AAEA,iBAAKqD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BlC,WAA5B;AACA,iBAAKiC,CAAL,CAAOhC,iBAAP,CAAyBiC,QAAzB,CAAkCjC,iBAAlC;;AAEA,gBAAI,KAAKP,QAAL,CAAc2D,OAAlB,EAA2B;AAAE;AAAS;;AACtC,iBAAKxE,OAAL,GAAe,IAAf;;AACA,gBAAIyE,QAAQ,CAAC,KAAKrB,CAAL,CAAOpC,MAAP,CAAcrD,KAAf,CAAR,KAAkC,CAAtC,EAAyC;AACvC;AACA,mBAAKmC,WAAL,CAAiB4E,MAAjB,CAAwB,KAAK7D,QAAL,CAAclD,KAAtC,EAA6C9E,SAA7C,CAAuD,UAAAhE,IAAI,EAAI;AAC7D,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AAEF,eAPD,EAOG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAdD,MAcO;AACL;AACA,mBAAKF,WAAL,CAAiBgF,MAAjB,CAAwB,KAAKjE,QAAL,CAAclD,KAAtC,EAA6C9E,SAA7C,CAAuD,UAAAhE,IAAI,EAAI;AAC7D,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA5N0B;;AAAA;AAAA,S;;;;gBAdpB;;gBACgB;;gBAAhB;;gBACA;;gBAEA;;gBACA;;;;AASIR,sBAAgB,eAL5B,gEAAU;AACThK,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,6GAFS;;;;AAAA,OAAV,CAK4B,E,iCAaJ,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACS,kE,EAlBK,GAAhBvF,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,UAAMwF,GAAG,GAAG,IAAIjQ,IAAJ,EAAZ;;UAQakQ,iBAAiB;AAc5B,mCAAmBC,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAKU0F,yBALV,EAKgE;AAAA;;AAL7C,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAjBV,eAAAC,WAAA,GAAa,EAAb;AAkBE,eAAKC,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AAtB2B;AAAA;AAAA,iBAuB5B,oBAAW;AACT,gBAAMhK,IAAI,GAAY,IAAI,kEAAJ,CAAYyJ,GAAG,CAAChJ,WAAJ,EAAZ,EAA+BgJ,GAAG,CAAClJ,QAAJ,KAAiB,CAAhD,EAAmD,CAAnD,CAAtB;AACA,iBAAK0J,WAAL,CAAiBrL,QAAjB,GAA4BoB,IAA5B;AACA,iBAAKkK,OAAL;AACD;AA3B2B;AAAA;AAAA,iBA4B5B,cAAKC,MAAL,EAAa;AAEX,iBAAKhG,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,EAAoBc,MAApB,CAArB;AACD;AA/B2B;AAAA;AAAA,iBAiC5B,oBAAWC,IAAX,EAAiBC,MAAjB,EAAyB;AAAA;;AACvB;AACAD,gBAAI,CAACpE,QAAL,GAAgBqE,MAAhB;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoBa,IAApB,EAA0B9M,SAA1B,CAAoC,UAAAhE,IAAI,EAAI;AAE1C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,uBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AA7C2B;AAAA;AAAA,iBA+C5B,mBAAU;AACP;AACD,iBAAKK,OAAL,CAAaW,UAAb,CAAwB,KAAKC,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAAxB,EAAmE,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAAnE;AACA,iBAAK2L,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AArD2B;AAAA;AAAA,iBAuD5B,sBAAyC;AAAA,gBAAhC/P,MAAgC,QAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,QAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AAhE2B;AAAA;AAAA,iBAkEf,gCAAuB2O,IAAvB,EAA6B;;;;;;;AACxC;;AAEI,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;0CAA2G,I;;;;;AAC7G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,+BAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,+BAAI,CAACc,OAAL;AACD,uBAHD,MAKE,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AAEH,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,6BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,qBAVD;;;;;;;;;;AAaH;AAnF2B;AAAA;AAAA,iBAqF5B,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AAvF2B;AAAA;AAAA,iBAwF5B,kBAAS;AAEP,iBAAK4C,OAAL;AACD;AA3F2B;AAAA;AAAA,iBA4F5B,gBAAOxC,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKE,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AAEH,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAVD;AAWD;AAxG2B;;AAAA;AAAA,S;;;;gBAdrB;;gBACA;;gBAEA;;gBADA;;gBATgB;;gBAWhB;;;;;;gBAgBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAKR,0D;AAAY,iBAAC,wFAAD;;;AAXHI,uBAAiB,eAP7B,gEAAU;AACTzP,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sGAFS;AAITsB,iBAAS,EAAE,CAAC,0EAAD,CAJF;;;;AAAA,OAAV,CAO6B,E,iCAcA,yE,EACf,0F,EACU,0E,EACV,0E,EACI,sD,EACoB,uG,EAnBT,GAAjBpB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFqB,oBAAoB;AAO/B,sCACU7G,WADV,EAEUC,MAFV,EAGUC,KAHV,EAISE,EAJT,EAKUD,EALV,EAMU2G,eANV,EAM0C;AAAA;;AALhC,eAAA9G,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAE,EAAA,GAAAA,EAAA;AACC,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAA2G,eAAA,GAAAA,eAAA;AAZV,eAAAxG,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAwG,eAAA,GAAkB,KAAlB;AAYE,eAAKlG,UAAL;AACD;;AAjB8B;AAAA;AAAA,iBAmB/B,oBAAW;AACT,iBAAKmG,WAAL;AACD;AArB8B;AAAA;AAAA,eAuB/B,eAAQ;AAAE,mBAAO,KAAKC,YAAL,CAAkB5F,QAAzB;AAAoC;AAvBf;AAAA;AAAA,iBAyBvB,sBAAa;AACnB,iBAAK4F,YAAL,GAAoB,KAAKjH,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADmC;AAEzC0F,0BAAY,EAAE,EAF2B;AAGzCC,wBAAU,EAAE,CAAC,EAAD,CAH6B;AAIzCrF,sBAAQ,EAAE,CAAC,IAAD,CAJ+B;AAKzCsF,wBAAU,EAAE,CAL6B;AAMzCC,mBAAK,EAAE,CAAC,EAAD;AANkC,aAAvB,CAApB;AAQD;AAlC8B;AAAA;AAAA,iBAoCvB,kBAAS7D,GAAT,EAAc;AAEpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOyD,UAAP,CAAkBxD,QAAlB,CAA2BJ,GAAG,CAAC4D,UAA/B;AACA,iBAAKzD,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AA7C8B;AAAA;AAAA,iBA+C/B,uBAAc;AAAA;;AAEZ,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACqC,eAAL,GAAuB,IAAvB;;AACA,uBAAI,CAACpD,CAAL,CAAOyD,UAAP,CAAkBxD,QAAlB,CAA2Bc,GAA3B;;AACA,uBAAI,CAACoC,eAAL,CAAqBnC,OAArB,CAA6BD,GAA7B,EAAkCtL,SAAlC,CAA4C,UAAAzB,GAAG,EAAI;AACjD;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAACoP,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA7D8B;AAAA;AAAA,iBA+D/B,oBAAW;AAAA;;AACT;AACA,iBAAKE,YAAL,CAAkBnC,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK2G,YAAL,CAAkBlC,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AACA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOyD,UAAP,CAAkBlJ,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAE3C;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAKyJ,YAAL,CAAkB/I,KAAjC,CAAZ;AACA,mBAAK4I,eAAL,CAAqB7B,MAArB,CAA4B,KAAKgC,YAAL,CAAkB/I,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,iBAJoE,CAKrE;;;AACA,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAPD,EAOG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAhBD,MAgBO;AACL;AACA,mBAAKuG,eAAL,CAAqBzB,MAArB,CAA4B,KAAK4B,YAAL,CAAkB/I,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AApG8B;;AAAA;AAAA,S;;;;gBAbb;;gBAEX;;gBAAQ;;gBAGR;;gBAFA;;gBACA;;;;;;gBAcN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AALCsG,0BAAoB,eALhC,gEAAU;AACT9Q,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,oHAFS;;;;AAAA,OAAV,CAKgC,E,iCAQR,0D,EACL,sD,EACD,8D,EACJ,0E,EACC,0F,EACa,iF,EAbI,GAApBuB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAU,iBAAiB;AAS5B,mCAAmB9B,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAKU0F,yBALV,EAKgE;AAAA;;AAL7C,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AACR,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AAjB2B;AAAA;AAAA,iBAmB5B,oBAAW;AACT,iBAAKE,OAAL;AACD;AArB2B;AAAA;AAAA,iBAsB5B,wBAAY;AAAA;;AACV,iBAAKP,OAAL,CAAa+B,UAAb,GAA0BpO,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,qBAAI,CAAC+N,YAAL,CAAkB+B,iBAAlB,CAAoC9P,GAApC,EAAyC,eAAzC;AACD,aAFD,EAEG,UAAAkI,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,kBAA1B;AACD,aAJD;AAKD;AA5B2B;AAAA;AAAA,iBA6B5B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAlC2B;AAAA;AAAA,iBAoC5B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AACvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA5C2B;AAAA;AAAA,iBA8C5B,cAAKoF,QAAL,EAAe;AAEb,iBAAKkF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwBpK,QAAxB,CAArB;AACD;AAjD2B;AAAA;AAAA,iBAmDf,gCAAuBuJ,IAAvB,EAA6B;;;;;;;AACxC;;AAEI,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAC7G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,+BAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,+BAAI,CAACc,OAAL;AACD,uBAHD,MAKE,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AAEH,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,6BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,qBAVD;;;;;;;;;;AAaH;AApE2B;AAAA;AAAA,iBAuE5B,gBAAO5B,GAAP,EAAY;AAAA;;AAEV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKA,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACX,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACA,aAVD;AAWD;AApF2B;;AAAA;AAAA,S;;;;gBAXrB;;gBAHA;;gBAKA;;gBADA;;gBAHgB;;gBAKhB;;;;;;gBAeN,0D;AAAY,iBAAC,wFAAD;;;AAPFmC,uBAAiB,eAN7B,gEAAU;AACTxR,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,6GAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM6B,E,iCASA,iF,EACf,0F,EACU,0E,EACV,0E,EACI,sD,EACoB,uG,EAdT,GAAjBW,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCOf;;;UAOaG,gBAAgB;AAe3B,kCACU1H,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUuH,WANV,EAMkC;AAAA;;AALxB,eAAA3H,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAuH,WAAA,GAAAA,WAAA;AApBV,eAAArH,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAoH,SAAA,GAAY,EAAZ;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAC,eAAA,GAAkB,EAAlB;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,QAAA,GAAW,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,EAAiF,MAAjF,EAAyF,MAAzF,EAAiG,MAAjG,EAAyG,MAAzG,EAAiH,MAAjH,EAAyH,MAAzH,EAAiI,MAAjI,EAAyI,MAAzI,EAAiJ,MAAjJ,EAAyJ,MAAzJ,EAAiK,MAAjK,EAAyK,MAAzK,EAAiL,MAAjL,EAAyL,MAAzL,EAAiM,MAAjM,EAAyM,MAAzM,EAAiN,MAAjN,EAAyN,MAAzN,EAAiO,MAAjO,EAAyO,MAAzO,EAAiP,MAAjP,EAAyP,MAAzP,EAAiQ,MAAjQ,EAAyQ,MAAzQ,CAAX;AACA,eAAAvH,UAAA,GAAa,MAAb;AAWE,eAAKC,UAAL,GAHgC,CAIhC;;AACA,eAAKuH,YAAL;AACA,eAAKC,QAAL,GANgC,CAOhC;AACA;AACD;;AA9B0B;AAAA;AAAA,iBAgC3B,oBAAW;AACT,iBAAKC,kBAAL;AACD;AAlC0B;AAAA;AAAA,eAoC3B,eAAQ;AAAE,mBAAO,KAAKC,QAAL,CAAclH,QAArB;AAAgC;AApCf;AAAA;AAAA,iBAsCnB,sBAAa;AACnB,iBAAKkH,QAAL,GAAgB,KAAKvI,WAAL,CAAiBsB,KAAjB,CAAuB;AACrCkH,mBAAK,EAAE,CAD8B;AAErCC,mBAAK,EAAE,CAAC,CAAD,CAF8B;AAGrCzJ,wBAAU,EAAE,CAAC,CAAD,CAHyB;AAIrC0J,2BAAa,EAAE,CAAC,EAAD,EAAK,0DAAWlH,QAAhB,CAJsB;AAKrC1J,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAL+B;AAMrCE,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CANwB;AAOrCmH,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWnH,QAAhB,CAP8B;AAQrCoH,oBAAM,EAAE,GAAG,0DAAWpH,QAAd,CAR6B;AASrCqH,qBAAO,EAAE,GAAG,0DAAWrH,QAAd,CAT4B;AAUrC8B,kBAAI,EAAE,GAAG,0DAAW9B,QAAd,CAV+B;AAWrCsH,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWtH,QAAhB,CAX8B;AAYrCuH,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWvH,QAAhB,CAZqB;AAarCwH,wBAAU,EAAE,EAbyB;AAcrCC,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWzH,QAAhB,CAdyB;AAerC0H,+BAAiB,EAAE,CAAC,EAAD,CAfkB;AAgBrCpH,sBAAQ,EAAE,CAAC,CAAD,CAhB2B;AAiBrCqH,yBAAW,EAAE,CAAC,EAAD,CAjBwB;AAkBrCtN,wBAAU,EAAE,GAAG,0DAAW2F,QAAd,CAlByB;AAmBrC4H,oBAAM,EAAE,GAAG,0DAAW5H,QAAd,CAnB6B;AAoBrC6H,oBAAM,EAAE,CAAC,EAAD,CApB6B;AAqBrCC,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW9H,QAAhB,CArB4B;AAsBrCQ,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWR,QAAhB,CAtBuB;AAuBrCS,sBAAQ,EAAE,CAAC,EAAD,CAvB2B;AAwBrCsH,wBAAU,EAAE,EAxByB;AAyBrClH,kBAAI,EAAE,CAAC,EAAD;AAzB+B,aAAvB,CAAhB;AA2BD;AAlE0B;AAAA;AAAA,iBAmE3B,sBAAaxH,KAAb,EAAoB;AAAA;;;;AAClB,iBAAK2F,MAAL,GAAc,CAAH,KAAG,KAAKA,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,EAAX,GAAe,EAA7B;;AACA,gBAAI3F,KAAK,CAAC2H,MAAN,CAAaC,KAAb,IAAsB5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAIC,WAAW,GAAG7H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB7P,MAArC;;AACA,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+P,WAApB,EAAiC/P,CAAC,EAAlC,EAAsC;AACpC,oBAAIgQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,oBAAIC,QAAQ,GAAGhI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,EAAsBmQ,IAAtB,GAA6B,MAA5C;;AACA,oBAAID,QAAQ,GAAG,CAAf,EAAkB;AAAEE,uBAAK,CAAC,wBAAD,CAAL;AAAkC,iBAAtD,MACK;AAEHJ,wBAAM,CAACK,MAAP,GAAgB,UAACnI,KAAD,EAAgB;AAC9BpG,2BAAO,CAACC,GAAR,CAAYmG,KAAK,CAAC2H,MAAN,CAAahJ,MAAzB;;AACA,2BAAI,CAACgH,MAAL,CAAYyC,IAAZ,CAAiBpI,KAAK,CAAC2H,MAAN,CAAahJ,MAA9B;;AACA,2BAAI,CAAC+O,QAAL,CAAcrF,UAAd,CAAyB;AACvBlB,kCAAY,EAAE,OAAI,CAACxB;AADI,qBAAzB;AAGD,mBAND;;AAOAmC,wBAAM,CAACQ,aAAP,CAAqBtI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,CAArB;AACD;AACF;AACF;AACF;AAxF0B;AAAA;AAAA,iBA0FnB,kBAAS6Q,GAAT,EAAc;AAAA;;AACpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAO+E,aAAP,CAAqB9E,QAArB,CAA8BJ,GAAG,CAACkF,aAAlC;AACA,iBAAK/E,CAAL,CAAO6F,OAAP,CAAe5F,QAAf,CAAwBJ,GAAG,CAACgG,OAA5B;AACA,iBAAK7F,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO8F,QAAP,CAAgB7F,QAAhB,CAAyBJ,GAAG,CAACiG,QAA7B;AACA,iBAAK9F,CAAL,CAAO+F,MAAP,CAAc9F,QAAd,CAAuBJ,GAAG,CAACkG,MAA3B;AACA,iBAAK/F,CAAL,CAAOgG,SAAP,CAAiB/F,QAAjB,CAA0BJ,GAAG,CAACmG,SAA9B;AACA,iBAAKhG,CAAL,CAAOiG,WAAP,CAAmBhG,QAAnB,CAA4BJ,GAAG,CAACoG,WAAhC;AACA,iBAAKjG,CAAL,CAAOkG,KAAP,CAAajG,QAAb,CAAsBJ,GAAG,CAACqG,KAA1B;AACA,iBAAKlG,CAAL,CAAOmG,WAAP,CAAmBlG,QAAnB,CAA4BJ,GAAG,CAACsG,WAAhC;AACA,iBAAKnG,CAAL,CAAOkF,OAAP,CAAejF,QAAf,CAAwBJ,GAAG,CAACqF,OAA5B;AACA,iBAAKlF,CAAL,CAAOiF,MAAP,CAAchF,QAAd,CAAuBJ,GAAG,CAACoF,MAA3B;AACA,iBAAKjF,CAAL,CAAOL,IAAP,CAAYM,QAAZ,CAAqBJ,GAAG,CAACF,IAAzB;AACA,iBAAKK,CAAL,CAAOqF,UAAP,CAAkBpF,QAAlB,CAA2BJ,GAAG,CAACwF,UAA/B;AACA,iBAAKrF,CAAL,CAAOoG,SAAP,CAAiBnG,QAAjB,CAA0BJ,GAAG,CAACuG,SAA9B;AACA,iBAAKpG,CAAL,CAAOqG,QAAP,CAAgBpG,QAAhB,CAAyBJ,GAAG,CAACwG,QAA7B;AACA,iBAAKrG,CAAL,CAAOsF,UAAP,CAAkBrF,QAAlB,CAA2BJ,GAAG,CAACyF,UAA/B;AACA,iBAAKtF,CAAL,CAAOyD,UAAP,CAAkBxD,QAAlB,CAA2BJ,GAAG,CAAC4D,UAA/B;AACA,iBAAKzD,CAAL,CAAOsG,QAAP,CAAgBrG,QAAhB,CAAyBJ,GAAG,CAACyG,QAA7B;AACA,iBAAKtG,CAAL,CAAOoF,cAAP,CAAsBnF,QAAtB,CAA+BJ,GAAG,CAACuF,cAAnC;AACA,iBAAKpF,CAAL,CAAOuG,SAAP,CAAiBtG,QAAjB,CAA0BJ,GAAG,CAAC0G,SAA9B;AACA,iBAAKvG,CAAL,CAAO3E,UAAP,CAAkB4E,QAAlB,CAA2BJ,GAAG,CAACxE,UAA/B;AACA,iBAAK2E,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAA1C;AACA,iBAAKqI,cAAL,CAAoB,KAAKxG,CAAL,CAAOyG,MAAP,CAAclM,KAAlC;;AAEA,gBAAIsF,GAAG,CAACoF,MAAJ,IAAc,EAAlB,EAAsB;AACpB,mBAAKjB,WAAL,CAAiB0C,SAAjB,CAA2B7G,GAAG,CAACoF,MAA/B,EAAuCxP,SAAvC,CAAiD,UAACzB,GAAD,EAAc;AAC7D,uBAAI,CAACiQ,SAAL,GAAiBjQ,GAAjB;AACD,eAFD;AAGD;AACF;AAzH0B;AAAA;AAAA,iBA2H3B,qBAAY6L,GAAZ,EAAiB;AACf,gBAAMO,KAAK,GAAG,KAAKvD,MAAL,CAAYwD,OAAZ,CAAoBR,GAApB,CAAd;AACA,iBAAKhD,MAAL,CAAYyD,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACA,iBAAKJ,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,KAAKpD,MAAlC;AACD;AA/H0B;AAAA;AAAA,iBAiInB,oBAAW;AAAA;;AACjB;AACA,iBAAKmH,WAAL,CAAiBU,QAAjB,GAA4BjP,SAA5B,CAAsC,UAACzB,GAAD,EAAc;AAClD,qBAAI,CAACoQ,QAAL,GAAgBpQ,GAAhB;AACD,aAFD;AAGD;AAtI0B;AAAA;AAAA,iBAwI3B,kBAASkD,KAAT,EAAgB;AAAA;;AACd,gBAAIsJ,kBAAkB,GAAGtJ,KAAK,CAAC2H,MAAN,CAAatE,KAAtC;;AACA,yCAAqBiG,kBAAkB,CAACC,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAkC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAAtC,CAArB;AAAA;AAAA,gBAAKR,KAAL;AAAA,gBAAY7F,KAAZ;;AACAzJ,mBAAO,CAACC,GAAR,CAAYqP,KAAZ;AACAtP,mBAAO,CAACC,GAAR,CAAYwJ,KAAZ;AAEA,iBAAKyJ,WAAL,CAAiB0C,SAAjB,CAA2BnM,KAA3B,EAAkC9E,SAAlC,CAA4C,UAACzB,GAAD,EAAc;AACxD,qBAAI,CAACiQ,SAAL,GAAiBjQ,GAAjB;AACD,aAFD;AAGD;AAjJ0B;AAAA;AAAA,iBAkJ3B,8BAAqB;AAAA;;AACnB,iBAAKuI,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACnE,OAAL,GAAe,IAAf;;AACA,uBAAI,CAACoD,CAAL,CAAOuG,SAAP,CAAiBtG,QAAjB,CAA0Bc,GAA1B;;AACA,uBAAI,CAACiD,WAAL,CAAiB2C,QAAjB,CAA0B5F,GAA1B,EAA+BtL,SAA/B,CAAyC,UAAAzB,GAAG,EAAI;AAC9C;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAAC4I,OAAL,GAAe,KAAf;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA/J0B;AAAA;AAAA,iBAgKnB,wBAAetM,EAAf,EAAmB;AAAA;;AACzB;AACA,iBAAK0T,WAAL,CAAiBwC,cAAjB,CAAgClW,EAAhC,EAAoCmF,SAApC,CAA8C,UAACzB,GAAD,EAAc;AAC1D,qBAAI,CAAC6I,MAAL,GAAc7I,GAAd;;AACA,qBAAI,CAACgM,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,OAAI,CAACpD,MAAlC;AACD,aAHD;AAID;AAtK0B;AAAA;AAAA,iBAuK3B,oBAAW;AAAA;;AACT;AACA,iBAAK+H,QAAL,CAAczD,gBAAd;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKiI,QAAL,CAAcxD,OAAlB,EAA2B;AAAE;AAAS;;AACtC,iBAAKxE,OAAL,GAAe,IAAf,CALS,CAMT;AACA;;AACA,gBAAIyE,QAAQ,CAAC,KAAKrB,CAAL,CAAOuG,SAAP,CAAiBhM,KAAlB,CAAR,KAAqC,CAAzC,EAA4C;AAC1C;AACA,mBAAKyJ,WAAL,CAAiB1C,MAAjB,CAAwB,KAAKsD,QAAL,CAAcrK,KAAtC,EAA6C9E,SAA7C,CAAuD,UAAAhE,IAAI,EAAI;AAC7D,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AAEF,eAPD,EAOG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAdD,MAeK;AACH;AACA,mBAAKoH,WAAL,CAAiBtC,MAAjB,CAAwB,KAAKkD,QAAL,CAAcrK,KAAtC,EAA6C9E,SAA7C,CAAuD,UAAAhE,IAAI,EAAI;AAC7D,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA3M0B;AAAA;AAAA,iBA4MnB,wBAAe;AAAA;;AACrB;AACA,iBAAKoH,WAAL,CAAiBS,YAAjB,GAAgChP,SAAhC,CAA0C,UAACzB,GAAD,EAAc;AACtD,qBAAI,CAACkQ,YAAL,GAAoBlQ,GAApB;AACD,aAFD;AAGD;AAjN0B;;AAAA;AAAA,S;;;;gBAbpB;;gBACgB;;gBAAhB;;gBAEA;;gBAEA;;gBAHA;;;;AAWI+P,sBAAgB,eAL5B,gEAAU;AACT3R,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,gHAFS;;;;AAAA,OAAV,CAK4B,E,iCAgBJ,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACU,yE,EArBI,GAAhBoC,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCaf;;;AACA,UAAMnC,GAAG,GAAG,IAAIjQ,IAAJ,EAAZ;;UAQaiV,iBAAiB;AAa5B,mCAAmB9E,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAKSH,MALT,EAKyB;AAAA;;AALN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AAEA,eAAAH,MAAA,GAAAA,MAAA;AACP,eAAK4F,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AAtB2B;AAAA;AAAA,iBAuB5B,oBAAW;AACT,gBAAMhK,IAAI,GAAY,IAAI,kEAAJ,CAAYyJ,GAAG,CAAChJ,WAAJ,EAAZ,EAA+BgJ,GAAG,CAAClJ,QAAJ,KAAiB,CAAhD,EAAmD,CAAnD,CAAtB;AACA,iBAAK0J,WAAL,CAAiBrL,QAAjB,GAA4BoB,IAA5B;AACA,iBAAKkK,OAAL;AACD;AA3B2B;AAAA;AAAA,iBA4B5B,cAAKwC,KAAL,EAAY;AAEV,iBAAKvI,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,EAAoBqD,KAApB,CAArB;AACD;AA/B2B;AAAA;AAAA,iBAiC5B,oBAAWrN,IAAX,EAAiBgL,MAAjB,EAAyB;AAAA;;AACvB;AACAhL,gBAAI,CAAC2G,QAAL,GAAgBqE,MAAhB,CAFuB,CAGvB;;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoBlK,IAApB,EAA0B/B,SAA1B,CAAoC,UAAAhE,IAAI,EAAI;AAE1C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,uBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AA9C2B;AAAA;AAAA,iBAgD5B,mBAAU;AACR;AACA,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAtD2B;AAAA;AAAA,iBAwD5B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AAjE2B;AAAA;AAAA,iBAmE5B,mBAAU6N,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AArE2B;AAAA;AAAA,iBAuE5B,kBAAS;AAEP,iBAAK4C,OAAL;AACD;AA1E2B;;AAAA;AAAA,S;;;;gBAbrB;;gBACA;;gBAEA;;gBADA;;gBATgB;;;;;;gBAyBtB,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAKR,0D;AAAY,iBAAC,wFAAD;;;AAVHuE,uBAAiB,eAP7B,gEAAU;AACTxU,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,yGAFS;AAITsB,iBAAS,EAAE,CAAC,0EAAD,CAJF;;;;AAAA,OAAV,CAO6B,E,iCAaA,yE,EACf,0F,EACU,0E,EACV,0E,EAEI,sD,EAlBW,GAAjB2D,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAC,uBAAuB;AAgBlC,yCAAmB/E,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIUC,KAJV,EAIiC;AAAA;;AAJd,eAAAuF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAAC,KAAA,GAAAA,KAAA;AAnBH,eAAA5E,OAAA,GAAU,IAAI,+DAAJ,EAAV;AAEP,eAAAmP,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AACA,eAAA8O,MAAA,GAAS,CAAC,EAAD,CAAT;AACO,eAAAC,YAAA,GAAe,IAAI,gEAAJ,EAAf;AACA,eAAAC,QAAA,GAAW,IAAI,2DAAJ,EAAX;AACA,eAAAC,SAAA,GAAY,IAAI,6DAAJ,EAAZ;AACA,eAAAC,WAAA,GAAc,IAAI,8DAAJ,EAAd;AACA,eAAAC,QAAA,GAAW,IAAI,2DAAJ,EAAX;AACA,eAAAC,WAAA,GAAc,IAAI,8DAAJ,EAAd;AACA,eAAAC,MAAA,GAAS,IAAI,oEAAJ,EAAT;AAQL,mBAD+B,CAE/B;;AACA,eAAKC,iBAAL,CAAuB,KAAK7P,OAAL,CAAa4O,SAApC;AACD;;AAxBiC;AAAA;AAAA,iBA0BlC,oBAAW;AACT,iBAAKkB,gBAAL;AAED;AA7BiC;AAAA;AAAA,iBA8BlC,4BAAmB;AAAA;;AACjB;AACA,iBAAKlL,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACe,OAAL,CAAad,OAAb,CAAqBD,GAArB,EAA0BtL,SAA1B,CAAoC,UAAAzB,GAAG,EAAI;AACzC;AACA;;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;AACD,iBAJD;AAKD;AACF,aATD;AAUD;AA1CiC;AAAA;AAAA,iBA4ClC,qBAAY2D,OAAZ,EAAqB6K,MAArB,EAA6B;AAAA;;AAC3B;AACA7K,mBAAO,CAACwG,QAAR,GAAmBqE,MAAnB;AACA7K,mBAAO,CAACqP,MAAR,GAAiB,KAAKA,MAAtB,CAH2B,CAK3B;;AACA,iBAAKlF,OAAL,CAAa4F,YAAb,CAA0B/P,OAA1B,EAAmClC,SAAnC,CAA6C,UAAAhE,IAAI,EAAI;AAEnD,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,uBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AA3DiC;AAAA;AAAA,iBA4D1B,kBAAS5B,GAAT,EAAc;AACpB;AACA,iBAAKlI,OAAL,GAAekI,GAAG,CAAClI,OAAnB;AACA,iBAAKsP,YAAL,GAAoBpH,GAAG,CAAC8H,QAAxB;AACA,iBAAKT,QAAL,GAAgBrH,GAAG,CAAC+H,IAApB;AACA,iBAAKT,SAAL,GAAiBtH,GAAG,CAACgI,KAArB;AACA,iBAAKT,WAAL,GAAmBvH,GAAG,CAACpB,OAAvB;AACA,iBAAK4I,QAAL,GAAgBxH,GAAG,CAACrB,IAApB;AACA,iBAAK8I,WAAL,GAAmBzH,GAAG,CAACiI,OAAvB;AACA,iBAAKP,MAAL,GAAc1H,GAAG,CAAC6D,KAAlB;AACD;AAtEiC;AAAA;AAAA,iBAuE1B,2BAAkB/L,OAAlB,EAA2B;AAAA;;AACjC;AACA,iBAAKmK,OAAL,CAAa0F,iBAAb,CAA+B7P,OAA/B,EAAwClC,SAAxC,CAAkD,UAACzB,GAAD,EAAc;AAC9D,qBAAI,CAACuT,MAAL,GAAcvT,GAAd,CAD8D,CAE9D;AACD,aAHD;AAID;AA7EiC;;AAAA;AAAA,S;;;;gBAR3B;;gBALA;;gBAGA;;gBAFgB;;gBAAhB;;;;AAYI6S,6BAAuB,eANnC,gEAAU;AACTzU,gBAAQ,EAAE,oBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,iIAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAMmC,E,iCAgBN,+E,EACf,0F,EACA,0E,EACI,sD,EACA,8D,EApBiB,GAAvB4D,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFkB,mBAAmB;AAoB9B,qCACU1L,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUuL,cANV,EAMwC;AAAA;;AAL9B,eAAA3L,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAuL,cAAA,GAAAA,cAAA;AAzBV,eAAArL,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAoL,YAAA,GAAe,EAAf;AACA,eAAA/D,YAAA,GAAe,EAAf;AACA,eAAAD,SAAA,GAAY,EAAZ;AACA,eAAAE,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAtH,WAAA,GAAc,EAAd;AACA,eAAAC,QAAA,GAAW,EAAX;AAEA,eAAAsH,kBAAA,GAAqB,EAArB;AACA,eAAAC,eAAA,GAAkB,EAAlB;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAvH,cAAA,GAAiB,EAAjB;AACA,eAAAwH,QAAA,GAAW,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,EAAiF,MAAjF,EAAyF,MAAzF,EAAiG,MAAjG,EAAyG,MAAzG,EAAiH,MAAjH,EAAyH,MAAzH,EAAiI,MAAjI,EAAyI,MAAzI,EAAiJ,MAAjJ,EAAyJ,MAAzJ,EAAiK,MAAjK,EAAyK,MAAzK,EAAiL,MAAjL,EAAyL,MAAzL,EAAiM,MAAjM,EAAyM,MAAzM,EAAiN,MAAjN,EAAyN,MAAzN,EAAiO,MAAjO,EAAyO,MAAzO,EAAiP,MAAjP,EAAyP,MAAzP,EAAiQ,MAAjQ,EAAyQ,MAAzQ,CAAX;AACA,eAAAvH,UAAA,GAAa,MAAb;AAWE,eAAKC,UAAL;AACA,eAAKgL,kBAAL;AACA,eAAKzD,YAAL;AACA,eAAKC,QAAL,GANsC,CAOtC;;AACA,eAAKvH,WAAL;AACD;;AAnC6B;AAAA;AAAA,iBAqC9B,oBAAW;AACT,iBAAKwH,kBAAL;AACD;AAvC6B;AAAA;AAAA,eAyC9B,eAAQ;AAAE,mBAAO,KAAKwD,WAAL,CAAiBzK,QAAxB;AAAmC;AAzCf;AAAA;AAAA,iBA2CtB,sBAAa;AACnB,iBAAKyK,WAAL,GAAmB,KAAK9L,WAAL,CAAiBsB,KAAjB,CAAuB;AACxC4I,uBAAS,EAAE,CAD6B;AAExClL,wBAAU,EAAE,CAAC,CAAD,CAF4B;AAGxC0J,2BAAa,EAAE,CAAC,EAAD,CAHyB;AAIxC5Q,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAJkC;AAKxCE,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAL2B;AAMxCgI,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWhI,QAAhB,CAN+B;AAOxCM,sBAAQ,EAAE,CAAC,CAAD,CAP8B;AAQxCiK,uBAAS,EAAE,EAR6B;AASxCC,uBAAS,EAAE,EAT6B;AAUxCC,yBAAW,EAAE,CAAC,KAAD,CAV2B;AAWxCjK,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWR,QAAhB,CAX0B;AAYxCS,sBAAQ,EAAE,CAAC,EAAD,CAZ8B;AAaxCiK,2BAAa,EAAE,EAbyB;AAcxCC,uBAAS,EAAE,CAAC,IAAD,CAd6B;AAexCC,sBAAQ,EAAE,EAf8B;AAgBxCrD,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWvH,QAAhB,CAhBwB;AAiBxC4F,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW5F,QAAhB,CAjB4B;AAkBxCyI,sBAAQ,EAAE,CAAC,EAAD,CAlB8B;AAmBxCD,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWxI,QAAhB,CAnB8B;AAoBxCyH,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWzH,QAAhB,CApB4B;AAqBxCuI,uBAAS,EAAE,CAAC,CAAD,EAAI,0DAAWvI,QAAf,CArB6B;AAsBxC8B,kBAAI,EAAE,CAAC,MAAD,EAAS,0DAAW9B,QAApB,CAtBkC;AAuBxCoH,oBAAM,EAAE,GAAG,0DAAWpH,QAAd,CAvBgC;AAwBxCqH,qBAAO,EAAE,GAAG,0DAAWrH,QAAd,CAxB+B;AAyBxCsI,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWtI,QAAhB,CAzB2B;AA0BxCqI,mBAAK,EAAE,CAAC,CAAD,EAAI,0DAAWrI,QAAf,CA1BiC;AA2BxCkI,oBAAM,EAAE,GAAG,0DAAWlI,QAAd,CA3BgC;AA4BxCoI,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWpI,QAAhB,CA5B2B;AA6BxC6K,0BAAY,EAAE,CA7B0B;AA8BxC1C,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWnI,QAAhB,CA9B6B;AA+BxCiI,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWjI,QAAhB,CA/B8B;AAgCxCa,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWb,QAAhB;AAhCkC,aAAvB,CAAnB;AAmCD;AA/E6B;AAAA;AAAA,iBAgF9B,sBAAa3G,KAAb,EAAoB;AAAA;;;;AAClB,iBAAK2F,MAAL,GAAc,CAAH,KAAG,KAAKA,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,EAAX,GAAe,EAA7B;;AACA,gBAAI3F,KAAK,CAAC2H,MAAN,CAAaC,KAAb,IAAsB5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAIC,WAAW,GAAG7H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB7P,MAArC;;AACA,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+P,WAApB,EAAiC/P,CAAC,EAAlC,EAAsC;AACpC,oBAAIgQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,oBAAIC,QAAQ,GAAGhI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,EAAsBmQ,IAAtB,GAA6B,MAA5C;;AACA,oBAAID,QAAQ,GAAG,CAAf,EAAkB;AAAEE,uBAAK,CAAC,wBAAD,CAAL;AAAkC,iBAAtD,MACK;AACHJ,wBAAM,CAACK,MAAP,GAAgB,UAACnI,KAAD,EAAgB;AAC9BpG,2BAAO,CAACC,GAAR,CAAYmG,KAAK,CAAC2H,MAAN,CAAahJ,MAAzB;;AACA,2BAAI,CAACgH,MAAL,CAAYyC,IAAZ,CAAiBpI,KAAK,CAAC2H,MAAN,CAAahJ,MAA9B;;AACA,2BAAI,CAACsS,WAAL,CAAiB5I,UAAjB,CAA4B;AAC1BlB,kCAAY,EAAE,OAAI,CAACxB;AADO,qBAA5B;AAGD,mBAND;;AAOAmC,wBAAM,CAACQ,aAAP,CAAqBtI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,CAArB;AACD;AACF;AACF;AACF;AApG6B;AAAA;AAAA,iBAqGtB,kBAAS6Q,GAAT,EAAc;AAAA;;AACpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAO+E,aAAP,CAAqB9E,QAArB,CAA8BJ,GAAG,CAACkF,aAAlC;AACA,iBAAK/E,CAAL,CAAO6F,OAAP,CAAe5F,QAAf,CAAwBJ,GAAG,CAACgG,OAA5B;AACA,iBAAK7F,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO8F,QAAP,CAAgB7F,QAAhB,CAAyBJ,GAAG,CAACiG,QAA7B;AAEA,iBAAK9F,CAAL,CAAOgG,SAAP,CAAiB/F,QAAjB,CAA0BJ,GAAG,CAACmG,SAA9B;AACA,iBAAKhG,CAAL,CAAOiG,WAAP,CAAmBhG,QAAnB,CAA4BJ,GAAG,CAACoG,WAAhC;AACA,iBAAKjG,CAAL,CAAOkG,KAAP,CAAajG,QAAb,CAAsBJ,GAAG,CAACqG,KAA1B;AACA,iBAAKlG,CAAL,CAAOmG,WAAP,CAAmBlG,QAAnB,CAA4BJ,GAAG,CAACsG,WAAhC;AACA,iBAAKnG,CAAL,CAAOkF,OAAP,CAAejF,QAAf,CAAwBJ,GAAG,CAACqF,OAA5B;AACA,iBAAKlF,CAAL,CAAOiF,MAAP,CAAchF,QAAd,CAAuBJ,GAAG,CAACoF,MAA3B;AACA,iBAAKjF,CAAL,CAAOL,IAAP,CAAYM,QAAZ,CAAqBJ,GAAG,CAACF,IAAzB;AACA,iBAAKK,CAAL,CAAOoG,SAAP,CAAiBnG,QAAjB,CAA0BJ,GAAG,CAACuG,SAA9B;AACA,iBAAKpG,CAAL,CAAOqG,QAAP,CAAgBpG,QAAhB,CAAyBJ,GAAG,CAACwG,QAA7B;AACA,iBAAKrG,CAAL,CAAOsF,UAAP,CAAkBrF,QAAlB,CAA2BJ,GAAG,CAACyF,UAA/B;AACA,iBAAKtF,CAAL,CAAOyD,UAAP,CAAkBxD,QAAlB,CAA2BJ,GAAG,CAAC4D,UAA/B;AACA,iBAAKzD,CAAL,CAAOsG,QAAP,CAAgBrG,QAAhB,CAAyBJ,GAAG,CAACyG,QAA7B;AACA,iBAAKtG,CAAL,CAAOoF,cAAP,CAAsBnF,QAAtB,CAA+BJ,GAAG,CAACuF,cAAnC;AACA,iBAAKpF,CAAL,CAAOuG,SAAP,CAAiBtG,QAAjB,CAA0BJ,GAAG,CAAC0G,SAA9B;AACA,iBAAKvG,CAAL,CAAO3E,UAAP,CAAkB4E,QAAlB,CAA2BJ,GAAG,CAACxE,UAA/B;AACA,iBAAK2E,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAA1C;AACA,iBAAKqJ,iBAAL,CAAuB,KAAKxH,CAAL,CAAOuG,SAAP,CAAiBhM,KAAxC;;AACA,gBAAIsF,GAAG,CAAC4I,QAAJ,IAAgB,EAApB,EAAwB;AACtB;AACA,kBAAIE,eAAe,GAAG9I,GAAG,CAAC4I,QAA1B;AACA,mBAAKG,iBAAL,GAAyBD,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAAzB;AACA,mBAAK7I,CAAL,CAAOyI,QAAP,CAAgBxI,QAAhB,CAAyBJ,GAAG,CAAC4I,QAA7B;AACD;;AACD,gBAAI5I,GAAG,CAACoG,WAAJ,IAAmB,EAAvB,EAA2B;AACzB;AACA;AACA;AACA;AACA,mBAAK9F,QAAL,CAAcN,GAAG,CAACoG,WAAlB,EAA+B,CAA/B;AACD;;AACD,gBAAIpG,GAAG,CAACoF,MAAJ,IAAc,EAAlB,EAAsB;AACpB,mBAAK+C,cAAL,CAAoBtB,SAApB,CAA8B7G,GAAG,CAACoF,MAAlC,EAA0CxP,SAA1C,CAAoD,UAACzB,GAAD,EAAc;AAChE,uBAAI,CAACiQ,SAAL,GAAiBjQ,GAAjB;AACD,eAFD;AAGD;AACF;AA/I6B;AAAA;AAAA,iBAgJtB,2BAAkB1D,EAAlB,EAAsB;AAAA;;AAC5B;AACA,iBAAK0X,cAAL,CAAoBR,iBAApB,CAAsClX,EAAtC,EAA0CmF,SAA1C,CAAoD,UAACzB,GAAD,EAAc;AAChE,qBAAI,CAAC6I,MAAL,GAAc7I,GAAd;;AACA,qBAAI,CAACgM,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,OAAI,CAACpD,MAAlC;AACD,aAHD;AAID;AAtJ6B;AAAA;AAAA,iBAuJ9B,qBAAYgD,GAAZ,EAAiB;AACf,gBAAMO,KAAK,GAAG,KAAKvD,MAAL,CAAYwD,OAAZ,CAAoBR,GAApB,CAAd;AACA,iBAAKhD,MAAL,CAAYyD,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AAEA,iBAAKJ,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,KAAKpD,MAAlC;AACD;AA5J6B;AAAA;AAAA,iBA6JtB,8BAAqB;AAAA;;AAC3B,iBAAKmL,cAAL,CAAoBc,WAApB,GAAkCrT,SAAlC,CAA4C,UAACzB,GAAD,EAAc;AACxD,qBAAI,CAACiU,YAAL,GAAoBjU,GAApB;AACD,aAFD;AAGD;AAjK6B;AAAA;AAAA,iBAkKtB,wBAAe;AAAA;;AACrB,iBAAKgU,cAAL,CAAoBvD,YAApB,GAAmChP,SAAnC,CAA6C,UAACzB,GAAD,EAAc;AACzD,qBAAI,CAACkQ,YAAL,GAAoBlQ,GAApB;AACD,aAFD;AAGD;AAtK6B;AAAA;AAAA,iBAwKtB,oBAAW;AAAA;;AACjB,iBAAKgU,cAAL,CAAoBtD,QAApB,GAA+BjP,SAA/B,CAAyC,UAACzB,GAAD,EAAc;AACrD,qBAAI,CAACoQ,QAAL,GAAgBpQ,GAAhB;AACD,aAFD;AAGD;AA5K6B;AAAA;AAAA,iBA6KtB,uBAAc;AAAA;;AACpB;AACA,iBAAKgU,cAAL,CAAoB7K,WAApB,GAAkC1H,SAAlC,CAA4C,UAACzB,GAAD,EAAc;AACxD,qBAAI,CAAC8I,WAAL,GAAmB9I,GAAnB;;AACA,kBAAI,CAAC,OAAI,CAAC8I,WAAN,IAAqB,OAAI,CAACA,WAAL,CAAiB7N,MAAjB,KAA4B,CAArD,EAAwD;AACtD,uBAAI,CAAC6N,WAAL,GAAmB,CAAC;AAAE3I,sBAAI,EAAE,eAAR;AAAyBjE,sBAAI,EAAE;AAA/B,iBAAD,CAAnB;AACD;;AACD,qBAAI,CAAC8P,CAAL,CAAOiG,WAAP,CAAmBhG,QAAnB,CAA4B,IAA5B;;AACA,qBAAI,CAACE,QAAL,CAAc,OAAI,CAACH,CAAL,CAAOiG,WAAP,CAAmB1L,KAAjC,EAAwC,CAAxC;AACD,aAPD;AAQD;AAvL6B;AAAA;AAAA,iBAyL9B,kBAASrD,KAAT,EAAgB;AACd,gBAAIsJ,kBAAkB,GAAGtJ,KAAK,CAAC2H,MAAN,CAAatE,KAAtC;;AACA,yCAAqBiG,kBAAkB,CAACC,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAkC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAAtC,CAArB;AAAA;AAAA,gBAAKR,KAAL;AAAA,gBAAY7F,KAAZ;;AACAzJ,mBAAO,CAACC,GAAR,CAAYqP,KAAZ;AACAtP,mBAAO,CAACC,GAAR,CAAYwJ,KAAZ;AACD;AA9L6B;AAAA;AAAA,iBA+L9B,kBAASsF,GAAT,EAAcxO,IAAd,EAAoB;AAAA;;AAClB,iBAAK2W,cAAL,CAAoB7H,QAApB,CAA6BN,GAA7B,EAAkCpK,SAAlC,CAA4C,UAACzB,GAAD,EAAc;AACxD,qBAAI,CAAC+I,QAAL,GAAgB/I,GAAhB;AACA,kBAAI3C,IAAI,IAAI,CAAZ,EACE,OAAI,CAAC2O,CAAL,CAAO+F,MAAP,CAAc9F,QAAd,CAAuBjM,GAAG,CAAC,CAAD,CAAH,CAAO1D,EAA9B;AAEH,aALD;AAMD;AAtM6B;AAAA;AAAA,iBAuM9B,kBAAS4G,KAAT,EAAgB;AAAA;;AACd,gBAAIsJ,kBAAkB,GAAGtJ,KAAK,CAAC2H,MAAN,CAAatE,KAAtC;;AACA,yCAAqBiG,kBAAkB,CAACC,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAkC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAAtC,CAArB;AAAA;AAAA,gBAAKR,KAAL;AAAA,gBAAY7F,KAAZ;;AACAzJ,mBAAO,CAACC,GAAR,CAAYqP,KAAZ;AACAtP,mBAAO,CAACC,GAAR,CAAYwJ,KAAZ;AAEA,iBAAKyN,cAAL,CAAoBtB,SAApB,CAA8BnM,KAA9B,EAAqC9E,SAArC,CAA+C,UAACzB,GAAD,EAAc;AAC3D,qBAAI,CAACiQ,SAAL,GAAiBjQ,GAAjB;AACD,aAFD;AAGD;AAhN6B;AAAA;AAAA,iBAiN9B,8BAAqB;AAAA;;AACnB,iBAAKuI,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACnE,OAAL,GAAe,IAAf;;AACA,uBAAI,CAACoD,CAAL,CAAOuG,SAAP,CAAiBtG,QAAjB,CAA0Bc,GAA1B;;AACA,uBAAI,CAACiH,cAAL,CAAoBrB,QAApB,CAA6B5F,GAA7B,EAAkCtL,SAAlC,CAA4C,UAAAzB,GAAG,EAAI;AACjD;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAAC4I,OAAL,GAAe,KAAf;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA9N6B;AAAA;AAAA,iBA+N9B,oBAAW;AAAA;;AACT;AACA,iBAAKuL,WAAL,CAAiBhH,gBAAjB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKwL,WAAL,CAAiB/G,OAArB,EAA8B;AAAE;AAAS;;AACzC,iBAAKxE,OAAL,GAAe,IAAf,CALS,CAMT;;AACA,iBAAKoD,CAAL,CAAOyI,QAAP,CAAgBxI,QAAhB,CAAyB,KAAK2I,iBAAL,IAA0BG,SAA1B,GAAsC,EAAtC,GAA2C,KAAKH,iBAAL,CAAuBI,QAAvB,EAApE;;AACA,gBAAI3H,QAAQ,CAAC,KAAKrB,CAAL,CAAOuG,SAAP,CAAiBhM,KAAlB,CAAR,KAAqC,CAAzC,EAA4C;AAC1C;AACA,mBAAKyN,cAAL,CAAoB1G,MAApB,CAA2B,KAAK6G,WAAL,CAAiB5N,KAA5C,EAAmD9E,SAAnD,CAA6D,UAAAhE,IAAI,EAAI;AACnE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AAEF,eAPD,EAOG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAdD,MAcO;AACL;AACA,mBAAKoL,cAAL,CAAoBtG,MAApB,CAA2B,KAAKyG,WAAL,CAAiB5N,KAA5C,EAAmD9E,SAAnD,CAA6D,UAAAhE,IAAI,EAAI;AACnE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAlQ6B;;AAAA;AAAA,S;;;;gBAbvB;;gBACgB;;gBAAhB;;gBAEA;;gBAEA;;gBAHA;;;;AAWImL,yBAAmB,eAL/B,gEAAU;AACT3V,gBAAQ,EAAE,gBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,qIAFS;;;;AAAA,OAAV,CAK+B,E,iCAqBP,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACa,+E,EA1BI,GAAnBoG,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,UAAMnG,GAAG,GAAG,IAAIjQ,IAAJ,EAAZ;;UAQasX,oBAAoB;AAc/B,sCAAmBnH,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAKSH,MALT,EAKyB;AAAA;;AALN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AAEA,eAAAH,MAAA,GAAAA,MAAA;AAjBT,eAAA2F,WAAA,GAAa,EAAb;AAkBE,eAAKC,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd,CAFuB,CAKvB;AACA;AACD;;AA1B8B;AAAA;AAAA,iBA2B/B,oBAAW;AACT;AACA;AACA,iBAAKE,OAAL;AACD;AA/B8B;AAAA;AAAA,iBAgC/B,cAAK6G,SAAL,EAAgB;AAEd,iBAAK5M,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,oBAAD,EAAuB0H,SAAvB,CAArB;AACD;AAnC8B;AAAA;AAAA,iBAqC/B,qBAAYC,KAAZ,EAAmB3G,MAAnB,EAA2B;AAAA;;AACzB;AACA2G,iBAAK,CAAChL,QAAN,GAAiBqE,MAAjB,CAFyB,CAGzB;;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoByH,KAApB,EAA2B1T,SAA3B,CAAqC,UAAAhE,IAAI,EAAI;AAE3C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,uBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD,WAlD8B,CAoD/B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjE+B;AAAA;AAAA,iBAoE/B,mBAAU;AACP;AACD,iBAAKK,OAAL,CAAaW,UAAb,GAFQ,CAEkB;;AAC1B,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA1E8B;AAAA;AAAA,iBA4E/B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AArF8B;AAAA;AAAA,iBAuF/B,cAAK2F,OAAL,EAAc;AACZ,iBAAK2E,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,2BAAD,EAA8B7J,OAA9B,CAArB;AACD;AAzF8B;AAAA;AAAA,iBA0F/B,eAAMoJ,GAAN,EAAW;AAAA;;AACT,iBAAKe,OAAL,CAAasH,UAAb,CAAwBrI,GAAxB,EAA6BtL,SAA7B,CAAuC,UAACzB,GAAD,EAAc;AACnD;AAEA,kBAAIA,GAAG,CAACwO,MAAJ,IAAc,CAAlB,EAAqB;AACnB,uBAAI,CAAC6G,QAAL,CAAcrV,GAAG,CAACsV,IAAlB;AACD,eAFD,MAIE,OAAI,CAAC7M,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,kBAA3B;AACH,aARD;AASD;AApG8B;AAAA;AAAA,iBAqG/B,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AAvG8B;AAAA;AAAA,iBA0G/B,kBAAS;AAEP,iBAAK4C,OAAL;AACD;AA7G8B;AAAA;AAAA,iBA8G/B,kBAASiH,IAAT,EAAe;AAEb,gBAAIC,SAAS,GAAGtb,MAAM,CAACub,IAAP,CAAY,OAAZ,CAAhB;AACAD,qBAAS,CAACE,QAAV,CAAmBC,KAAnB,CAAyBJ,IAAzB;AACAC,qBAAS,CAACI,KAAV;AACD;AAnH8B;;AAAA;AAAA,S;;;;gBAbxB;;gBACA;;gBAEA;;gBADA;;gBATgB;;;;;;gBA0BtB,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAKR,0D;AAAY,iBAAC,wFAAD;;;AAXHV,0BAAoB,eAPhC,gEAAU;AACT7W,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,2HAFS;AAITsB,iBAAS,EAAE,CAAC,0EAAD,CAJF;;;;AAAA,OAAV,CAOgC,E,iCAcH,+E,EACf,0F,EACU,0E,EACV,0E,EAEI,sD,EAnBc,GAApBgG,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFW,iBAAiB;AAU5B,mCACUvN,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUoN,YANV,EAMqC;AAAA;;AAL3B,eAAAxN,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAoN,YAAA,GAAAA,YAAA;AAfV,eAAAlN,SAAA,GAAY,KAAZ;AAGA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAkN,YAAA,GAAe,KAAf;AACA,eAAA7M,UAAA,GAAa,MAAb;AACA,eAAA8M,UAAA,GAAkB,EAAlB;AAYE,eAAK7M,UAAL;AACD;;AApB2B;AAAA;AAAA,iBAuB5B,oBAAW;AACT,iBAAK8M,gBAAL;AACD;AAzB2B;AAAA;AAAA,eA0B5B,eAAQ;AAAE,mBAAO,KAAKC,SAAL,CAAevM,QAAtB;AAAiC;AA1Bf;AAAA;AAAA,iBA4BpB,sBAAa;AAEnB,iBAAKuM,SAAL,GAAiB,KAAK5N,WAAL,CAAiBsB,KAAjB,CAAuB;AAEtCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAFgC;AAGtCqM,mBAAK,EAAE,CAAC,EAAD,CAH+B;AAItCzP,sBAAQ,EAAE,CAAC,EAAD,CAJ4B;AAKtCoL,qBAAO,EAAE,CAAC,EAAD,CAL6B;AAMtCsE,wBAAU,EAAE,CAAC,EAAD,CAN0B;AAOtCC,sBAAQ,EAAE,CAAC,EAAD,CAP4B;AAQtCjM,sBAAQ,EAAE,CAAC,IAAD,CAR4B;AAStCoF,0BAAY,EAAE,CAAC,CAAD,CATwB;AAUtCvI,qBAAO,EAAE,CAV6B;AAWtC0I,mBAAK,EAAE,CAAC,EAAD,CAX+B;AAYtCxL,wBAAU,EAAE;AAZ0B,aAAvB,CAAjB;AAcD;AA5C2B;AAAA;AAAA,iBAgDpB,kBAAS2H,GAAT,EAAc;AAEpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOkK,KAAP,CAAajK,QAAb,CAAsBJ,GAAG,CAACqK,KAA1B;AACA,iBAAKlK,CAAL,CAAOvF,QAAP,CAAgBwF,QAAhB,CAAyBJ,GAAG,CAACpF,QAA7B;AACA,iBAAKuF,CAAL,CAAOhF,OAAP,CAAeiF,QAAf,CAAwBJ,GAAG,CAAC7E,OAA5B;AACA,iBAAKgF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO6F,OAAP,CAAe5F,QAAf,CAAwBJ,GAAG,CAACgG,OAA5B;AACA,iBAAK7F,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAK6B,CAAL,CAAOmK,UAAP,CAAkBlK,QAAlB,CAA2BJ,GAAG,CAACsK,UAA/B;AAEA,iBAAKJ,UAAL,GAAkBlK,GAAG,CAACvB,QAAtB;AACA,iBAAKqF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AA7D2B;AAAA;AAAA,iBAgE5B,4BAAmB;AAAA;;AAEjB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAAC+I,YAAL,GAAoB,IAApB;;AACA,uBAAI,CAAC9J,CAAL,CAAOhF,OAAP,CAAeiF,QAAf,CAAwBc,GAAxB;;AACA,uBAAI,CAAC8I,YAAL,CAAkB7I,OAAlB,CAA0BD,GAA1B,EAA+B,OAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAzB,GAAG,EAAI;AACpE;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAAC8V,YAAL,GAAoB,KAApB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA9E2B;AAAA;AAAA,iBAgF5B,oBAAW;AAAA;;AACT;AACA,iBAAKG,SAAL,CAAe9I,gBAAf;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AAEA,gBAAI,KAAKsN,SAAL,CAAe7I,OAAnB,EAA4B;AAAE;AAAS;;AACvC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AACA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOhF,OAAP,CAAeT,KAAhB,CAAR,KAAmC,CAAvC,EAA0C;AAExC;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAKoQ,SAAL,CAAe1P,KAA9B,CAAZ;AACA,mBAAKsP,YAAL,CAAkBvI,MAAlB,CAAyB,KAAK2I,SAAL,CAAe1P,KAAxC,EAA+C9E,SAA/C,CAAyD,UAAAhE,IAAI,EAAI;AAC/D,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;;AAED,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAPD,EAOG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAhBD,MAgBO;AACL;AACA,mBAAKiN,YAAL,CAAkBnI,MAAlB,CAAyB,KAAKuI,SAAL,CAAe1P,KAAxC,EAA+C9E,SAA/C,CAAyD,UAAAhE,IAAI,EAAI;AAC/D,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAtH2B;AAAA;AAAA,iBAuH5B,oBAAW1F,KAAX,EAAkB;AAAA;;AAChB,iBAAKmT,QAAL,GAAgBnT,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB;;AAEA,gBAAI,KAAKuL,QAAL,CAAchZ,IAAd,IAAsB,YAAtB,IAAsC,KAAKgZ,QAAL,CAAchZ,IAAd,IAAsB,YAA5D,IAA4E,KAAKgZ,QAAL,CAAchZ,IAAd,IAAsB,WAAtG,EAAmH;AACjH;AACA,kBAAM2N,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,oBAAM,CAACQ,aAAP,CAAqB,KAAK6K,QAA1B;;AACArL,oBAAM,CAACK,MAAP,GAAgB,YAAM;AACpB;AACA,uBAAI,CAAC0K,UAAL,GAAkB/K,MAAM,CAACnJ,MAAzB;;AACA,uBAAI,CAACmK,CAAL,CAAOmK,UAAP,CAAkBlK,QAAlB,CAA2B,OAAI,CAAC8J,UAAhC;AAED,eALD;AAMD,aAVD,MAUO;AACL3K,mBAAK,CAAC,2BAAD,CAAL;AACA;AACD;AAEF;AAzI2B;;AAAA;AAAA,S;;;;gBAbG;;gBAGxB;;gBAAQ;;gBACR;;gBACA;;gBACA;;;;;;gBAeN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AARCwK,uBAAiB,eAL7B,gEAAU;AACTxX,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,4HAFS;;;;AAAA,OAAV,CAK6B,E,iCAWL,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACW,6E,EAhBI,GAAjBiI,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAU,cAAc;AAczB,gCAAmBxI,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAGwB;AAAA;;AAHL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACP,eAAK4F,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AApBwB;AAAA;AAAA,iBAsBzB,oBAAW;AACT,iBAAKE,OAAL;AACD;AAxBwB;AAAA;AAAA,iBA0BzB,mBAAU;AACR,iBAAKP,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA/BwB;AAAA;AAAA,iBAiCzB,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA1CwB;AAAA;AAAA,iBA6CzB,cAAKyH,KAAL,EAAY;AACV,iBAAK6C,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,kBAAD,EAAqB/H,KAArB,CAArB;AACD;AA/CwB;AAAA;AAAA,iBAiDzB,gBAAOnJ,EAAP,EAAW;AAAA;;AACT,iBAAKwR,OAAL,WAAoBT,QAAQ,CAAC/Q,EAAD,CAA5B,EAAkCmF,SAAlC,CAA4C,UAACzB,GAAD,EAAc;AACxD,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKA,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACX,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACA,aAVD;AAWD;AA7DwB;AAAA;AAAA,iBA8DzB,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACC;AAtEwB;;AAAA;AAAA,S;;;;gBATlB;;gBAFA;;gBAIA;;gBAHA;;;;;;gBAsBN,0D;AAAY,iBAAC,wFAAD;;;AAZFF,oBAAc,eAL1B,gEAAU;AACTlY,gBAAQ,EAAE,WADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,iHAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAK0B,E,iCAcG,6E,EACf,0F,EACA,0E,EACG,sD,EAjBS,GAAdqH,cAAc,CAAd;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFG,oBAAoB;AA4B/B,sCACUpO,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUiO,eANV,EAOU5I,OAPV,EAOiC;AAAA;;AANvB,eAAAzF,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAiO,eAAA,GAAAA,eAAA;AACA,eAAA5I,OAAA,GAAAA,OAAA;AAlCV,eAAAnF,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAA+N,gBAAA,GAAmB,KAAnB;AACA,eAAA9N,MAAA,GAAS,EAAT;AACA,eAAA+N,KAAA,GAAQ,EAAR;AACA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAA/N,WAAA,GAAc,EAAd;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAA+N,WAAA,GAAc,EAAd;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,KAAA,GAAQ,EAAR;AACA,eAAAC,mBAAA,GAAsB,EAAtB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAlO,UAAA,GAAa,MAAb;AACA,eAAAmO,OAAA,GAAU,EAAV;AACO,eAAAC,eAAA,GAAiC,CACtC;AAAElX,gBAAI,EAAE,QAAR;AAAkBmX,gBAAI,EAAE;AAAxB,WADsC,EAEtC;AAAEnX,gBAAI,EAAE,QAAR;AAAkBmX,gBAAI,EAAE;AAAxB,WAFsC,EAGtC;AAAEnX,gBAAI,EAAE,SAAR;AAAmBmX,gBAAI,EAAE;AAAzB,WAHsC,EAItC;AAAEnX,gBAAI,EAAE,WAAR;AAAqBmX,gBAAI,EAAE;AAA3B,WAJsC,EAKtC;AAAEnX,gBAAI,EAAE,UAAR;AAAoBmX,gBAAI,EAAE;AAA1B,WALsC,EAMtC;AAAEnX,gBAAI,EAAE,QAAR;AAAkBmX,gBAAI,EAAE;AAAxB,WANsC,EAOtC;AAAEnX,gBAAI,EAAE,UAAR;AAAoBmX,gBAAI,EAAE;AAA1B,WAPsC,CAAjC;AAoBL,eAAKpO,UAAL;AACA,eAAKqO,aAAL;AACA,eAAKC,WAAL;AACA,eAAKC,YAAL;AACA,eAAKtO,WAAL;AACD;;AA3C8B;AAAA;AAAA,iBA6C/B,oBAAW;AACT,iBAAKuO,oBAAL;AACD;AA/C8B;AAAA;AAAA,eAiD/B,eAAQ;AAAE,mBAAO,KAAKC,YAAL,CAAkBjO,QAAzB;AAAoC;AAjDf;AAAA;AAAA,iBAoDvB,sBAAa;AAEnB,iBAAKiO,YAAL,GAAoB,KAAKtP,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCzF,wBAAU,EAAE,CAD6B;AAEzCuN,oBAAM,EAAE,CAFiC;AAGzCtR,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAHmC;AAIzC+N,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAW/N,QAAhB,CAJ4B;AAKzCgI,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWhI,QAAhB,CALgC;AAMzCgO,2BAAa,EAAE,CAAC,EAAD,CAN0B;AAOzCC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWjO,QAAhB,CAP8B;AAQzC2F,wBAAU,EAAE,CAAC,EAAD,CAR6B;AASzCxF,+BAAiB,EAAE,CAAC,EAAD,CATsB;AAUzCkM,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWrM,QAAhB,CAVkC;AAWzCkO,4BAAc,EAAE,CAAC,CAAD,CAXyB;AAYzCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWnO,QAAhB,CAZ+B;AAazCoO,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWpO,QAAhB,CAb8B;AAczCM,sBAAQ,EAAE,CAAC,CAAD,CAd+B;AAezC+N,8BAAgB,EAAE,CAAC,CAAD,CAfuB;AAgBzCC,wBAAU,EAAE,EAhB6B;AAiBzCC,sBAAQ,EAAE,CAAC,EAAD,CAjB+B;AAkBzCC,2BAAa,EAAE,CAAC,EAAD,CAlB0B;AAmBzCC,6BAAe,EAAE,CAAC,EAAD,CAnBwB;AAoBzClO,wBAAU,EAAE,KApB6B;AAqBzCM,kBAAI,EAAE,CAAC,EAAD,CArBmC;AAsBzCL,0BAAY,EAAE,CAAC,EAAD,CAtB2B;AAuBzCkO,4BAAc,EAAE,EAvByB;AAwBzCC,uBAAS,EAAE,EAxB8B;AAyBzC1K,qBAAO,EAAE,EAzBgC;AA0BzC2K,yBAAW,EAAE,CAAC,IAAD,CA1B4B;AA2BzCC,uBAAS,EAAE,CAAC,IAAD,CA3B8B;AA4BzCrB,6BAAe,EAAE,EA5BwB;AA6BzCtF,oBAAM,EAAE,CA7BiC;AA8BzC4G,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW9O,QAAhB,CA9B8B;AA+BzC+O,iCAAmB,EAAE,CAAC,EAAD;AA/BoB,aAAvB,CAApB;AAiCD;AAvF8B;AAAA;AAAA,iBAyF/B,sBAAa1V,KAAb,EAAoB;AAAA;;;;AAClB,iBAAK2F,MAAL,GAAc,CAAH,KAAG,KAAKA,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,EAAX,GAAe,EAA7B;;AACA,gBAAI3F,KAAK,CAAC2H,MAAN,CAAaC,KAAb,IAAsB5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAIC,WAAW,GAAG7H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB7P,MAArC;;AACA,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+P,WAApB,EAAiC/P,CAAC,EAAlC,EAAsC;AACpC,oBAAIgQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,oBAAIC,QAAQ,GAAGhI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,EAAsBmQ,IAAtB,GAA6B,MAA5C;;AACA,oBAAID,QAAQ,GAAG,CAAf,EAAkB;AAAEE,uBAAK,CAAC,wBAAD,CAAL;AAAkC,iBAAtD,MACK;AAEHJ,wBAAM,CAACK,MAAP,GAAgB,UAACnI,KAAD,EAAgB;AAC9BpG,2BAAO,CAACC,GAAR,CAAYmG,KAAK,CAAC2H,MAAN,CAAahJ,MAAzB;;AACA,2BAAI,CAACgH,MAAL,CAAYyC,IAAZ,CAAiBpI,KAAK,CAAC2H,MAAN,CAAahJ,MAA9B;;AACA,2BAAI,CAAC8V,YAAL,CAAkBpM,UAAlB,CAA6B;AAC3BlB,kCAAY,EAAE,OAAI,CAACxB;AADQ,qBAA7B;AAGD,mBAND;;AAOAmC,wBAAM,CAACQ,aAAP,CAAqBtI,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB9P,CAAnB,CAArB;AACD;AACF;AACF;AACF;AA9G8B;AAAA;AAAA,iBAgHvB,kBAAS6Q,GAAT,EAAc;AACpB;AACA,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOkK,KAAP,CAAajK,QAAb,CAAsBJ,GAAG,CAACqK,KAA1B;AACA,iBAAKlK,CAAL,CAAO6F,OAAP,CAAe5F,QAAf,CAAwBJ,GAAG,CAACgG,OAA5B;AACA,iBAAK7F,CAAL,CAAO6L,aAAP,CAAqB5L,QAArB,CAA8BJ,GAAG,CAACgM,aAAlC;AACA,iBAAK7L,CAAL,CAAO4L,WAAP,CAAmB3L,QAAnB,CAA4BJ,GAAG,CAAC+L,WAAhC;AACA,iBAAK5L,CAAL,CAAOhC,iBAAP,CAAyBiC,QAAzB,CAAkCJ,GAAG,CAAC7B,iBAAtC;AACA,iBAAKgC,CAAL,CAAO8L,SAAP,CAAiB7L,QAAjB,CAA0BJ,GAAG,CAACiM,SAA9B;AACA,iBAAK9L,CAAL,CAAO+L,cAAP,CAAsB9L,QAAtB,CAA+BJ,GAAG,CAACkM,cAAnC;AACA,iBAAK/L,CAAL,CAAOgM,QAAP,CAAgB/L,QAAhB,CAAyBJ,GAAG,CAACmM,QAA7B;AACA,iBAAKhM,CAAL,CAAOiM,SAAP,CAAiBhM,QAAjB,CAA0BJ,GAAG,CAACoM,SAA9B;AACA,iBAAKjM,CAAL,CAAO9H,UAAP,CAAkB+H,QAAlB,CAA2BJ,GAAG,CAAC3H,UAA/B;AACA,iBAAK8H,CAAL,CAAOyF,MAAP,CAAcxF,QAAd,CAAuBJ,GAAG,CAAC4F,MAA3B;AACA,iBAAKzF,CAAL,CAAOoM,QAAP,CAAgBnM,QAAhB,CAAyBJ,GAAG,CAACuM,QAA7B;AACA,iBAAKpM,CAAL,CAAOmM,UAAP,CAAkBlM,QAAlB,CAA2BJ,GAAG,CAACsM,UAA/B;AACA,iBAAKnM,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAK6B,CAAL,CAAOkM,gBAAP,CAAwBjM,QAAxB,CAAiCJ,GAAG,CAACqM,gBAAJ,KAAyB,CAAzB,GAA6B,IAA7B,GAAoC,KAArE;AACA,iBAAKlM,CAAL,CAAO5B,UAAP,CAAkB6B,QAAlB,CAA2BJ,GAAG,CAACzB,UAAJ,KAAmB,CAAnB,GAAuB,IAAvB,GAA8B,KAAzD;AAEA,iBAAK4B,CAAL,CAAO4M,mBAAP,CAA2B3M,QAA3B,CAAoCJ,GAAG,CAAC+M,mBAAxC;AACA,iBAAKjJ,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC+M,mBAA5B;AAEA,iBAAKC,cAAL,CAAoB,KAAK7M,CAAL,CAAO9H,UAAP,CAAkBqC,KAAtC;AACA,iBAAKyF,CAAL,CAAOqL,eAAP,CAAuBpL,QAAvB,CAAgCJ,GAAG,CAACwL,eAApC;AACA,iBAAKA,eAAL,GAAuBxL,GAAG,CAACwL,eAA3B;AACA,iBAAKrL,CAAL,CAAO4M,mBAAP,CAA2B3M,QAA3B,CAAoCJ,GAAG,CAAC+M,mBAAxC;;AAEA,gBAAI/M,GAAG,CAAC2M,SAAJ,IAAiB,EAArB,EAAyB;AACvB,kBAAI7D,eAAe,GAAG9I,GAAG,CAAC2M,SAA1B;AACA,mBAAKvB,mBAAL,GAA2BtC,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAA3B;AACA,mBAAK7I,CAAL,CAAOwM,SAAP,CAAiBvM,QAAjB,CAA0BJ,GAAG,CAAC2M,SAA9B;AACD;;AACD,gBAAI3M,GAAG,CAACiC,OAAJ,IAAe,EAAnB,EAAuB;AACrB,kBAAI6G,eAAe,GAAG9I,GAAG,CAACiC,OAA1B;AACA,mBAAKoJ,iBAAL,GAAyBvC,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAAzB;AACA,mBAAK7I,CAAL,CAAO8B,OAAP,CAAe7B,QAAf,CAAwBJ,GAAG,CAACiC,OAA5B;AACD;;AAED,iBAAK9B,CAAL,CAAO+F,MAAP,CAAc9F,QAAd,CAAuBJ,GAAG,CAACkG,MAA3B;;AACA,gBAAIlG,GAAG,CAAC8M,SAAJ,IAAiB,EAArB,EAAyB;AACvB,mBAAKxM,QAAL,CAAcN,GAAG,CAAC8M,SAAlB,EAA6B,CAA7B;AACD;AAEF;AA7J8B;AAAA;AAAA,iBA8JvB,uBAAc;AAAA;;AACpB,iBAAK7K,OAAL,CAAa3E,WAAb,GAA2B1H,SAA3B,CAAqC,UAACzB,GAAD,EAAc;AACjD,qBAAI,CAAC8I,WAAL,GAAmB9I,GAAnB;;AACA,kBAAI,CAAC,OAAI,CAAC8I,WAAN,IAAqB,OAAI,CAACA,WAAL,CAAiB7N,MAAjB,KAA4B,CAArD,EAAwD;AACtD,uBAAI,CAAC6N,WAAL,GAAmB,CAAC;AAAE3I,sBAAI,EAAE,eAAR;AAAyBjE,sBAAI,EAAE;AAA/B,iBAAD,CAAnB;AACD;;AACD,qBAAI,CAAC8P,CAAL,CAAO2M,SAAP,CAAiB1M,QAAjB,CAA0B,IAA1B;;AACA,qBAAI,CAACE,QAAL,CAAc,OAAI,CAACH,CAAL,CAAO2M,SAAP,CAAiBpS,KAA/B,EAAsC,CAAtC;AACD,aAPD;AAQD;AAvK8B;AAAA;AAAA,iBAyK/B,kBAASrD,KAAT,EAAgB;AACd;AACA,gBAAIsJ,kBAAkB,GAAGtJ,KAAK,CAAC2H,MAAN,CAAatE,KAAtC;;AACA,yCAAqBiG,kBAAkB,CAACC,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAkC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAAtC,CAArB;AAAA;AAAA,gBAAKR,KAAL;AAAA,gBAAY7F,KAAZ;;AACA,iBAAK4F,QAAL,CAAc5F,KAAd,EAAqB,CAArB;AACAzJ,mBAAO,CAACC,GAAR,CAAYqP,KAAZ;AACAtP,mBAAO,CAACC,GAAR,CAAYwJ,KAAZ;AACD;AAhL8B;AAAA;AAAA,iBAiL/B,kBAASsF,GAAT,EAAcxO,IAAd,EAAoB;AAAA;;AAClB;AACA,iBAAKyQ,OAAL,CAAa3B,QAAb,CAAsBN,GAAtB,EAA2BpK,SAA3B,CAAqC,UAACzB,GAAD,EAAc;AACjD,qBAAI,CAAC+I,QAAL,GAAgB/I,GAAhB,CADiD,CAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACD,aATD;AAUD;AA7L8B;AAAA;AAAA,iBA8LvB,wBAAe1D,EAAf,EAAmB;AAAA;;AACzB,iBAAKoa,eAAL,CAAqBoC,kBAArB,CAAwCxc,EAAxC,EAA4CmF,SAA5C,CAAsD,UAACzB,GAAD,EAAc;AAClE,qBAAI,CAAC6I,MAAL,GAAc7I,GAAd;;AACA,qBAAI,CAACgM,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,OAAI,CAACpD,MAAlC;AACD,aAHD;AAID;AAnM8B;AAAA;AAAA,iBAqM/B,qBAAYgD,GAAZ,EAAiB;AACf,gBAAMO,KAAK,GAAG,KAAKvD,MAAL,CAAYwD,OAAZ,CAAoBR,GAApB,CAAd;AACA,iBAAKhD,MAAL,CAAYyD,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACA,iBAAKJ,CAAL,CAAO3B,YAAP,CAAoB4B,QAApB,CAA6B,KAAKpD,MAAlC;AACD;AAzM8B;AAAA;AAAA,iBA0MvB,yBAAgB;AAAA;;AACtB,iBAAK6N,eAAL,CAAqBa,aAArB,GAAqC9V,SAArC,CAA+C,UAACzB,GAAD,EAAc;AAC3D,qBAAI,CAAC6W,aAAL,GAAqB7W,GAArB;AACD,aAFD;AAGD;AA9M8B;AAAA;AAAA,iBA+MvB,uBAAc;AAAA;;AACpB,iBAAK0W,eAAL,CAAqBc,WAArB,GAAmC/V,SAAnC,CAA6C,UAACzB,GAAD,EAAc;AACzD,qBAAI,CAAC8W,WAAL,GAAmB9W,GAAnB;AACD,aAFD;AAGD;AAnN8B;AAAA;AAAA,iBAoNvB,wBAAe;AAAA;;AACrB,iBAAK0W,eAAL,CAAqBe,YAArB,GAAoChW,SAApC,CAA8C,UAACzB,GAAD,EAAc;AAC1D,qBAAI,CAACgX,KAAL,GAAahX,GAAb;AACD,aAFD;AAGD;AAxN8B;AAAA;AAAA,iBAyN/B,gCAAuB;AAAA;;AACrB,iBAAKuI,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAAC4J,gBAAL,GAAwB,IAAxB;;AACA,uBAAI,CAAC3K,CAAL,CAAO9H,UAAP,CAAkB+H,QAAlB,CAA2Bc,GAA3B;;AACA,uBAAI,CAAC2J,eAAL,CAAqB1J,OAArB,CAA6BD,GAA7B,EAAkCtL,SAAlC,CAA4C,UAAAzB,GAAG,EAAI;AACjD;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAAC2W,gBAAL,GAAwB,KAAxB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAtO8B;AAAA;AAAA,iBAuO/B,oBAAW;AAAA;;AACT;AACA,iBAAKgB,YAAL,CAAkBxK,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKgP,YAAL,CAAkBvK,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAOqL,eAAP,CAAuBpL,QAAvB,CAAgC,KAAKoL,eAArC;AACA,iBAAKrL,CAAL,CAAOwM,SAAP,CAAiBvM,QAAjB,CAA0B,KAAKgL,mBAAL,IAA4BlC,SAA5B,GAAwC,EAAxC,GAA6C,KAAKkC,mBAAL,CAAyBjC,QAAzB,EAAvE;AACA,iBAAKhJ,CAAL,CAAO8B,OAAP,CAAe7B,QAAf,CAAwB,KAAKiL,iBAAL,IAA0BnC,SAA1B,GAAsC,EAAtC,GAA2C,KAAKmC,iBAAL,CAAuBlC,QAAvB,EAAnE;AACA,iBAAKhJ,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAOkM,gBAAP,CAAwBjM,QAAxB,CAAiC,KAAKD,CAAL,CAAOkM,gBAAP,CAAwB3R,KAAxB,KAAkC,IAAlC,GAAyC,CAAzC,GAA6C,CAA9E;AACA,iBAAKyF,CAAL,CAAO5B,UAAP,CAAkB6B,QAAlB,CAA2B,KAAKD,CAAL,CAAO5B,UAAP,CAAkB7D,KAAlB,KAA4B,CAA5B,GAAgC,IAAhC,GAAuC,KAAlE;AACA,iBAAKyF,CAAL,CAAO4M,mBAAP,CAA2B3M,QAA3B,CAAoC,KAAK0D,OAAL,CAAarF,QAAjD;;AACA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAO9H,UAAP,CAAkBqC,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAC3C;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK8R,YAAL,CAAkBpR,KAAjC,CAAZ;AACD,aAHD,MAIK;AACH;AACA,mBAAKmQ,eAAL,CAAqBhJ,MAArB,CAA4B,KAAKiK,YAAL,CAAkBpR,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AArQ8B;;AAAA;AAAA,S;;;;gBAdb;;gBACX;;gBAAQ;;gBACR;;gBAEA;;gBADA;;gBAGA;;;;;;gBAmCN,uD;AAAS,iBAAC,uFAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AA3BC6N,0BAAoB,eALhC,gEAAU;AACTrY,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,qIAFS;;;;AAAA,OAAV,CAKgC,E,iCA6BR,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACc,mF,EACR,+E,EAnCY,GAApB8I,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAsC,kBAAkB;AAY7B,oCAAmBjL,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIU0F,yBAJV,EAIgE;AAAA;;AAJ7C,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAER,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AApB4B;AAAA;AAAA,iBAsB7B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAxB4B;AAAA;AAAA,iBAyBhB,gCAAuB1B,IAAvB,EAA6B;;;;;;;AACxC;;AAEK,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAE5G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAGA,GAAG,IAAE,CAAR,EAAU;AACR,+BAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,+BAAI,CAACc,OAAL;AACD,uBAHD,MAKA,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,6BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,qBAVD;;;;;;;;;;AAaL;AA3C4B;AAAA;AAAA,iBA4C7B,mBAAU;AAER,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAlD4B;AAAA;AAAA,iBAmD7B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AACvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA3D4B;AAAA;AAAA,iBA8D7B,cAAKmI,SAAL,EAAgB;AACd,iBAAKmC,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwBrH,SAAxB,CAArB;AACD;AAhE4B;AAAA;AAAA,iBAkE7B,gBAAO0F,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKA,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,aAVD;AAWD;AA9E4B;AAAA;AAAA,iBA+E7B,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACC;AAvF4B;;AAAA;AAAA,S;;;;gBAXtB;;gBACA;;gBAEA;;gBADA;;gBAEA;;;;;;gBAgBN,0D;AAAY,iBAAC,wFAAD;;;AATFuC,wBAAkB,eAL9B,gEAAU;AACT3a,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,uHAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAK8B,E,iCAYD,mF,EACf,0F,EACA,0E,EACG,sD,EACqB,uG,EAhBR,GAAlB8J,kBAAkB,CAAlB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFC,oBAAoB;AAY/B,sCACU3Q,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUwQ,eANV,EAM2C;AAAA;;AALjC,eAAA5Q,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAwQ,eAAA,GAAAA,eAAA;AAhBV,eAAAtQ,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAtB8B;AAAA;AAAA,iBAwB/B,oBAAW;AACT,iBAAKiQ,mBAAL;AACD;AA1B8B;AAAA;AAAA,eA4B/B,eAAQ;AAAE,mBAAO,KAAKC,YAAL,CAAkB1P,QAAzB;AAAoC;AA5Bf;AAAA;AAAA,iBA8BvB,sBAAa;AACnB,iBAAK0P,YAAL,GAAoB,KAAK/Q,WAAL,CAAiBsB,KAAjB,CAAuB;AACzC7F,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW+F,QAAhB,CAD+B;AAEzCqM,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWrM,QAAhB,CAFkC;AAGzCpD,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWoD,QAAhB,CAH+B;AAIzCM,sBAAQ,EAAE,CAAC,IAAD,CAJ+B;AAKzCkP,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWxP,QAAhB,CALiC;AAMzCxC,wBAAU,EAAE,CAN6B;AAOzCqI,mBAAK,EAAE,CAAC,EAAD,CAPkC;AAQzC1I,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OARK;AASzC9C,wBAAU,EAAE;AAT6B,aAAvB,CAApB;AAWD;AA1C8B;AAAA;AAAA,iBA4CvB,kBAAS2H,GAAT,EAAc;AACpB,iBAAKG,CAAL,CAAOlI,QAAP,CAAgBmI,QAAhB,CAAyBJ,GAAG,CAAC/H,QAA7B;AACA,iBAAKkI,CAAL,CAAOkK,KAAP,CAAajK,QAAb,CAAsBJ,GAAG,CAACqK,KAA1B;AACA,iBAAKlK,CAAL,CAAOvF,QAAP,CAAgBwF,QAAhB,CAAyBJ,GAAG,CAACpF,QAA7B;AACA,iBAAKuF,CAAL,CAAOqN,MAAP,CAAcpN,QAAd,CAAuBJ,GAAG,CAACwN,MAA3B;AACA,iBAAKrN,CAAL,CAAO3E,UAAP,CAAkB4E,QAAlB,CAA2BJ,GAAG,CAACxE,UAA/B;AACA,iBAAK2E,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AArD8B;AAAA;AAAA,iBAuD/B,+BAAsB;AAAA;;AACpB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,uBAAI,CAAClN,CAAL,CAAO3E,UAAP,CAAkB4E,QAAlB,CAA2Bc,GAA3B;;AACA,uBAAI,CAACkM,eAAL,CAAqBjM,OAArB,CAA6BD,GAA7B,EAAkC,OAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAAjD,EAAwD9E,SAAxD,CAAkE,UAAAzB,GAAG,EAAI;AACvE;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AApE8B;AAAA;AAAA,iBAsE/B,oBAAW;AAAA;;AACT;AACA,iBAAKE,YAAL,CAAkBjM,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKyQ,YAAL,CAAkBhM,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAEA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAO3E,UAAP,CAAkBd,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAC3C;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAKuT,YAAL,CAAkB7S,KAAjC,CAAZ;AACA,mBAAK0S,eAAL,CAAqB3L,MAArB,CAA4B,KAAK8L,YAAL,CAAkB7S,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAbD,MAaO;AACL;AACA,mBAAKqQ,eAAL,CAAqBvL,MAArB,CAA4B,KAAK0L,YAAL,CAAkB7S,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAzG8B;;AAAA;AAAA,S;;;;gBAZb;;gBAEX;;gBAAQ;;gBACR;;gBAEA;;gBADA;;;;;;gBAmBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAXCoQ,0BAAoB,eALhC,gEAAU;AACT5a,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,uIAFS;;;;AAAA,OAAV,CAKgC,E,iCAaR,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACc,mF,EAlBI,GAApBqL,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAO,kBAAkB;AAW7B,oCAAmBzL,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAIwB;AAAA;;AAJL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACN,eAAKiO,aAAL,GAAoB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA/C;AAED,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AArB4B;AAAA;AAAA,iBAuB7B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAzB4B;AAAA;AAAA,iBA0B7B,wBAAY;AAAA;;AACV,iBAAKP,OAAL,CAAa+B,UAAb,CAAwB,KAAK0G,aAA7B,EAA4C9U,SAA5C,CAAsD,UAACzB,GAAD,EAAc;AAClE,qBAAI,CAAC+N,YAAL,CAAkB+B,iBAAlB,CAAoC9P,GAApC,EAAyC,eAAzC;AACD,aAFD,EAEG,UAAAkI,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,kBAA1B;AACD,aAJD;AAKD;AAhC4B;AAAA;AAAA,iBAiC7B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAtC4B;AAAA;AAAA,iBAwC7B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AAjD4B;AAAA;AAAA,iBAmD7B,cAAKgG,SAAL,EAAgB;AACV,iBAAKsE,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwBxJ,SAAxB,CAArB;AACL;AArD4B;AAAA;AAAA,iBAuD7B,gBAAO6H,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKA,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,aAVD;AAWD;AAnE4B;AAAA;AAAA,iBAqE7B,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACC;AA7E4B;;AAAA;AAAA,S;;;;gBAbtB;;gBACA;;gBAIA;;gBADA;;gBAFA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AATF+C,wBAAkB,eAN9B,gEAAU;AACTnb,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,wHAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM8B,E,iCAWD,mF,EACf,0F,EACU,0E,EACV,0E,EACG,sD,EAfa,GAAlBsK,kBAAkB,CAAlB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoCf,UAAM3L,GAAG,GAAG,IAAIjQ,IAAJ,EAAZ;;UAOa6b,kBAAkB;AAe7B,oCAAmB1L,OAAnB,EAAmDtF,EAAnD,EAA4E;AAAA;;AAAzD,eAAAsF,OAAA,GAAAA,OAAA;AAAgC,eAAAtF,EAAA,GAAAA,EAAA;AAXnD,eAAAuK,iBAAA,GAAoB,EAApB;AACA,eAAA0G,gBAAA,GAAiB,IAAI,yEAAJ,EAAjB;AAYC;;AAjB4B;AAAA;AAAA,iBAQ7B,oBAAW;AACT;AACA;AACA;AACA,iBAAKC,YAAL;AACD;AAb4B;AAAA;AAAA,iBAkB7B,yBAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC/B,iBAAKC,YAAL,GAAoB;AAClBC,oBAAM,EAAE,CACN;AACE3Z,oBAAI,EAAE,OADR;AAEE1C,oBAAI,EAAEkc;AAFR,eADM,CADU;AAOlBI,mBAAK,EAAE;AACLC,sBAAM,EAAE,GADH;AAEL3c,oBAAI,EAAE;AAFD,eAPW;AAWlBwF,mBAAK,EAAE;AACLoX,oBAAI,EAAE;AADD,eAXW;AAclBC,mBAAK,EAAE;AACLrW,0BAAU,EAAE+V;AADP;AAdW,aAApB;AAmBD;AAtC4B;AAAA;AAAA,iBAuC7B,kBAASO,IAAT,EAAe;AAEb,iBAAKC,iBAAL,GAAyB;AACvBN,oBAAM,EAAE,CAACK,IAAI,CAACE,OAAN,EAAeF,IAAI,CAACG,SAApB,EAA+BH,IAAI,CAACI,OAApC,EAA6CJ,IAAI,CAACK,KAAlD,CADe;AAEvBT,mBAAK,EAAE;AACL1c,oBAAI,EAAE;AADD,eAFgB;AAKvBod,oBAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,OAApC,CALe;AAMvBC,wBAAU,EAAE,CACV;AACEC,0BAAU,EAAE,GADd;AAEEC,uBAAO,EAAE;AACPC,wBAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CADD;AAEPd,uBAAK,EAAE;AACLe,yBAAK,EAAE;AADF,mBAFA;AAKPC,wBAAM,EAAE;AACNC,4BAAQ,EAAE;AADJ;AALD;AAFX,eADU;AANW,aAAzB;AAqBD;AA9D4B;AAAA;AAAA,iBAgE7B,wBAAe;AAAA;;AACb;AACA,iBAAKlN,OAAL,CAAaW,UAAb,GAA0BhN,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD;AACA,qBAAI,CAACyZ,gBAAL,GAAwBzZ,GAAG,CAAC,CAAD,CAA3B;AACD,aAHD;AAID;AAtE4B;;AAAA;AAAA,S;;;;gBAlBtB;;gBAEA;;;;;;gBAiBN,uD;AAAS,iBAAC,OAAD;;;gBAMT,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;AAPCwZ,wBAAkB,eAN9B,gEAAU;AACTpb,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,+GAFS;;;;AAAA,OAAV,CAM8B,E,iCAeD,kF,EAA2B,0F,EAf1B,GAAlB6L,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC9BAyB,mBAAmB;AAS9B,qCACU5S,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUyS,cANV,EAMyC;AAAA;;AAL/B,eAAA7S,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAyS,cAAA,GAAAA,cAAA;AAbV,eAAAvS,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAYE,eAAKC,UAAL;AACD;;AAnB6B;AAAA;AAAA,iBAqB9B,oBAAW;AACT,iBAAKiS,kBAAL;AACD;AAvB6B;AAAA;AAAA,eAyB9B,eAAQ;AAAE,mBAAO,KAAKC,WAAL,CAAiB1R,QAAxB;AAAmC;AAzBf;AAAA;AAAA,iBA2BtB,sBAAa;AACnB;AACA,iBAAK0R,WAAL,GAAmB,KAAK/S,WAAL,CAAiBsB,KAAjB,CAAuB;AACxC6K,uBAAS,EAAE,CAD6B;AAExCrU,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAFkC;AAGxC2F,wBAAU,EAAE,CAAC,EAAD,CAH4B;AAIxCD,0BAAY,EAAE,EAJ0B;AAKxCpF,sBAAQ,EAAE,CAAC,IAAD,CAL8B;AAMxCuF,mBAAK,EAAE,CAAC,EAAD;AANiC,aAAvB,CAAnB;AAQD;AArC6B;AAAA;AAAA,iBAuCtB,kBAAS7D,GAAT,EAAc;AACpB;AACA,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAK6B,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAKC,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AA/C6B;AAAA;AAAA,iBAiD9B,8BAAqB;AAAA;;AACnB;AACA,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,uBAAI,CAAClN,CAAL,CAAOwI,SAAP,CAAiBvI,QAAjB,CAA0Bc,GAA1B;;AACA,uBAAI,CAACmO,cAAL,CAAoBlO,OAApB,CAA4BD,GAA5B,EAAiCtL,SAAjC,CAA2C,UAAAzB,GAAG,EAAI;AAChD;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA/D6B;AAAA;AAAA,iBAiE9B,oBAAW;AAAA;;AACT;AACA,iBAAKkC,WAAL,CAAiBjO,gBAAjB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKyS,WAAL,CAAiBhO,OAArB,EAA8B;AAAE;AAAS;;AACzC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAGA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOwI,SAAP,CAAiBjO,KAAlB,CAAR,KAAqC,CAAzC,EAA4C;AAC1C;AACA,mBAAK2U,cAAL,CAAoB5N,MAApB,CAA2B,KAAK8N,WAAL,CAAiB7U,KAA5C,EAAmD9E,SAAnD,CAA6D,UAAAhE,IAAI,EAAI;AACnE;;AACA,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb;;AACA,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eARD,EAQG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAXD;AAYD,aAdD,MAeK;AACH;AACA,mBAAKsS,cAAL,CAAoBxN,MAApB,CAA2B,KAAK0N,WAAL,CAAiB7U,KAA5C,EAAmD9E,SAAnD,CAA6D,UAAAhE,IAAI,EAAI;AACnE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAvG6B;;AAAA;AAAA,S;;;;gBAZZ;;gBAEX;;gBAAQ;;gBACR;;gBACA;;gBACA;;;;;;gBAeN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AARCqS,yBAAmB,eAJ/B,gEAAU;AACT7c,gBAAQ,EAAE,gBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAI+B,E,iCAUP,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACa,iF,EAfI,GAAnBsN,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBFI,oBAAoB;AAU/B,sCAAmBvN,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAKU0F,yBALV,EAKgE;AAAA;;AAL7C,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAbV,eAAAC,WAAA,GAAc,EAAd;AAcE,eAAKC,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AAlB8B;AAAA;AAAA,iBAoB/B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAtB8B;AAAA;AAAA,iBAwB/B,cAAKmG,SAAL,EAAgB;AACd,iBAAKlM,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwBgH,SAAxB,CAArB;AACD;AA1B8B;AAAA;AAAA,iBA4BlB,gCAAuB7H,IAAvB,EAA6B;;;;;;;AACxC;;AACI,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAC7G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,+BAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,+BAAI,CAACc,OAAL;AACD,uBAHD,MAKE,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACH,qBAPD,EAOG,UAAAvF,KAAK,EAAI;AACV,6BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,qBATD;;;;;;;;;;AAYH;AA3C8B;AAAA;AAAA,iBA6C/B,gBAAO5B,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKE,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACH,aAPD,EAOG,UAAAvF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aATD;AAUD;AAxD8B;AAAA;AAAA,iBA0D/B,qBAAY0H,KAAZ,EAAmB3G,MAAnB,EAA2B;AAAA;;AACzB;AACA2G,iBAAK,CAAChL,QAAN,GAAiBqE,MAAjB,CAFyB,CAGzB;;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoByH,KAApB,EAA2B1T,SAA3B,CAAqC,UAAAhE,IAAI,EAAI;AAE3C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,uBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AAvE8B;AAAA;AAAA,iBAyE/B,mBAAU;AAER,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA/E8B;AAAA;AAAA,iBAiF/B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA1F8B;AAAA;AAAA,iBA4F/B,cAAK2F,OAAL,EAAc;AACZ,iBAAK2E,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,2BAAD,EAA8B7J,OAA9B,CAArB;AACD;AA9F8B;AAAA;AAAA,iBAgG/B,kBAAS;AAEP,iBAAK0K,OAAL;AACD;AAnG8B;;AAAA;AAAA,S;;;;gBATxB;;gBAJA;;gBAEA;;gBADA;;gBANgB;;gBAUhB;;;;;;gBAgBN,0D;AAAY,iBAAC,wFAAD;;;AARFgN,0BAAoB,eANhC,gEAAU;AACTjd,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,gHAFS;AAITsB,iBAAS,EAAE,CAAC,0EAAD,CAJF;;;;AAAA,OAAV,CAMgC,E,iCAUH,0E,EACf,0F,EACU,0E,EACV,0E,EACI,sD,EACoB,uG,EAfN,GAApBoM,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFC,kBAAkB;AAO7B,oCACUjT,WADV,EAEUC,MAFV,EAGUC,KAHV,EAISE,EAJT,EAKUD,EALV,EAMU+S,aANV,EAMsC;AAAA;;AAL5B,eAAAlT,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAE,EAAA,GAAAA,EAAA;AACC,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAA+S,aAAA,GAAAA,aAAA;AAZV,eAAA5S,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAA4S,YAAA,GAAe,KAAf;AAYE,eAAKtS,UAAL;AACD;;AAjB4B;AAAA;AAAA,iBAmB7B,oBAAW;AACT,iBAAKuS,gBAAL;AACD;AArB4B;AAAA;AAAA,eAuB7B,eAAQ;AAAE,mBAAO,KAAKC,SAAL,CAAehS,QAAtB;AAAiC;AAvBd;AAAA;AAAA,iBAyBrB,sBAAa;AACnB,iBAAKgS,SAAL,GAAiB,KAAKrT,WAAL,CAAiBsB,KAAjB,CAAuB;AACtCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADgC;AAEtC2F,wBAAU,EAAE,CAAC,EAAD,CAF0B;AAGtCzF,yBAAW,EAAE,CAAC,EAAD,CAHyB;AAItCI,sBAAQ,EAAE,CAAC,IAAD,CAJ4B;AAKtCoF,0BAAY,EAAE,CAAC,CAAD,CALwB;AAMtC2C,mBAAK,EAAE,CAAC,CAAD,CAN+B;AAOtCyJ,qBAAO,EAAE,CAP6B;AAQtCjM,mBAAK,EAAE,CAAC,EAAD,CAR+B;AAStC1I,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OATE;AAUtC9C,wBAAU,EAAE;AAV0B,aAAvB,CAAjB;AAYD;AAtC4B;AAAA;AAAA,iBAwCrB,kBAAS2H,GAAT,EAAc;AAEpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAOkG,KAAP,CAAajG,QAAb,CAAsBJ,GAAG,CAACqG,KAA1B;AACA,iBAAKlG,CAAL,CAAO2P,OAAP,CAAe1P,QAAf,CAAwBJ,GAAG,CAAC8P,OAA5B;AACA,iBAAK3P,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAnD4B;AAAA;AAAA,iBAqD7B,4BAAmB;AAAA;;AAEjB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACyO,YAAL,GAAoB,IAApB;;AACA,uBAAI,CAACxP,CAAL,CAAO2P,OAAP,CAAe1P,QAAf,CAAwBc,GAAxB;;AACA,uBAAI,CAACwO,aAAL,CAAmBvO,OAAnB,CAA2BD,GAA3B,EAAgC,OAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAA/C,EAAsD9E,SAAtD,CAAgE,UAAAzB,GAAG,EAAI;AACrE;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAACwb,YAAL,GAAoB,KAApB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAnE4B;AAAA;AAAA,iBAqE7B,oBAAW;AAAA;;AAET,iBAAKE,SAAL,CAAevO,gBAAf;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK+S,SAAL,CAAetO,OAAnB,EAA4B;AAAE;AAAS;;AACvC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AACA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAO2P,OAAP,CAAepV,KAAhB,CAAR,KAAmC,CAAvC,EAA0C;AAExC;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK6V,SAAL,CAAenV,KAA9B,CAAZ;AACA,mBAAKgV,aAAL,CAAmBjO,MAAnB,CAA0B,KAAKoO,SAAL,CAAenV,KAAzC,EAAgD9E,SAAhD,CAA0D,UAAAhE,IAAI,EAAI;AAChE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD,iBAJ+D,CAKhE;;;AACA,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAPD,EAOG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAhBD,MAgBO;AACL;AACA,mBAAK2S,aAAL,CAAmB7N,MAAnB,CAA0B,KAAKgO,SAAL,CAAenV,KAAzC,EAAgD9E,SAAhD,CAA0D,UAAAhE,IAAI,EAAI;AAChE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA1G4B;;AAAA;AAAA,S;;;;gBAbX;;gBAEX;;gBAAQ;;gBAGR;;gBAFA;;gBACA;;;;;;gBAcN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AALC0S,wBAAkB,eAL9B,gEAAU;AACTld,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,2HAFS;;;;AAAA,OAAV,CAK8B,E,iCAQN,0D,EACL,sD,EACD,8D,EACJ,0E,EACC,0F,EACW,6E,EAbI,GAAlB2N,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAM,eAAe;AAU1B,iCAAmB9N,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAIwB;AAAA;;AAJL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACN,eAAKiO,aAAL,GAAoB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA/C;AACD,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AAlByB;AAAA;AAAA,iBAoB1B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAtByB;AAAA;AAAA,iBAuB1B,wBAAY;AAAA;;AACV,iBAAKP,OAAL,CAAa+B,UAAb,CAAwB,KAAK0G,aAA7B,EAA4C9U,SAA5C,CAAsD,UAACzB,GAAD,EAAc;AAClE,qBAAI,CAAC+N,YAAL,CAAkB+B,iBAAlB,CAAoC9P,GAApC,EAAyC,eAAzC;AACD,aAFD,EAEG,UAAAkI,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,kBAA1B;AACD,aAJD;AAKD;AA7ByB;AAAA;AAAA,iBA8B1B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAnCyB;AAAA;AAAA,iBAqC1B,uBAAyC;AAAA,gBAAhC/P,MAAgC,SAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,SAAxBA,SAAwB;AACvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA7CyB;AAAA;AAAA,iBA+C1B,cAAK0D,MAAL,EAAa;AAEX,iBAAK4G,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,mBAAD,EAAsB9L,MAAtB,CAArB;AACD;AAlDyB;AAAA;AAAA,iBAoD1B,gBAAOmK,GAAP,EAAY;AAAA;;AAEV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAKA,OAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACX,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACA,aAVD;AAWD;AAjEyB;AAAA;AAAA,iBAmE1B,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACC;AA3EyB;;AAAA;AAAA,S;;;;gBAVnB;;gBAHA;;gBAKA;;gBADA;;gBAHe;;;;;;gBAoBrB,0D;AAAY,iBAAC,wFAAD;;;AARFoF,qBAAe,eAN3B,gEAAU;AACTxd,gBAAQ,EAAE,YADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,8GAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM2B,E,iCAUE,6E,EACf,0F,EACU,0E,EACV,0E,EACG,sD,EAdU,GAAf2M,eAAe,CAAf;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFC,oBAAoB;AAc/B,sCACUxT,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUqT,eANV,EAM0C;AAAA;;AALhC,eAAAzT,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAqT,eAAA,GAAAA,eAAA;AAjBV,eAAAnT,SAAA,GAAY,KAAZ;AAGA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAmT,eAAA,GAAkB,KAAlB;AACA,eAAA9S,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAxB8B;AAAA;AAAA,iBA0B/B,oBAAW;AACT,iBAAK8S,mBAAL;AACD;AA5B8B;AAAA;AAAA,eA8B/B,eAAQ;AAAE,mBAAO,KAAKC,YAAL,CAAkBvS,QAAzB;AAAoC;AA9Bf;AAAA;AAAA,iBAgCvB,sBAAa;AACnB,iBAAKuS,YAAL,GAAoB,KAAK5T,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADmC;AAEzC2F,wBAAU,EAAE,CAAC,EAAD,CAF6B;AAGzCzF,yBAAW,EAAE,CAAC,EAAD,CAH4B;AAIzCI,sBAAQ,EAAE,CAAC,IAAD,CAJ+B;AAKzCoF,0BAAY,EAAE,CAAC,CAAD,CAL2B;AAMzC2M,wBAAU,EAAE,CAN6B;AAOzCxM,mBAAK,EAAE,CAAC,EAAD,CAPkC;AAQzC1I,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OARK;AASzC9C,wBAAU,EAAE;AAT6B,aAAvB,CAApB;AAWD;AA5C8B;AAAA;AAAA,iBA8CvB,kBAAS2H,GAAT,EAAc;AAEpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAOkQ,UAAP,CAAkBjQ,QAAlB,CAA2BJ,GAAG,CAACqQ,UAA/B;AACA,iBAAKlQ,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAxD8B;AAAA;AAAA,iBA0D/B,+BAAsB;AAAA;;AACpB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACgP,eAAL,GAAuB,IAAvB;;AACA,uBAAI,CAAC/P,CAAL,CAAOkQ,UAAP,CAAkBjQ,QAAlB,CAA2Bc,GAA3B;;AACA,uBAAI,CAAC+O,eAAL,CAAqB9O,OAArB,CAA6BD,GAA7B,EAAkC,OAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAAjD,EAAwD9E,SAAxD,CAAkE,UAAAzB,GAAG,EAAI;AACvE;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAAC+b,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAvE8B;AAAA;AAAA,iBAyE/B,oBAAW;AAAA;;AAET,iBAAKE,YAAL,CAAkB9O,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKsT,YAAL,CAAkB7O,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAEA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOkQ,UAAP,CAAkB3V,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAC3C;AACA,mBAAKuV,eAAL,CAAqBxO,MAArB,CAA4B,KAAK2O,YAAL,CAAkB1V,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAWD,aAbD,MAaO;AACL;AACA,mBAAKkT,eAAL,CAAqBpO,MAArB,CAA4B,KAAKuO,YAAL,CAAkB1V,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA5G8B;;AAAA;AAAA,S;;;;gBAZb;;gBAGX;;gBAAQ;;gBACR;;gBACA;;gBAJA;;;;;;gBAwBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAbCiT,0BAAoB,eALhC,gEAAU;AACTzd,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,iIAFS;;;;AAAA,OAAV,CAKgC,E,iCAeR,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACc,iF,EApBI,GAApBkO,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMAM,iBAAiB;AAW5B,mCAAmBrO,OAAnB,EACSC,YADT,EAESvF,EAFT,EAGSC,EAHT,EAIS2T,GAJT,EAKS9T,MALT,EAKyB;AAAA;;AALN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAvF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAA2T,GAAA,GAAAA,GAAA;AACA,eAAA9T,MAAA,GAAAA,MAAA;AANT,eAAAzE,UAAA,GAAyB,EAAzB;AAOE,eAAK0S,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AACA,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAGD;;AAtB2B;AAAA;AAAA,iBAwB5B,oBAAW;AACT,iBAAKE,OAAL;AACD;AA1B2B;AAAA;AAAA,iBA4B5B,wBAAY;AAAA;;AACV,iBAAKP,OAAL,CAAa+B,UAAb,CAAwB,KAAK0G,aAA7B,EAA4C9U,SAA5C,CAAsD,UAACzB,GAAD,EAAc;AAClE,qBAAI,CAAC+N,YAAL,CAAkB+B,iBAAlB,CAAoC9P,GAApC,EAAyC,eAAzC;AACD,aAFD,EAEG,UAAAkI,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,kBAA1B;AACD,aAJD;AAKD;AAlC2B;AAAA;AAAA,iBAoC5B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AAED;AA1C2B;AAAA;AAAA,iBA4C5B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AACvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AApD2B;AAAA;AAAA,iBAsD5B,cAAKqe,QAAL,EAAe;AACb,iBAAK/T,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwB6O,QAAxB,CAArB;AACD;AAxD2B;AAAA;AAAA,iBA0D5B,gBAAOxQ,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,uBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,uBAAI,CAACc,OAAL;AACD,eAHD,MAIK;AACH,uBAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD;AACF,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,qBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,aAVD;AAWD;AAtE2B;AAAA;AAAA,iBAuE5B,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACD;AA/E2B;;AAAA;AAAA,S;;;;gBAbrB;;gBAKA;;gBAJA;;gBAEA;;gBACA;;gBAFA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AATF2F,uBAAiB,eAN7B,gEAAU;AACT/d,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,kHAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM6B,E,iCAWA,iF,EACL,0E,EACV,0F,EACA,0E,EACC,wD,EACG,sD,EAhBW,GAAjBkN,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFG,iBAAiB;AAa5B,mCACUjU,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMU8T,YANV,EAMoC;AAAA;;AAL1B,eAAAlU,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAA8T,YAAA,GAAAA,YAAA;AAlBV,eAAA5T,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAA4T,YAAA,GAAe,KAAf,CAeoC,CAdpC;;AACA,eAAAC,gBAAA,GAAmB,EAAnB;AACA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,UAAA,GAAa,EAAb;AAcE,eAAKzT,UAAL,GAHkC,CAIlC;;AACA,eAAK0T,kBAAL;AACA,eAAKC,aAAL;AACA,eAAKC,UAAL;AACD;;AA3B2B;AAAA;AAAA,iBA6B5B,oBAAW;AACT,iBAAKC,eAAL;AACD;AA/B2B;AAAA;AAAA,eAiC5B,eAAQ;AAAE,mBAAO,KAAKC,SAAL,CAAetT,QAAtB;AAAiC;AAjCf;AAAA;AAAA,iBAmCpB,sBAAa;AACnB,iBAAKsT,SAAL,GAAiB,KAAK3U,WAAL,CAAiBsB,KAAjB,CAAuB;AACtCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADgC;AAEtC2F,wBAAU,EAAE,CAAC,EAAD,CAF0B;AAGtCzF,yBAAW,EAAE,CAAC,EAAD,CAHyB;AAItCI,sBAAQ,EAAE,CAAC,IAAD,CAJ4B;AAKtCC,wBAAU,EAAE,CAAC,KAAD,CAL0B;AAMtC6S,6BAAe,EAAE,CAAC,IAAD,CANqB;AAOtC1N,0BAAY,EAAE,CAAC,CAAD,CAPwB;AAQtC2N,kBAAI,EAAE,CAAC,CAAD,CARgC;AAStChB,wBAAU,EAAE,CAAC,IAAD,CAT0B;AAUtChK,mBAAK,EAAE,CAAC,CAAD,EAAI,0DAAWrI,QAAf,CAV+B;AAWtCsT,oBAAM,EAAE,CAX8B;AAYtCC,sBAAQ,EAAE,CAAC,CAAD,EAAI,0DAAWvT,QAAf,CAZ4B;AAatC6F,mBAAK,EAAE,CAAC,EAAD,CAb+B;AActC1I,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAdE;AAetC9C,wBAAU,EAAE,IAf0B;AAgBtCyC,uBAAS,EAAE,EAhB2B;AAiBtCjF,oBAAM,EAAE;AAjB8B,aAAvB,CAAjB;AAmBD;AAvD2B;AAAA;AAAA,iBAyDpB,kBAASmK,GAAT,EAAc;AAEpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAOkG,KAAP,CAAajG,QAAb,CAAsBJ,GAAG,CAACqG,KAA1B;AACA,iBAAKlG,CAAL,CAAOkR,IAAP,CAAYjR,QAAZ,CAAqBJ,GAAG,CAACqR,IAAzB;AACA,iBAAKlR,CAAL,CAAOoR,QAAP,CAAgBnR,QAAhB,CAAyBJ,GAAG,CAACuR,QAA7B;AACA,iBAAKpR,CAAL,CAAOmR,MAAP,CAAclR,QAAd,CAAuBJ,GAAG,CAACsR,MAA3B;;AAGA,gBAAItR,GAAG,CAAClF,SAAJ,IAAiB,EAArB,EAAyB;AACvB,kBAAIgO,eAAe,GAAG9I,GAAG,CAAClF,SAA1B;AACA,mBAAK0W,mBAAL,GAA2B1I,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAA3B;AACA,mBAAK7I,CAAL,CAAOrF,SAAP,CAAiBsF,QAAjB,CAA0BJ,GAAG,CAAClF,SAA9B;AACD;;AAED,gBAAIkF,GAAG,CAACnK,MAAJ,IAAc,EAAlB,EAAsB;AACpB,kBAAIiT,eAAe,GAAG9I,GAAG,CAACnK,MAA1B;AACA,mBAAK4b,gBAAL,GAAwB3I,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAAxB;AACA,mBAAK7I,CAAL,CAAOtK,MAAP,CAAcuK,QAAd,CAAuBJ,GAAG,CAACnK,MAA3B;AACD;;AACD,iBAAKsK,CAAL,CAAOkQ,UAAP,CAAkBjQ,QAAlB,CAA2BJ,GAAG,CAACqQ,UAA/B;AACA,iBAAKlQ,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAK6B,CAAL,CAAO5B,UAAP,CAAkB6B,QAAlB,CAA2BJ,GAAG,CAACzB,UAA/B;AACAyB,eAAG,CAACoR,eAAJ,GAAsBpR,GAAG,CAACoR,eAAJ,IAAuB,IAAvB,GAA8B,IAA9B,GAAqCpR,GAAG,CAACoR,eAA/D;AACA,iBAAKjR,CAAL,CAAOiR,eAAP,CAAuBhR,QAAvB,CAAgCJ,GAAG,CAACoR,eAApC;AACA,iBAAKtN,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AAED;AAxF2B;AAAA;AAAA,iBA0F5B,2BAAkB;AAAA;;AAEhB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,uBAAI,CAACyP,YAAL,GAAoB,IAApB;;AACA,uBAAI,CAACxQ,CAAL,CAAOmR,MAAP,CAAclR,QAAd,CAAuBc,GAAvB;;AACA,uBAAI,CAACwP,YAAL,CAAkBvP,OAAlB,CAA0BD,GAA1B,EAA+B,OAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAzB,GAAG,EAAI;AACpE;AACA,yBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,yBAAI,CAACwc,YAAL,GAAoB,KAApB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAxG2B;AAAA;AAAA,iBA0G5B,oBAAW;AAAA;;AAET,iBAAKQ,SAAL,CAAe7P,gBAAf;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKqU,SAAL,CAAe5P,OAAnB,EAA4B;AAAE;AAAS;;AACvC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAOrF,SAAP,CAAiBsF,QAAjB,CAA0B,KAAKoR,mBAAL,IAA4BtI,SAA5B,GAAwC,EAAxC,GAA6C,KAAKsI,mBAAL,CAAyBrI,QAAzB,EAAvE;AACA,iBAAKhJ,CAAL,CAAOtK,MAAP,CAAcuK,QAAd,CAAuB,KAAKqR,gBAAL,IAAyBvI,SAAzB,GAAqC,EAArC,GAA0C,KAAKuI,gBAAL,CAAsBtI,QAAtB,EAAjE;AACA,iBAAKhJ,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAEA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOmR,MAAP,CAAc5W,KAAf,CAAR,KAAkC,CAAtC,EAAyC;AAEvC;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAKmX,SAAL,CAAezW,KAA9B,CAAZ;AACA,mBAAKgW,YAAL,CAAkBjP,MAAlB,CAAyB,KAAK0P,SAAL,CAAezW,KAAxC,EAA+C9E,SAA/C,CAAyD,UAAAhE,IAAI,EAAI;AAC/D,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;AACD,uBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAWD,aAfD,MAeO;AACL;AACA,mBAAK2T,YAAL,CAAkB7O,MAAlB,CAAyB,KAAKsP,SAAL,CAAezW,KAAxC,EAA+C9E,SAA/C,CAAyD,UAAAhE,IAAI,EAAI;AAC/D,uBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,yBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,yBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,uBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,uBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF,WAjJ2B,CAmJ5B;AACA;AAEA;AACA;AACA;;AAxJ4B;AAAA;AAAA,iBAyJpB,8BAAqB;AAAA;;AAE3B,iBAAK2T,YAAL,CAAkBgB,oBAAlB,CAAuC,KAAKvR,CAAL,CAAOhF,OAAP,CAAeT,KAAtD,EAA6D9E,SAA7D,CAAuE,UAACzB,GAAD,EAAc;AAEnF,qBAAI,CAACyc,gBAAL,GAAwBzc,GAAxB;AACD,aAHD;AAID;AA/J2B;AAAA;AAAA,iBAgKpB,yBAAgB;AAAA;;AACtB,iBAAKuc,YAAL,CAAkBiB,gBAAlB,CAAmC,KAAKxR,CAAL,CAAOhF,OAAP,CAAeT,KAAlD,EAAyD9E,SAAzD,CAAmE,UAACzB,GAAD,EAAc;AAC/E,qBAAI,CAAC0c,aAAL,GAAqB1c,GAArB;AACD,aAFD;AAGD;AApK2B;AAAA;AAAA,iBAqKpB,sBAAa;AAAA;;AAEnB,iBAAKuc,YAAL,CAAkBkB,aAAlB,CAAgC,KAAKzR,CAAL,CAAOhF,OAAP,CAAeT,KAA/C,EAAsD9E,SAAtD,CAAgE,UAACzB,GAAD,EAAc;AAC5E,sBAAI,CAAC2c,UAAL,GAAkB3c,GAAlB;AACD,aAFD;AAGD;AA1K2B;;AAAA;AAAA,S;;;;gBAdV;;gBAGX;;gBAAQ;;gBACR;;gBACA;;gBAJA;;;;;;gBAyBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAZCsc,uBAAiB,eAN7B,gEAAU;AACTle,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sHAFS;;;;AAAA,OAAV,CAM6B,E,iCAcL,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACW,2E,EAnBI,GAAjB2O,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAoB,cAAc;AAUzB,gCAAmB5P,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAIwB;AAAA;;AAJL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACN,eAAKiO,aAAL,GAAoB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA/C;AACD,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AAlBwB;AAAA;AAAA,iBAoBzB,oBAAW;AACT,iBAAKE,OAAL;AACD;AAtBwB;AAAA;AAAA,iBAuBzB,wBAAY;AAAA;;AACV,iBAAKP,OAAL,CAAa+B,UAAb,CAAwB,KAAK0G,aAA7B,EAA4C9U,SAA5C,CAAsD,UAACzB,GAAD,EAAc;AAClE,sBAAI,CAAC+N,YAAL,CAAkB+B,iBAAlB,CAAoC9P,GAApC,EAAyC,eAAzC;AACD,aAFD,EAEG,UAAAkI,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,kBAA1B;AACD,aAJD;AAKD;AA7BwB;AAAA;AAAA,iBA8BzB,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAnCwB;AAAA;AAAA,iBAqCzB,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AACvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA7CwB;AAAA;AAAA,iBA+CzB,cAAKqH,KAAL,EAAY;AACV,iBAAKiD,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,EAAoBnI,KAApB,CAArB;AACD;AAjDwB;AAAA;AAAA,iBAmDzB,gBAAOwG,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACX,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACA,aAVD;AAWD;AA/DwB;AAAA;AAAA,iBAiEzB,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACC;AAzEwB;;AAAA;AAAA,S;;;;gBAVlB;;gBAHA;;gBAKA;;gBADA;;gBAHA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AARFkH,oBAAc,eAN1B,gEAAU;AACTtf,gBAAQ,EAAE,WADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,4GAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM0B,E,iCAUG,2E,EACf,0F,EACU,0E,EACV,0E,EACG,sD,EAdS,GAAdyO,cAAc,CAAd;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFC,qBAAqB;AAYhC,uCACUrV,MADV,EAEUC,KAFV,EAGUF,WAHV,EAIUG,EAJV,EAKSC,EALT,EAMU8T,YANV,EAMoC;AAAA;;AAL1B,eAAAjU,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAG,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAA8T,YAAA,GAAAA,YAAA;AAjBV,eAAA5T,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAA4T,YAAA,GAAe,KAAf;AAEA,eAAAoB,SAAA,GAAY,EAAZ;AAgBE,eAAKC,SAAL;AAED;;AAxB+B;AAAA;AAAA,iBA0BhC,oBAAW,CAEV;AA5B+B;AAAA;AAAA,iBA8BhC,2BAAkB;AAAA;;AAChB,iBAAKtB,YAAL,CAAkBuB,cAAlB,CAAiC,KAAKtV,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA5D,EACGvF,SADH,CACa,UAACzB,GAAD,EAAc;AACtB;AACD,kBAAI2U,eAAe,GAAG3U,GAAG,CAACqF,KAA1B;AACA,sBAAI,CAAC0Y,aAAL,GAAqB/d,GAAG,CAAC+d,aAAzB;AACA,sBAAI,CAACC,gBAAL,GAAwBhe,GAAG,CAACge,gBAA5B;AACA,sBAAI,CAACC,eAAL,GAAuBtJ,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAAvB;AAED,aARH;AASD;AAxC+B;AAAA;AAAA,iBA0ChC,oBAAW;AAAA;;AAET,gBAAIhJ,GAAG,GAAG,IAAI7J,MAAJ,EAAV;AACA6J,eAAG,CAAC,OAAD,CAAH,GAAe,KAAKoS,eAAL,CAAqBjJ,QAArB,EAAf;AACAnJ,eAAG,CAAC,SAAD,CAAH,GAAiB,KAAKrD,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA5C;AAEA6E,eAAG,CAAC,kBAAD,CAAH,GAA0B,KAAKmS,gBAA/B;AACAnS,eAAG,CAAC,eAAD,CAAH,GAAuB,KAAKkS,aAA5B;AAEA,iBAAKnV,OAAL,GAAe,IAAf;AACA,iBAAK2T,YAAL,CAAkB2B,cAAlB,CAAiCrS,GAAjC,EAAsCpK,SAAtC,CAAgD,UAAAhE,IAAI,EAAI;AACtD,sBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,kBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,wBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,uBAA/B;;AACA,wBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,mBAA3B;;AACA,sBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,aATD;AAUD;AA9D+B;AAAA;AAAA,iBAgExB,qBAAY;AAAA;;AAElB,iBAAK2T,YAAL,CAAkBsB,SAAlB,CAA4B,KAAKrV,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAvD,EAAgEvF,SAAhE,CAA0E,UAACzB,GAAD,EAAc;AACtF;AACA,sBAAI,CAAC4d,SAAL,GAAiB5d,GAAjB;;AAEA,sBAAI,CAAC+c,eAAL;AACD,aALD;AAMD;AAxE+B;;AAAA;AAAA,S;;;;gBAVzB;;gBAAQ;;gBAHG;;gBAIX;;gBACA;;gBAJA;;;;AAYIY,2BAAqB,eANjC,gEAAU;AACTvf,gBAAQ,EAAE,kBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,gIAFS;;;;AAAA,OAAV,CAMiC,E,iCAad,sD,EACD,8D,EACM,0D,EACT,0F,EACD,0E,EACW,2E,EAlBQ,GAArBgQ,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFQ,oBAAoB;AAO/B,sCACU9V,WADV,EAEUC,MAFV,EAGUC,KAHV,EAISE,EAJT,EAKUD,EALV,EAMU4V,eANV,EAM2C;AAAA;;AALjC,eAAA/V,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAE,EAAA,GAAAA,EAAA;AACC,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAA4V,eAAA,GAAAA,eAAA;AAZV,eAAAzV,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAyV,eAAA,GAAkB,KAAlB;AAYE,eAAKnV,UAAL;AACD;;AAjB8B;AAAA;AAAA,iBAmB/B,oBAAW;AACT,iBAAKoV,mBAAL;AACD;AArB8B;AAAA;AAAA,eAuB/B,eAAQ;AAAE,mBAAO,KAAKC,YAAL,CAAkB7U,QAAzB;AAAoC;AAvBf;AAAA;AAAA,iBAyBvB,sBAAa;AACnB,iBAAK6U,YAAL,GAAoB,KAAKlW,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADmC;AAEzC2F,wBAAU,EAAE,CAAC,EAAD,CAF6B;AAGzCzF,yBAAW,EAAE,CAAC,EAAD,CAH4B;AAIzCI,sBAAQ,EAAE,CAAC,IAAD,CAJ+B;AAKzCoF,0BAAY,EAAE,CAAC,CAAD,CAL2B;AAMzC2C,mBAAK,EAAE,CAAC,CAAD,CANkC;AAOzCsM,wBAAU,EAAE,CAP6B;AAQzC9O,mBAAK,EAAE,CAAC,EAAD,CARkC;AASzC1I,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OATK;AAUzC9C,wBAAU,EAAE;AAV6B,aAAvB,CAApB;AAYD;AAtC8B;AAAA;AAAA,iBAwCvB,kBAAS2H,GAAT,EAAc;AACpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAOkG,KAAP,CAAajG,QAAb,CAAsBJ,GAAG,CAACqG,KAA1B;AACA,iBAAKlG,CAAL,CAAOwS,UAAP,CAAkBvS,QAAlB,CAA2BJ,GAAG,CAAC2S,UAA/B;AACA,iBAAKxS,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAlD8B;AAAA;AAAA,iBAoD/B,+BAAsB;AAAA;;AACpB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACsR,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAACrS,CAAL,CAAOwS,UAAP,CAAkBvS,QAAlB,CAA2Bc,GAA3B;;AACA,wBAAI,CAACqR,eAAL,CAAqBpR,OAArB,CAA6BD,GAA7B,EAAkC,QAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAAjD,EAAwD9E,SAAxD,CAAkE,UAAAzB,GAAG,EAAI;AACvE;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACqe,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAjE8B;AAAA;AAAA,iBAmE/B,oBAAW;AAAA;;AACT,iBAAKE,YAAL,CAAkBpR,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK4V,YAAL,CAAkBnR,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AACA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOwS,UAAP,CAAkBjY,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAE3C;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK0Y,YAAL,CAAkBhY,KAAjC,CAAZ;AACA,mBAAK6X,eAAL,CAAqB9Q,MAArB,CAA4B,KAAKiR,YAAL,CAAkBhY,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,iBAJoE,CAKrE;;;AACA,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAPD,EAOG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAYD,aAhBD,MAgBO;AACL;AACA,mBAAKwV,eAAL,CAAqB1Q,MAArB,CAA4B,KAAK6Q,YAAL,CAAkBhY,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAvG8B;;AAAA;AAAA,S;;;;gBAZb;;gBAEX;;gBAAQ;;gBAGR;;gBAFA;;gBACA;;;;;;gBAaN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AALCuV,0BAAoB,eALhC,gEAAU;AACT/f,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,kIAFS;;;;AAAA,OAAV,CAKgC,E,iCAQR,0D,EACL,sD,EACD,8D,EACJ,0E,EACC,0F,EACa,mF,EAbI,GAApBwQ,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAM,kBAAkB;AAU7B,oCAAmB3Q,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAIwB;AAAA;;AAJL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACN,eAAKiO,aAAL,GAAoB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA/C;AACD,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AACD;;AAlB4B;AAAA;AAAA,iBAoB7B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAtB4B;AAAA;AAAA,iBAuB7B,wBAAY;AAAA;;AACV,iBAAKP,OAAL,CAAa+B,UAAb,CAAwB,KAAK0G,aAA7B,EAA4C9U,SAA5C,CAAsD,UAACzB,GAAD,EAAc;AAClE,sBAAI,CAAC+N,YAAL,CAAkB+B,iBAAlB,CAAoC9P,GAApC,EAAyC,eAAzC;AACD,aAFD,EAEG,UAAAkI,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,kBAA1B;AACD,aAJD;AAKD;AA7B4B;AAAA;AAAA,iBA8B7B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAnC4B;AAAA;AAAA,iBAqC7B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AACvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA7C4B;AAAA;AAAA,iBA+C7B,cAAK2I,SAAL,EAAgB;AACd,iBAAK2B,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwB7G,SAAxB,CAArB;AACD;AAjD4B;AAAA;AAAA,iBAmD7B,gBAAOkF,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACX,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACA,aAVD;AAWD;AA/D4B;AAAA;AAAA,iBAiE7B,kBAASnR,EAAT,EAAaka,UAAb,EAAyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACC;AAzE4B;;AAAA;AAAA,S;;;;gBAVtB;;gBAHA;;gBAKA;;gBADA;;gBAHA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AARFiI,wBAAkB,eAN9B,gEAAU;AACTrgB,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,oHAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM8B,E,iCAUD,mF,EACf,0F,EACU,0E,EACV,0E,EACG,sD,EAda,GAAlBwP,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAC,0BAA0B;AAcrC,4CAAmB5Q,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAIyB;AAAA;;AAJN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AAZT,eAAAwK,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AAGA,eAAAya,iBAAA,GAA+C,EAA/C;AAQE,eAAKpI,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AAEA,eAAK4X,aAAL;AACD;;AAtBoC;AAAA;AAAA,iBAwBrC,oBAAW,CAEV;AA1BoC;AAAA;AAAA,iBA2BrC,wBAAY;AAEV,iBAAK7Q,YAAL,CAAkB+B,iBAAlB,CAAoC,KAAK6O,iBAAzC,EAA4D,eAA5D;AACD;AA9BoC;AAAA;AAAA,iBA+BrC,iBAAQE,SAAR,EAAmB;AAAA;;AACjB,iBAAK/Q,OAAL,CAAagR,oBAAb,CAAkC,KAAKvI,aAAvC,EAAsDsI,SAAtD,EAAiE,KAAKnQ,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAAjE,EAA4G,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAA5G,EACGvB,SADH,CACa,UAACzB,GAAD,EAAc;AACvB,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AAEf,wBAAI,CAAC2e,iBAAL,GAAyB3e,GAAzB;AACD,eAHD,MAKE,QAAI,CAACyI,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sBAA3B;AAEH,aATH,EASK,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAXH;AAYD;AA5CoC;AAAA;AAAA,iBA8CrC,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AAhDoC;AAAA;AAAA,iBAiDrC,yBAAgB;AAAA;;AACd,iBAAKqC,OAAL,CAAa8Q,aAAb,CAA2B,KAAKrI,aAAhC,EAA+C9U,SAA/C,CAAyD,UAACzB,GAAD,EAAc;AAErE,sBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,sBAAI,CAACkE,UAAL,GAAkB,QAAI,CAAC6a,gBAAvB;;AAEA,sBAAI,CAACC,kBAAL,GACE;AADF,eAEGvd,SAFH,CAEa,UAACzB,GAAD,EAAS;AAClB,wBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,oBAAIif,GAAG,GAAG,EAAV;;AACA,wBAAI,CAACnM,SAAL,CAAehE,OAAf,CAAuB,UAAAoQ,OAAO,EAAI;AAChCD,qBAAG,CAAC3T,IAAJ,CAAS4T,OAAO,CAAChb,UAAjB;AACD,iBAFD;;AAGA,wBAAI,CAAC6O,iBAAL,GAAyBkM,GAAzB;;AAEA,wBAAI,CAAC5Q,OAAL,CAAa,QAAI,CAAC0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD,eAXH;AAaD,aAlBD;AAoBD;AAtEoC;AAAA;AAAA,iBAuErC,8BAAsC;AAAA,gBAAnB9U,IAAmB,uEAAJ,IAAI;AACpC,gBAAImF,KAAK,GAAG,KAAKyN,SAAjB;;AACA,gBAAI5S,IAAJ,EAAU;AACRmF,mBAAK,GAAGA,KAAK,CAAClD,MAAN,CAAa,UAAAgd,CAAC;AAAA,uBAAIA,CAAC,CAAChf,IAAF,CAAOif,iBAAP,GAA2B/S,OAA3B,CAAmCnM,IAAI,CAACkf,iBAAL,EAAnC,IAA+D,CAAC,CAApE;AAAA,eAAd,CAAR;AACD;;AACD,mBAAO,gDAAG/Z,KAAH,EAAU1D,IAAV,CAAe,6DAAM,GAAN,CAAf,CAAP;AACD;AA7EoC;AAAA;AAAA,iBA8ErC,kBAAS;AAEP,iBAAK0M,OAAL,CAAa,KAAK0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD;AAjFoC;;AAAA;AAAA,S;;;;gBAb9B;;gBAHA;;gBASA;;gBAPA;;gBADA;;;;;;gBAkBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAST,0D;AAAY,iBAAC,wFAAD;;;gBACZ,uD;AAAS,iBAAC,aAAD;;;AAbC0J,gCAA0B,eANtC,gEAAU;AACTtgB,gBAAQ,EAAE,uBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sIAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAMsC,E,iCAcT,6E,EACf,0F,EACU,0E,EACV,0E,EACI,sD,EAlBoB,GAA1ByP,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDAW,0BAA0B;AAkBrC,4CAAmBvR,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSsF,YAHT,EAISzF,MAJT,EAIyB;AAAA;;AAJN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAsF,YAAA,GAAAA,YAAA;AACA,eAAAzF,MAAA,GAAAA,MAAA;AAfT,eAAAwK,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AAEA,eAAA+C,MAAA,GAAoC,EAApC;AAYE,eAAKsP,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD,CADuB,CAEvB;;AAEA,eAAK4X,aAAL;AACD;;AA3BoC;AAAA;AAAA,iBA6BrC,oBAAW,CAEV;AA/BoC;AAAA;AAAA,iBAgCrC,wBAAY;AACV;AACA,iBAAK7Q,YAAL,CAAkB+B,iBAAlB,CAAoC,KAAK7I,MAAzC,EAAiD,eAAjD;AACD;AAnCoC;AAAA;AAAA,iBAoCrC,iBAAQ4X,SAAR,EAAmB;AAAA;;AACjB,iBAAK/Q,OAAL,CAAawR,oBAAb,CAAkC,KAAK/I,aAAvC,EAAsDsI,SAAtD,EAAgE,CAAhE,EAAmE,KAAKnQ,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAAnE,EAA8G,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAA9G,EACGvB,SADH,CACa,UAACzB,GAAD,EAAc;AACvB,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,wBAAI,CAACiH,MAAL,GAAajH,GAAb;AACD,eAFD,MAIE,QAAI,CAACyI,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sBAA3B;AAEH,aARH,EAQK,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAVH;AAWD;AAhDoC;AAAA;AAAA,iBAkDrC,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AApDoC;AAAA;AAAA,iBAqD7B,yBAAgB;AAAA;;AACtB,iBAAKqC,OAAL,CAAa8Q,aAAb,CAA2B,KAAKrI,aAAhC,EAA+C9U,SAA/C,CAAyD,UAACzB,GAAD,EAAc;AAErE,sBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,sBAAI,CAACkE,UAAL,GAAkB,QAAI,CAAC6a,gBAAvB;;AAEA,sBAAI,CAACC,kBAAL,GACA;AADA,eAECvd,SAFD,CAEW,UAACzB,GAAD,EAAS;AAClB,wBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,oBAAIif,GAAG,GAAC,EAAR;;AACA,wBAAI,CAACnM,SAAL,CAAehE,OAAf,CAAuB,UAAAoQ,OAAO,EAAI;AAC/BD,qBAAG,CAAC3T,IAAJ,CAAS4T,OAAO,CAAChb,UAAjB;AACF,iBAFD;;AAGA,wBAAI,CAAC6O,iBAAL,GAAuBkM,GAAvB;;AAEA,wBAAI,CAAC5Q,OAAL,CAAa,QAAI,CAAC0E,iBAAL,CAAuBiC,QAAvB,EAAb;AAED,eAZD;AAcD,aAnBD;AAqBD;AA3EoC;AAAA;AAAA,iBA4ErC,8BAAsC;AAAA,gBAAnB9U,IAAmB,uEAAJ,IAAI;AACpC,gBAAImF,KAAK,GAAG,KAAKyN,SAAjB;;AACA,gBAAI5S,IAAJ,EAAU;AACRmF,mBAAK,GAAGA,KAAK,CAAClD,MAAN,CAAa,UAAAgd,CAAC;AAAA,uBAAIA,CAAC,CAAChf,IAAF,CAAOif,iBAAP,GAA2B/S,OAA3B,CAAmCnM,IAAI,CAACkf,iBAAL,EAAnC,IAA+D,CAAC,CAApE;AAAA,eAAd,CAAR;AACD;;AACD,mBAAO,gDAAG/Z,KAAH,EAAU1D,IAAV,CAAe,6DAAM,GAAN,CAAf,CAAP;AACD;AAlFoC;AAAA;AAAA,iBAmFrC,kBAAS;AAEP,iBAAK0M,OAAL,CAAa,KAAK0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD;AAtFoC;;AAAA;AAAA,S;;;;gBAZ9B;;gBAHA;;gBAEA;;gBAMA;;gBAPA;;;;;;gBAiBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAaT,0D;AAAY,iBAAC,wFAAD;;;gBACZ,uD;AAAS,iBAAC,aAAD;;;AAjBCqK,gCAA0B,eANtC,gEAAU;AACTjhB,gBAAQ,EAAE,uBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sIAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAMsC,E,iCAkBT,6E,EACf,0F,EACA,0E,EACU,0E,EACN,sD,EAtBoB,GAA1BoQ,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAE,oBAAoB;AAc/B,sCAAmBzR,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSsF,YAHT,EAISzF,MAJT,EAIyB;AAAA;;AAJN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAsF,YAAA,GAAAA,YAAA;AACA,eAAAzF,MAAA,GAAAA,MAAA;AAZT,eAAAwK,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AAGA,eAAAsb,YAAA,GAAoC,EAApC;AAQE,eAAKjJ,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD,CADuB,CAEvB;;AAGA,eAAK4X,aAAL;AACD;;AAxB8B;AAAA;AAAA,iBA0B/B,oBAAW,CAEV;AA5B8B;AAAA;AAAA,iBA8B/B,iBAAQa,UAAR,EAAoB;AAAA;;AAClB,iBAAK3R,OAAL,CAAa4R,cAAb,CAA4B,KAAKnJ,aAAjC,EAAgDkJ,UAAhD,EAA4D,KAAK/Q,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAA5D,EAAuG,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAAvG,EACGvB,SADH,CACa,UAACzB,GAAD,EAAc;AACvB,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AAEf,wBAAI,CAACwf,YAAL,GAAoBxf,GAApB;AACD,eAHD,MAKE,QAAI,CAACyI,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sBAA3B;AAEH,aATH,EASK,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAXH;AAYD;AA3C8B;AAAA;AAAA,iBA6C/B,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AA/C8B;AAAA;AAAA,iBAgD/B,wBAAY;AACV;AACA,iBAAKsC,YAAL,CAAkB+B,iBAAlB,CAAoC,KAAK0P,YAAzC,EAAuD,eAAvD;AACD;AAnD8B;AAAA;AAAA,iBAoD/B,yBAAgB;AAAA;;AACd,iBAAK1R,OAAL,CAAa8Q,aAAb,CAA2B,KAAKrI,aAAhC,EAA+C9U,SAA/C,CAAyD,UAACzB,GAAD,EAAc;AAErE,sBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,sBAAI,CAACkE,UAAL,GAAkB,QAAI,CAAC6a,gBAAvB;;AAEA,sBAAI,CAACC,kBAAL,GACCrd,IADD,CACM,2DAAI,UAAAwd,CAAC;AAAA,uBAAIA,CAAC,CAAChd,MAAF,CAAS,UAAAwd,CAAC;AAAA,yBAAI,CAACA,CAAC,CAACC,QAAP;AAAA,iBAAV,CAAJ;AAAA,eAAL,CADN,EAECne,SAFD,CAEW,UAACzB,GAAD,EAAS;AAClB,wBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,oBAAIif,GAAG,GAAC,EAAR;;AACA,wBAAI,CAACnM,SAAL,CAAehE,OAAf,CAAuB,UAAAoQ,OAAO,EAAI;AAC/BD,qBAAG,CAAC3T,IAAJ,CAAS4T,OAAO,CAAChb,UAAjB;AACF,iBAFD;;AAGA,wBAAI,CAAC6O,iBAAL,GAAuBkM,GAAvB;;AACA,wBAAI,CAAC5Q,OAAL,CAAa,QAAI,CAAC0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD,eAVD;AAYD,aAjBD;AAmBD;AAxE8B;AAAA;AAAA,iBAyE/B,8BAAsC;AAAA,gBAAnB9U,IAAmB,uEAAJ,IAAI;AACpC,gBAAImF,KAAK,GAAG,KAAKyN,SAAjB;;AACA,gBAAI5S,IAAJ,EAAU;AACRmF,mBAAK,GAAGA,KAAK,CAAClD,MAAN,CAAa,UAAAgd,CAAC;AAAA,uBAAIA,CAAC,CAAChf,IAAF,CAAOif,iBAAP,GAA2B/S,OAA3B,CAAmCnM,IAAI,CAACkf,iBAAL,EAAnC,IAA+D,CAAC,CAApE;AAAA,eAAd,CAAR;AACD;;AACD,mBAAO,gDAAG/Z,KAAH,EAAU1D,IAAV,CAAe,6DAAM,GAAN,CAAf,CAAP;AACD;AA/E8B;AAAA;AAAA,iBAgF/B,kBAAS;AAEP,iBAAK0M,OAAL,CAAa,KAAK0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD;AAnF8B;;AAAA;AAAA,S;;;;gBAZxB;;gBAHA;;gBAEA;;gBAMA;;gBAPA;;;;;;gBAiBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAST,0D;AAAY,iBAAC,wFAAD;;;gBACZ,uD;AAAS,iBAAC,aAAD;;;AAbCuK,0BAAoB,eANhC,gEAAU;AACTnhB,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,0HAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAMgC,E,iCAcH,6E,EACf,0F,EACA,0E,EACU,0E,EACN,sD,EAlBc,GAApBsQ,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAM,sBAAsB;AAcjC,wCAAmB/R,OAAnB,EACStF,EADT,EAESuF,YAFT,EAGStF,EAHT,EAISH,MAJT,EAIyB;AAAA;;AAJN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AAZT,eAAAwK,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AAGA,eAAA4b,aAAA,GAAuC,EAAvC;AAQE,eAAKvJ,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AAEA,eAAK4X,aAAL;AACD;;AAtBgC;AAAA;AAAA,iBAwBjC,oBAAW,CAEV;AA1BgC;AAAA;AAAA,iBA2BjC,wBAAY;AACV;AACA,iBAAK7Q,YAAL,CAAkB+B,iBAAlB,CAAoC,KAAKgQ,aAAzC,EAAwD,eAAxD;AACD;AA9BgC;AAAA;AAAA,iBA+BjC,iBAAQjB,SAAR,EAAmB;AAAA;;AAEjB,iBAAK/Q,OAAL,CAAaiS,gBAAb,CAA8B,KAAKxJ,aAAnC,EAAkDsI,SAAlD,EAA6D,KAAKnQ,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAA7D,EAAwG,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAAxG,EACGvB,SADH,CACa,UAACzB,GAAD,EAAc;AACvB,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AAEf,wBAAI,CAAC8f,aAAL,GAAqB9f,GAArB;AACD,eAHD,MAKE,QAAI,CAACyI,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sBAA3B;AAEH,aATH,EASK,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAXH;AAYD;AA7CgC;AAAA;AAAA,iBA+CjC,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AAjDgC;AAAA;AAAA,iBAmDjC,8BAAsC;AAAA,gBAAnBvL,IAAmB,uEAAJ,IAAI;AACpC,gBAAImF,KAAK,GAAG,KAAKyN,SAAjB;;AACA,gBAAI5S,IAAJ,EAAU;AACRmF,mBAAK,GAAGA,KAAK,CAAClD,MAAN,CAAa,UAAAgd,CAAC;AAAA,uBAAIA,CAAC,CAAChf,IAAF,CAAOif,iBAAP,GAA2B/S,OAA3B,CAAmCnM,IAAI,CAACkf,iBAAL,EAAnC,IAA+D,CAAC,CAApE;AAAA,eAAd,CAAR;AACD;;AACD,mBAAO,gDAAG/Z,KAAH,EAAU1D,IAAV,CAAe,6DAAM,GAAN,CAAf,CAAP;AACD;AAzDgC;AAAA;AAAA,iBA0DjC,kBAAS;AAEP,iBAAK0M,OAAL,CAAa,KAAK0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD;AA7DgC;AAAA;AAAA,iBA8DzB,yBAAgB;AAAA;;AACtB,iBAAKlH,OAAL,CAAa8Q,aAAb,CAA2B,KAAKrI,aAAhC,EAA+C9U,SAA/C,CAAyD,UAACzB,GAAD,EAAc;AAErE,sBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,sBAAI,CAACkE,UAAL,GAAkB,QAAI,CAAC6a,gBAAvB;;AAEA,sBAAI,CAACC,kBAAL,GACA;AADA,eAECvd,SAFD,CAEW,UAACzB,GAAD,EAAS;AAClB,wBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,oBAAIif,GAAG,GAAC,EAAR;;AACA,wBAAI,CAACnM,SAAL,CAAehE,OAAf,CAAuB,UAAAoQ,OAAO,EAAI;AAC/BD,qBAAG,CAAC3T,IAAJ,CAAS4T,OAAO,CAAChb,UAAjB;AACF,iBAFD;;AAGA,wBAAI,CAAC6O,iBAAL,GAAuBkM,GAAvB;;AACA,wBAAI,CAAC5Q,OAAL,CAAa,QAAI,CAAC0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD,eAVD;AAYD,aAjBD;AAmBD;AAlFgC;;AAAA;AAAA,S;;;;gBAZ1B;;gBAHA;;gBAQA;;gBANA;;gBADA;;;;;;gBAiBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAST,0D;AAAY,iBAAC,wFAAD;;;gBACZ,uD;AAAS,iBAAC,aAAD;;;AAbC6K,4BAAsB,eANlC,gEAAU;AACTzhB,gBAAQ,EAAE,mBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,8HAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAMkC,E,iCAcL,6E,EACf,0F,EACU,0E,EACV,0E,EACI,sD,EAlBgB,GAAtB4Q,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDAG,sBAAsB;AAajC,wCAAmBlS,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSsF,YAHT,EAISzF,MAJT,EAIyB;AAAA;;AAJN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAsF,YAAA,GAAAA,YAAA;AACA,eAAAzF,MAAA,GAAAA,MAAA;AAVT,eAAApE,UAAA,GAAa,CAAb;AAGA,eAAA+b,aAAA,GAAuC,EAAvC;AAQE,eAAK1J,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AACA,eAAK+X,gBAAL,GAAwB,KAAKvW,EAAL,CAAQ0X,mBAAR,GAA8Bhc,UAAtD;AACD;;AApBgC;AAAA;AAAA,iBAsBjC,oBAAW;AACT,iBAAKmK,OAAL,CAAa,KAAK0Q,gBAAlB;AACA,iBAAKH,aAAL;AACD;AAzBgC;AAAA;AAAA,iBA0BjC,wBAAY;AACV,iBAAK7Q,YAAL,CAAkB+B,iBAAlB,CAAoC,KAAKmQ,aAAzC,EAAwD,eAAxD;AACD;AA5BgC;AAAA;AAAA,iBA6BjC,iBAAQpB,SAAR,EAAmB;AAAA;;AACjB,iBAAK/Q,OAAL,CAAa4R,cAAb,CAA4B,KAAKnJ,aAAjC,EAAgDsI,SAAhD,EAA2D,KAAKnQ,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAA3D,EAAsG,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAAtG,EACGvB,SADH,CACa,UAACzB,GAAD,EAAc;AACvB,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,wBAAI,CAAC2O,KAAL,GAAa3O,GAAb;AACD,eAFD,MAIE,QAAI,CAACyI,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sBAA3B;AAEH,aARH,EAQK,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAVH;AAWD;AAzCgC;AAAA;AAAA,iBA2CjC,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AA7CgC;AAAA;AAAA,iBA8CzB,yBAAgB;AAAA;;AACtB,iBAAKqC,OAAL,CAAa8Q,aAAb,CAA2B,KAAKrI,aAAhC,EAA+C9U,SAA/C,CAAyD,UAACzB,GAAD,EAAc;AAErE,sBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,sBAAI,CAACkE,UAAL,GAAgB,QAAI,CAAC6a,gBAArB;AACD,aAJD;AAKD;AApDgC;AAAA;AAAA,iBAqDjC,kBAAS;AACP,qBADO,CAEP;AACD;AAxDgC;;AAAA;AAAA,S;;;;gBAX1B;;gBAHA;;gBAEA;;gBAKA;;gBANA;;;;;;gBAgBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAQT,0D;AAAY,iBAAC,wFAAD;;;gBACZ,uD;AAAS,iBAAC,aAAD;;;AAZCiB,4BAAsB,eANlC,gEAAU;AACT5hB,gBAAQ,EAAE,mBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,8HAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAMkC,E,iCAaL,6E,EACf,0F,EACA,0E,EACU,0E,EACN,sD,EAjBgB,GAAtB+Q,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAG,gBAAgB;AAM3B,kCAAmBrS,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSsF,YAHT,EAISzF,MAJT,EAIyB;AAAA;;AAJN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAsF,YAAA,GAAAA,YAAA;AACA,eAAAzF,MAAA,GAAAA,MAAA;AATF,eAAA8X,MAAA,GAAS,IAAI,mEAAJ,EAAT;AAEP,2BAAO,EAAP;AAQE,eAAK7J,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AACD;;AAZ0B;AAAA;AAAA,iBAc3B,oBAAW;AACT,iBAAKqH,OAAL;AACD;AAhB0B;AAAA;AAAA,iBAiB3B,wBAAY;AAEV,iBAAKN,YAAL,CAAkB+B,iBAAlB,CAAoC,cAApC,EAAiD,eAAjD;AACD;AApB0B;AAAA;AAAA,iBAqB3B,mBAAU;AAAA;;AAER,iBAAKhC,OAAL,CAAauS,eAAb,CAA6B,KAAK9J,aAAlC,EAAiD,KAAK7H,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAAjD,EAA4F,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAA5F,EACGvB,SADH,CACa,UAACzB,GAAD,EAAc;AACvB,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,wBAAI,CAACogB,MAAL,GAAcpgB,GAAG,CAAC,CAAD,CAAjB;;AACA,wBAAI,UAAJ,CAAYsL,IAAZ,CAAiB,QAAI,CAAC8U,MAAtB;AACD,eAHD,MAKE,QAAI,CAAC3X,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sBAA3B;AAEH,aATH,EASK,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAXH;AAYD;AAnC0B;AAAA;AAAA,iBAoC3B,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AAtC0B;;AAAA;AAAA,S;;;;gBATpB;;gBAHA;;gBAEA;;gBAIA;;gBALA;;;;;;gBAgBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;AALC0U,sBAAgB,eAL5B,gEAAU;AACT/hB,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,kHAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAK4B,E,iCAMC,6E,EACf,0F,EACA,0E,EACU,0E,EACN,sD,EAVU,GAAhBkR,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAG,gBAAgB;AAW3B,kCAAmBxS,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAGwB;AAAA;;AAHL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AAEP,eAAK4F,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AAnB0B;AAAA;AAAA,iBAqB3B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAvB0B;AAAA;AAAA,iBAyB3B,mBAAU;AACR,iBAAKP,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA9B0B;AAAA;AAAA,iBAgC3B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AAzC0B;AAAA;AAAA,iBA2C3B,cAAKuiB,MAAL,EAAa;AACP,iBAAKjY,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,mBAAD,EAAsB+S,MAAtB,CAArB;AACL;AA7C0B;;AAAA;AAAA,S;;;;gBARpB;;gBAJA;;gBAGA;;gBAFA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AATFD,sBAAgB,eAN5B,gEAAU;AACTliB,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,2GAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAM4B,E,iCAWC,+E,EACf,0F,EACA,0E,EACG,sD,EAdW,GAAhBqR,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAE,qBAAqB;AAWhC,uCAAmB1S,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIUC,KAJV,EAIiC;AAAA;;AAJd,eAAAuF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAAC,KAAA,GAAAA,KAAA;AAdH,eAAA4M,KAAA,GAAQ,IAAI,4DAAJ,EAAR;AAEP,eAAArC,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AACO,eAAAsb,YAAA,GAAe,IAAI,kEAAJ,EAAf;AACA,eAAAiB,kBAAA,GAAqB,IAAI,mEAAJ,EAArB;AACA,eAAAC,iBAAA,GAAoB,IAAI,oEAAJ,EAApB;AAQL;AACA,eAAKnK,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AAED;;AAnB+B;AAAA;AAAA,iBAqBhC,oBAAW;AACT,iBAAKyM,gBAAL;AAED;AAxB+B;AAAA;AAAA,iBA0BhC,4BAAmB;AAAA;;AACjB,iBAAKlL,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACe,OAAL,CAAad,OAAb,CAAqBD,GAArB,EAA0B,QAAI,CAACwJ,aAA/B,EAA8C9U,SAA9C,CAAwD,UAAAzB,GAAG,EAAI;AAC7D;AACA;;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;AACD,iBAJD;AAKD;AACF,aATD;AAUD;AArC+B;AAAA;AAAA,iBAuChC,qBAAYmV,KAAZ,EAAmB3G,MAAnB,EAA2B;AAAA;;AACzB;AACA2G,iBAAK,CAAChL,QAAN,GAAiBqE,MAAjB,CAFyB,CAGzB;;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoByH,KAApB,EAA2B1T,SAA3B,CAAqC,UAAAhE,IAAI,EAAI;AAE3C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,wBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,wBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AApD+B;AAAA;AAAA,iBAqDxB,kBAAS5B,GAAT,EAAc;AACpB;AACA,iBAAKsJ,KAAL,GAAatJ,GAAG,CAACsJ,KAAjB;AACA,iBAAKqK,YAAL,GAAoB3T,GAAG,CAAC2T,YAAxB;AACA,iBAAKkB,iBAAL,GAAyB7U,GAAG,CAAC8U,cAA7B;AACA,iBAAKF,kBAAL,GAA0B5U,GAAG,CAAC+U,cAA9B;AACD;AA3D+B;;AAAA;AAAA,S;;;;gBAPzB;;gBALA;;gBAGA;;gBAFgB;;gBAAhB;;;;AAWIJ,2BAAqB,eANjC,gEAAU;AACTpiB,gBAAQ,EAAE,kBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,2HAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAMiC,E,iCAWJ,6E,EACf,0F,EACA,0E,EACI,sD,EACA,8D,EAfe,GAArBuR,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRAK,qBAAqB;AAEhC,yCAAc;AAAA;AAAG;;AAFe;AAAA;AAAA,iBAIhC,oBAAW,CAEV;AAN+B;;AAAA;AAAA,S;;;;;;AAArBA,2BAAqB,eAJjC,gEAAU;AACTziB,gBAAQ,EAAE,mBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAIiC,E,mCAAA,GAArBkT,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC4RAC,gBAAgB;AAI3B,kCAAmBC,WAAnB,EAAsDjT,OAAtD,EACSrF,EADT,EAESH,MAFT,EAEyB;AAAA;;AAFN,eAAAyY,WAAA,GAAAA,WAAA;AAAmC,eAAAjT,OAAA,GAAAA,OAAA;AAC7C,eAAArF,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AAHT,eAAA0Y,OAAA,GAAe,EAAf;AAG2B;;AANA;AAAA;AAAA,iBAS3B,qBAAY7L,KAAZ,EAAmB3G,MAAnB,EAA2B;AAAA;;AACzB;AACA2G,iBAAK,CAAChL,QAAN,GAAiBqE,MAAjB,CAFyB,CAGzB;;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoByH,KAApB,EAA2B1T,SAA3B,CAAqC,UAAAhE,IAAI,EAAI;AAE3C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,wBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,wBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AAtB0B;;AAAA;AAAA,S;;;;gBAjSpB;;gBACA;;gBACA;;gBACgB;;;;;;gBAgStB;;;AAFUqT,sBAAgB,eA7R5B,gEAAU;AAET1iB,gBAAQ,EAAE,kBAFD;AAGT;AACAuP,gBAAQ;AAJC,OAAV,CA6R4B,E,iCAIK,yE,EAA+B,6E,EAClD,0E,EACI,sD,EANU,GAAhBmT,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxQAG,eAAe;AAmB1B,iCAAmBnT,OAAnB,EAAkDoT,YAAlD,EACS1Y,EADT,EAESuF,YAFT,EAGStF,EAHT,EAKSH,MALT,EAKyB;AAAA;;AALN,eAAAwF,OAAA,GAAAA,OAAA;AAA+B,eAAAoT,YAAA,GAAAA,YAAA;AACzC,eAAA1Y,EAAA,GAAAA,EAAA;AACA,eAAAuF,YAAA,GAAAA,YAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AAEA,eAAAH,MAAA,GAAAA,MAAA;AAjBT,eAAAwK,SAAA,GAAwB,EAAxB;AACA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAA7O,UAAA,GAAa,CAAb;AAMA,eAAAid,WAAA,GAAwB,EAAxB;AAUE,eAAKjT,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAGA,eAAKoI,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AACA,eAAK4X,aAAL;AACD;;AA/ByB;AAAA;AAAA,iBAiC1B,cAAK3X,MAAL,EAAa;AAAA;;AAGX,iBAAK6G,OAAL,CAAad,OAAb,CAAqB/F,MAArB,EAA6B,KAAKsP,aAAlC,EAAiD9U,SAAjD,CAA2D,UAAAzB,GAAG,EAAI;AAChElD,qBAAO,CAACC,GAAR,CAAYiD,GAAZ;;AACA,kBAAMohB,QAAQ,GAAG,QAAI,CAACF,YAAL,CAAkB1L,IAAlB,CAAuB,mGAAvB,CAAjB;;AACA4L,sBAAQ,CAACC,iBAAT,CAA2BL,OAA3B,GAAqChhB,GAArC;AACD,aAJD;AAKD;AAzCyB;AAAA;AAAA,iBA2C1B,qBAAYmV,KAAZ,EAAmB3G,MAAnB,EAA2B;AAAA;;AACzB;AACA2G,iBAAK,CAAChL,QAAN,GAAiBqE,MAAjB,CAFyB,CAGzB;;AACA,iBAAKV,OAAL,CAAaJ,MAAb,CAAoByH,KAApB,EAA2B1T,SAA3B,CAAqC,UAAAhE,IAAI,EAAI;AAE3C,kBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,wBAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,wBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,aAND,EAMG,UAAAtF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aARD;AASD;AAxDyB;AAAA;AAAA,iBAyD1B,oBAAW,CACV;AA1DyB;AAAA;AAAA,iBA4D1B,iBAAQoR,SAAR,EAAmB;AAEjB,iBAAK/Q,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B,EAA4CsI,SAA5C,EAAuD,KAAKnQ,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAAvD,EAAkG,KAAK2L,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAAlG;AACA,iBAAK2L,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAlEyB;AAAA;AAAA,iBAoE1B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA7EyB;AAAA;AAAA,iBA+E1B,cAAKiJ,MAAL,EAAa;AACX,iBAAKqB,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,mBAAD,EAAsBvG,MAAtB,CAArB;AACD;AAjFyB;AAAA;AAAA,iBAkF1B,eAAM8F,GAAN,EAAW;AAAA;;AACT,iBAAKe,OAAL,CAAasH,UAAb,CAAwBrI,GAAxB,EAA6B,KAAKwJ,aAAlC,EAAiD9U,SAAjD,CAA2D,UAACzB,GAAD,EAAc;AACvE;AAEA,kBAAIA,GAAG,CAACwO,MAAJ,IAAc,CAAlB,EAAqB;AACnB,wBAAI,CAAC6G,QAAL,CAAcrV,GAAG,CAACsV,IAAlB;AACD,eAFD,MAIE,QAAI,CAAC7M,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,kBAA3B;AACH,aARD;AASD;AA5FyB;AAAA;AAAA,iBA6F1B,mBAAU5B,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AA/FyB;AAAA;AAAA,iBAiG1B,yBAAgB;AAAA;;AACd,iBAAKqC,OAAL,CAAa8Q,aAAb,CAA2B,KAAKrI,aAAhC,EAA+C9U,SAA/C,CAAyD,UAACzB,GAAD,EAAc;AAErE,sBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,sBAAI,CAACkE,UAAL,GAAkB,QAAI,CAAC6a,gBAAvB;;AAEA,sBAAI,CAACC,kBAAL,GACGrd,IADH,CACQ,2DAAI,UAAAwd,CAAC;AAAA,uBAAIA,CAAC,CAAChd,MAAF,CAAS,UAAAwd,CAAC;AAAA,yBAAI,CAACA,CAAC,CAACC,QAAP;AAAA,iBAAV,CAAJ;AAAA,eAAL,CADR,EAEGne,SAFH,CAEa,UAACzB,GAAD,EAAS;AAClB,wBAAI,CAAC8S,SAAL,GAAiB9S,GAAjB;AACA,oBAAIif,GAAG,GAAG,EAAV;;AACA,wBAAI,CAACnM,SAAL,CAAehE,OAAf,CAAuB,UAAAoQ,OAAO,EAAI;AAChCD,qBAAG,CAAC3T,IAAJ,CAAS4T,OAAO,CAAChb,UAAjB;AACD,iBAFD;;AAGA,wBAAI,CAAC6O,iBAAL,GAAyBkM,GAAzB;;AAEA,wBAAI,CAAC5Q,OAAL,CAAa,QAAI,CAAC0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD,eAXH;AAaD,aAlBD;AAoBD;AAtHyB;AAAA;AAAA,iBAuH1B,8BAAsC;AAAA,gBAAnB9U,IAAmB,uEAAJ,IAAI;AACpC,gBAAImF,KAAK,GAAG,KAAKyN,SAAjB;;AACA,gBAAI5S,IAAJ,EAAU;AACRmF,mBAAK,GAAGA,KAAK,CAAClD,MAAN,CAAa,UAAAgd,CAAC;AAAA,uBAAIA,CAAC,CAAChf,IAAF,CAAOif,iBAAP,GAA2B/S,OAA3B,CAAmCnM,IAAI,CAACkf,iBAAL,EAAnC,IAA+D,CAAC,CAApE;AAAA,eAAd,CAAR;AACD;;AACD,mBAAO,gDAAG/Z,KAAH,EAAU1D,IAAV,CAAe,6DAAM,GAAN,CAAf,CAAP;AACD;AA7HyB;AAAA;AAAA,iBA8H1B,kBAAS;AAEP,iBAAK0M,OAAL,CAAa,KAAK0E,iBAAL,CAAuBiC,QAAvB,EAAb;AACD;AAjIyB;AAAA;AAAA,iBAkI1B,kBAASM,IAAT,EAAe;AAEb,gBAAIC,SAAS,GAAGtb,MAAM,CAACub,IAAP,CAAY,OAAZ,CAAhB;AACAD,qBAAS,CAACE,QAAV,CAAmBC,KAAnB,CAAyBJ,IAAzB;AACAC,qBAAS,CAACI,KAAV;AACD;AAvIyB;;AAAA;AAAA,S;;;;gBAnBnB;;gBASgB;;gBAbhB;;gBAQA;;gBALA;;gBAFA;;;;;;gBAiCN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBAMT,0D;AAAY,iBAAC,wFAAD;;;gBACZ,uD;AAAS,iBAAC,aAAD;;;AAlBCsL,qBAAe,eAN3B,gEAAU;AACT7iB,gBAAQ,EAAE,YADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,+GAFS;AAGTsB,iBAAS,EAAE,CAAC,0EAAD;AAHF,OAAV,CAM2B,E,iCAmBE,6E,EAAoC,oE,EACnD,0F,EACU,0E,EACV,0E,EAEI,sD,EAxBS,GAAfgS,eAAe,CAAf;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFK,qBAAqB;AAYhC,uCACUjZ,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMU8Y,gBANV,EAM4C;AAAA;;AALlC,eAAAlZ,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAA8Y,gBAAA,GAAAA,gBAAA;AAhBV,eAAA5Y,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAtB+B;AAAA;AAAA,iBAwBhC,oBAAW;AACR,iBAAKiQ,mBAAL;AACF;AA1B+B;AAAA;AAAA,eA4BhC,eAAQ;AAAE,mBAAO,KAAKqI,aAAL,CAAmB9X,QAA1B;AAAqC;AA5Bf;AAAA;AAAA,iBA8BxB,sBAAa;AACnB,iBAAK8X,aAAL,GAAqB,KAAKnZ,WAAL,CAAiBsB,KAAjB,CAAuB;AAC1C8O,yBAAW,EAAE,CAD6B;AAE1CtY,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAFoC;AAG1C2F,wBAAU,EAAC,CAAC,EAAD,CAH+B;AAI1CrF,sBAAQ,EAAE,CAAC,IAAD,CAJgC;AAK1CuF,mBAAK,EAAE,CAAC,EAAD;AALmC,aAAvB,CAArB;AAOD;AAtC+B;AAAA;AAAA,iBAwCxB,kBAAS7D,GAAT,EAAc;AACpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOyM,WAAP,CAAmBxM,QAAnB,CAA4BJ,GAAG,CAAC4M,WAAhC;AACA,iBAAKzM,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AA/C+B;AAAA;AAAA,iBAiDhC,+BAAsB;AAAA;;AACpB;AACA,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAAClN,CAAL,CAAOyM,WAAP,CAAmBxM,QAAnB,CAA4Bc,GAA5B;;AACA,wBAAI,CAACwU,gBAAL,CAAsBvU,OAAtB,CAA8BD,GAA9B,EAAmCtL,SAAnC,CAA6C,UAAAzB,GAAG,EAAI;AAClD;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA/D+B;AAAA;AAAA,iBAiEhC,oBAAW;AAAA;;AACT;AACA,iBAAKsI,aAAL,CAAmBrU,gBAAnB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK6Y,aAAL,CAAmBpU,OAAvB,EAAgC;AAAE;AAAS;;AAC3C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAGA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOyM,WAAP,CAAmBlS,KAApB,CAAR,KAAuC,CAA3C,EAA8C;AAC5C;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK2b,aAAL,CAAmBjb,KAAlC,CAAZ;AACA,mBAAKgb,gBAAL,CAAsBjU,MAAtB,CAA6B,KAAKkU,aAAL,CAAmBjb,KAAhD,EAAuD9E,SAAvD,CAAiE,UAAAhE,IAAI,EAAI;AACvE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAbD,MAaO;AACL;AACA,mBAAK2Y,gBAAL,CAAsB7T,MAAtB,CAA6B,KAAK8T,aAAL,CAAmBjb,KAAhD,EAAuD9E,SAAvD,CAAiE,UAAAhE,IAAI,EAAI;AACvE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AArG+B;;AAAA;AAAA,S;;;;gBAbd;;gBAEX;;gBAAQ;;gBACR;;gBACA;;gBACA;;;;;;gBAmBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAXC0Y,2BAAqB,eALjC,gEAAU;AACTljB,gBAAQ,EAAE,kBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,wIAFS;;;;AAAA,OAAV,CAKiC,E,iCAaT,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACe,mF,EAlBI,GAArB2T,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBFG,kBAAkB;AAY7B,oCAAmB3T,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIU0F,yBAJV,EAIgE;AAAA;;AAC9D;AALiB,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAGR,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AAtB4B;AAAA;AAAA,iBAwB7B,oBAAW;AACT,iBAAKE,OAAL;AACD;AA1B4B;AAAA;AAAA,iBA2BhB,gCAAuB1B,IAAvB,EAA6B;;;;;;;AACxC;;AAEK,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAE5G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAGA,GAAG,IAAE,CAAR,EAAU;AACR,gCAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,gCAAI,CAACc,OAAL;AACD,uBAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,8BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,qBAVD;;;;;;;;;;AAaL;AA7C4B;AAAA;AAAA,iBA8C7B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAnD4B;AAAA;AAAA,iBAqD7B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA9D4B;AAAA;AAAA,iBAgE7B,cAAKwa,SAAL,EAAgB;AACd;AACI,iBAAKlQ,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,sBAAD,EAAyBgL,SAAzB,CAArB;AACL;AAnE4B;AAAA;AAAA,iBAqE7B,gBAAO3M,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,aAVD;AAWD;AAjF4B;;AAAA;AAAA,S;;;;gBATtB;;gBANA;;gBAGA;;gBAFA;;gBAMA;;;;;;gBAiBN,0D;AAAY,iBAAC,wFAAD;;;AATFgU,wBAAkB,eAN9B,gEAAU;AACTrjB,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,wHAFS;;;;AAAA,OAAV,CAM8B,E,iCAYD,mF,EACf,0F,EACA,0E,EACG,sD,EACqB,8F,EAhBR,GAAlB8T,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFC,oBAAoB;AAK/B,sCACSjZ,EADT,EAEUkZ,iBAFV,EAGUrZ,MAHV,EAIUC,KAJV,EAKUF,WALV,EAMUG,EANV,EAMiC;AAAA;;AALxB,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAkZ,iBAAA,GAAAA,iBAAA;AACA,eAAArZ,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAG,EAAA,GAAAA,EAAA;AAVV,eAAAG,SAAA,GAAY,KAAZ;AAEA,eAAAoT,eAAA,GAAkB,KAAlB;AACA,eAAAnT,OAAA,GAAU,KAAV;AASI,eAAKM,UAAL;;AAEAlC,iBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA3B;;AACT,eAAKgV,mBAAL;AACH;;AAjB8B;AAAA;AAAA,iBAmB/B,oBAAQ,CACP;AApB8B;AAAA;AAAA,eAwB/B,eAAQ;AAAE,mBAAO,KAAKC,YAAL,CAAkBvS,QAAzB;AAAoC;AAxBf;AAAA;AAAA,iBA0BvB,sBAAa;AAEnB,iBAAKuS,YAAL,GAAoB,KAAK5T,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCiY,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW/X,QAAhB,CAD6B;AAEzCgY,2BAAa,EAAE,CAAC,EAAD,CAF0B;AAGzCC,0BAAY,EAAE,CAAC,EAAD,CAH2B;AAIzC3X,sBAAQ,EAAE,CAAC,IAAD,CAJ+B;AAKzC4X,wBAAU,EAAE,CAAC,EAAD,CAL6B;AAMzCC,wBAAU,EAAC,CAAC,EAAD,CAN8B;AAOzCC,sBAAQ,EAAE,CAP+B;AAQzCC,iCAAmB,EAAC,CAAC,EAAD,CARqB;AASzClb,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OATK;AAUzCmb,gBAAE,EAAE,CAVqC;AAWzCC,uBAAS,EAAE,CAX8B;AAYzCC,4BAAc,EAAC,CAAC,EAAD,CAZ0B;AAazCC,sBAAQ,EAAC,CAAC,EAAD,CAbgC;AAczCC,qBAAO,EAAC,CAAC,EAAD,CAdiC;AAezCC,uBAAS,EAAC,CAAC,EAAD;AAf+B,aAAvB,CAApB;AAiBD;AA7C8B;AAAA;AAAA,iBA+CvB,kBAAS3W,GAAT,EAAc;AACxB;AACI,iBAAKG,CAAL,CAAO4V,UAAP,CAAkB3V,QAAlB,CAA2BJ,GAAG,CAAC+V,UAA/B;AACA,iBAAK5V,CAAL,CAAO6V,aAAP,CAAqB5V,QAArB,CAA8BJ,GAAG,CAACgW,aAAlC;AACA,iBAAK7V,CAAL,CAAO8V,YAAP,CAAoB7V,QAApB,CAA6BJ,GAAG,CAACiW,YAAjC;AACA,iBAAK9V,CAAL,CAAO+V,UAAP,CAAkB9V,QAAlB,CAA2BJ,GAAG,CAACkW,UAA/B;AACA,iBAAK/V,CAAL,CAAOiW,QAAP,CAAgBhW,QAAhB,CAAyBJ,GAAG,CAACoW,QAA7B;AACA,iBAAKjW,CAAL,CAAOkW,mBAAP,CAA2BjW,QAA3B,CAAoCJ,GAAG,CAACqW,mBAAxC;AACA,iBAAKlW,CAAL,CAAOgW,UAAP,CAAkB/V,QAAlB,CAA2BJ,GAAG,CAACmW,UAA/B;AACA,iBAAKhW,CAAL,CAAOqW,cAAP,CAAsBpW,QAAtB,CAA+BJ,GAAG,CAACwW,cAAnC;AACA,iBAAKrW,CAAL,CAAOsW,QAAP,CAAgBrW,QAAhB,CAAyBJ,GAAG,CAACyW,QAA7B;AACA,iBAAKtW,CAAL,CAAOuW,OAAP,CAAetW,QAAf,CAAwBJ,GAAG,CAAC0W,OAA5B;AACA,iBAAKvW,CAAL,CAAOwW,SAAP,CAAiBvW,QAAjB,CAA0BJ,GAAG,CAAC2W,SAA9B;AACA,iBAAKxW,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAK6B,CAAL,CAAOmW,EAAP,CAAUlW,QAAV,CAAmBJ,GAAG,CAACvP,EAAvB;AACA,iBAAK0P,CAAL,CAAOyW,SAAP,CAAiBxW,QAAjB,CAA0BJ,GAAG,CAAC4W,SAA9B;AACD;AA/D8B;AAAA;AAAA,iBAiE/B,+BAAsB;AAAA;;AAEpB,iBAAK1G,eAAL,GAAuB,IAAvB;AACA,iBAAK4F,iBAAL,CAAuB3U,OAAvB,CAA+B,KAAKhB,CAAL,CAAOhF,OAAP,CAAeT,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAzB,GAAG,EAAI;AACpE;AACA,sBAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,sBAAI,CAAC+b,eAAL,GAAuB,KAAvB;AACD,aAJD;AAKD;AAzE8B;AAAA;AAAA,iBA0E/B,oBAAW;AAAA;;AACT,iBAAKE,YAAL,CAAkB9O,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKsT,YAAL,CAAkB7O,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA;;AACA,gBAAI8G,QAAQ,CAAC,KAAKrB,CAAL,CAAOmW,EAAP,CAAU5b,KAAX,CAAR,KAA8B,CAAlC,EAAqC;AACnC;AACA,mBAAKob,iBAAL,CAAuBrU,MAAvB,CAA8B,KAAK2O,YAAL,CAAkB1V,KAAhD,EAAuD9E,SAAvD,CAAiE,UAAAhE,IAAI,EAAI;AACvE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAWD,aAbD,MAaO;AACL;AACA,mBAAK+Y,iBAAL,CAAuBjU,MAAvB,CAA8B,KAAKuO,YAAL,CAAkB1V,KAAhD,EAAuD9E,SAAvD,CAAiE,UAAAhE,IAAI,EAAI;AACvE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA3G8B;;AAAA;AAAA,S;;;;gBAVxB;;gBACA;;gBACgB;;gBAAhB;;gBAHA;;gBAIA;;;;AAOI8Y,0BAAoB,eALhC,gEAAU;AACTtjB,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,4HAFS;;;;AAAA,OAAV,CAKgC,E,iCAMlB,0E,EACgB,qF,EACX,sD,EACD,8D,EACM,0D,EACT,0F,EAXiB,GAApB+T,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFgB,kBAAkB;AAY7B,oCACUra,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUka,aANV,EAMsC;AAAA;;AAL5B,eAAAta,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAka,aAAA,GAAAA,aAAA;AAhBV,eAAAha,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAtB4B;AAAA;AAAA,iBAwB7B,oBAAW;AACT,iBAAKiQ,mBAAL;AACD;AA1B4B;AAAA;AAAA,eA4B7B,eAAQ;AAAE,mBAAO,KAAKyJ,UAAL,CAAgBlZ,QAAvB;AAAkC;AA5Bf;AAAA;AAAA,iBA8BrB,sBAAa;AACnB,iBAAKkZ,UAAL,GAAkB,KAAKva,WAAL,CAAiBsB,KAAjB,CAAuB;AACvCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADiC;AAEvCE,yBAAW,EAAE,CAAC,EAAD,CAF0B;AAGvCI,sBAAQ,EAAE,CAAC,IAAD,CAH6B;AAIvC0Y,sBAAQ,EAAE,CAJ6B;AAKvCnT,mBAAK,EAAE,CAAC,EAAD,CALgC;AAMvC1I,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OANG;AAOvC9C,wBAAU,EAAE;AAP2B,aAAvB,CAAlB;AASD;AAxC4B;AAAA;AAAA,iBA0CrB,kBAAS2H,GAAT,EAAc;AACpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAO6W,QAAP,CAAgB5W,QAAhB,CAAyBJ,GAAG,CAACgX,QAA7B;AACA,iBAAK7W,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAjD4B;AAAA;AAAA,iBAmD7B,+BAAsB;AAAA;;AACpB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAAClN,CAAL,CAAO6W,QAAP,CAAgB5W,QAAhB,CAAyBc,GAAzB;;AACA,wBAAI,CAAC4V,aAAL,CAAmB3V,OAAnB,CAA2BD,GAA3B,EAAgC,QAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAA/C,EAAsD9E,SAAtD,CAAgE,UAAAzB,GAAG,EAAI;AACrE;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAhE4B;AAAA;AAAA,iBAkE7B,oBAAW;AAAA;;AACT,iBAAK0J,UAAL,CAAgBzV,gBAAhB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKia,UAAL,CAAgBxV,OAApB,EAA6B;AAAE;AAAS;;AACxC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAEA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAO6W,QAAP,CAAgBtc,KAAjB,CAAR,KAAoC,CAAxC,EAA2C;AACzC;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK+c,UAAL,CAAgBrc,KAA/B,CAAZ;AACA,mBAAKoc,aAAL,CAAmBrV,MAAnB,CAA0B,KAAKsV,UAAL,CAAgBrc,KAA1C,EAAiD9E,SAAjD,CAA2D,UAAAhE,IAAI,EAAI;AACjE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAbD,MAaO;AACL;AACA,mBAAK+Z,aAAL,CAAmBjV,MAAnB,CAA0B,KAAKkV,UAAL,CAAgBrc,KAA1C,EAAiD9E,SAAjD,CAA2D,UAAAhE,IAAI,EAAI;AACjE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AApG4B;;AAAA;AAAA,S;;;;gBAZX;;gBAEX;;gBAAQ;;gBACR;;gBAEA;;gBADA;;;;;;gBAmBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAXC8Z,wBAAkB,eAL9B,gEAAU;AACTtkB,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,+HAFS;;;;AAAA,OAAV,CAK8B,E,iCAaN,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACY,6E,EAlBI,GAAlB+U,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,eAAe;AAW1B,iCAAmBhV,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAGwB;AAAA;;AAHL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACN,eAAKiO,aAAL,GAAoB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA/C;AAED,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AApByB;AAAA;AAAA,iBAsB1B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAxByB;AAAA;AAAA,iBA0B1B,mBAAU;AACR,iBAAKP,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA/ByB;AAAA;AAAA,iBAiC1B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA1CyB;AAAA;AAAA,iBA4C1B,cAAKuiB,MAAL,EAAa;AACP,iBAAKjY,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,mBAAD,EAAsB+S,MAAtB,CAArB;AACL;AA9CyB;AAAA;AAAA,iBAgD1B,gBAAO1U,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,aAVD;AAWD;AA5DyB;;AAAA;AAAA,S;;;;gBARnB;;gBAJA;;gBAGA;;gBAFA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AATFqV,qBAAe,eAN3B,gEAAU;AACT1kB,gBAAQ,EAAE,YADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,kHAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAM2B,E,iCAWE,6E,EACf,0F,EACA,0E,EACG,sD,EAdU,GAAf6T,eAAe,CAAf;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFC,gBAAgB;AAO5B,kCAAoBhC,WAApB,EAAiD;AAAA;;AAA7B,eAAAA,WAAA,GAAAA,WAAA;AAAgC;;AAPxB;AAAA;AAAA,iBAS3B,oBAAQ,CACP;AAV0B;AAAA;AAAA,iBAYpB,mBAAU;AACf,iBAAKA,WAAL,CAAiBiC,KAAjB,CAAuB,KAAvB;AACD;AAd0B;AAAA;AAAA,iBAgBpB,kBAAS;AACd,iBAAKjC,WAAL,CAAiBiC,KAAjB,CAAuB,IAAvB;AACD;AAlB0B;AAAA;AAAA,iBAoBpB,mBAAU;AACf,iBAAKjC,WAAL,CAAiBkC,OAAjB;AACD;AAtB0B;;AAAA;AAAA,S;;;;gBAPpB;;;;;;gBASN;;;gBACA;;;gBACA;;;gBACA;;;AALUF,sBAAgB,eAL5B,gEAAU;AACT3kB,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,oHAFS;;;;AAAA,OAAV,CAK4B,E,iCAOK,yE,EAPL,GAAhBoV,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCPb;;;UAOaG,yBAAyB;AAEpC,2CAAoBhC,YAApB,EAA4C;AAAA;;AAAxB,eAAAA,YAAA,GAAAA,YAAA;AAA2B;;AAFX;AAAA;AAAA,iBAI7B,iBACLre,KADK,EAELhI,OAFK,EAKuB;AAAA,gBAF5BsoB,SAE4B,uEAFR,IAEQ;AAAA,gBAD5BC,aAC4B,uEADJ,QACI;AAAA,gBAA5BC,UAA4B,uEAAJ,IAAI;AAC5B,gBAAMjC,QAAQ,GAAG,KAAKF,YAAL,CAAkB1L,IAAlB,CAAuB,mEAAvB,EAAyC;AAAErK,kBAAI,EAAEkY;AAAR,aAAzC,CAAjB;AACAjC,oBAAQ,CAACC,iBAAT,CAA2Bxe,KAA3B,GAAmCA,KAAnC;AACAue,oBAAQ,CAACC,iBAAT,CAA2BxmB,OAA3B,GAAqCA,OAArC;AACAumB,oBAAQ,CAACC,iBAAT,CAA2B8B,SAA3B,GAAuCA,SAAvC;AACA/B,oBAAQ,CAACC,iBAAT,CAA2B+B,aAA3B,GAA2CA,aAA3C;AAEA,mBAAOhC,QAAQ,CAACvf,MAAhB;AACD;AAjBmC;;AAAA;AAAA,S;;;;gBAL7B;;;;AAKIqhB,+BAAyB,eADrC,kEACqC,E,iCAEF,mE,EAFE,GAAzBA,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACRb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFI,iBAAiB;AAW5B,mCAAmBxV,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAGwB;AAAA;;AAHL,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACN,eAAKiO,aAAL,GAAoB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAA/C;AAED,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AApB2B;AAAA;AAAA,iBAsB5B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAxB2B;AAAA;AAAA,iBA0B5B,mBAAU;AACR,iBAAKP,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA/B2B;AAAA;AAAA,iBAiC5B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA1C2B;AAAA;AAAA,iBA4C5B,cAAKulB,QAAL,EAAe;AACT,iBAAKjb,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwB+V,QAAxB,CAArB;AACL;AA9C2B;AAAA;AAAA,iBAgD5B,gBAAO1X,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAGA,GAAG,IAAE,CAAR,EAAU;AACR,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,aAVD;AAWD;AA5D2B;;AAAA;AAAA,S;;;;gBAPrB;;gBAJA;;gBAGA;;gBAFA;;;;;;gBAmBN,0D;AAAY,iBAAC,wFAAD;;;AATF6V,uBAAiB,eAL7B,gEAAU;AACTllB,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sHAFS;;;;AAAA,OAAV,CAK6B,E,iCAWA,iF,EACf,0F,EACA,0E,EACG,sD,EAdY,GAAjB2V,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAE,oBAAoB;AAmB/B,sCACUnb,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUgb,eANV,EAOU/M,eAPV,EAO2C;AAAA;;AANjC,eAAArO,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAgb,eAAA,GAAAA,eAAA;AACA,eAAA/M,eAAA,GAAAA,eAAA;AAxBV,eAAA/N,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAGA,eAAAya,YAAA,GAAe,EAAf;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAC,QAAA,GAAW;AAAEC,gBAAI,EAAE,IAAIlmB,IAAJ,GAAWmmB,QAAX,EAAR;AAA+BC,kBAAM,EAAE,IAAIpmB,IAAJ,GAAWqmB,UAAX;AAAvC,WAAX;AACA,eAAAC,MAAA,GAAS;AAAEJ,gBAAI,EAAE,IAAIlmB,IAAJ,GAAWmmB,QAAX,EAAR;AAA+BC,kBAAM,EAAE,IAAIpmB,IAAJ,GAAWqmB,UAAX;AAAvC,WAAT;AAiBE,eAAK9a,UAAL;AACA,eAAK0V,aAAL;AACD;;AA/B8B;AAAA;AAAA,iBAiC/B,oBAAW;AACT,iBAAKzF,mBAAL;AACD;AAnC8B;AAAA;AAAA,eAqC/B,eAAQ;AAAE,mBAAO,KAAK+K,YAAL,CAAkBxa,QAAzB;AAAoC;AArCf;AAAA;AAAA,iBAuCvB,sBAAa;AACnB;AACA,iBAAKwa,YAAL,GAAoB,KAAK7b,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCwa,wBAAU,EAAE,CAD6B;AAEzChkB,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAFmC;AAGzCE,yBAAW,EAAE,CAAC,EAAD,CAH4B;AAIzCyF,wBAAU,EAAE,CAAC,EAAD,CAJ6B;AAKzCxF,+BAAiB,EAAE,CAAC,EAAD,CALsB;AAMzChH,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAW6G,QAAhB,CANiC;AAOzCoa,oBAAM,EAAE,CAAC,EAAD,CAPiC;AAQzClhB,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW8G,QAAhB,CAR+B;AASzC+Z,sBAAQ,EAAE,CAAC,EAAD,CAT+B;AAUzCzZ,sBAAQ,EAAE,CAAC,IAAD,CAV+B;AAWzCuF,mBAAK,EAAE,CAAC,EAAD,CAXkC;AAYzC0U,yBAAW,EAAE,CAAC,EAAD,CAZ4B;AAazClgB,wBAAU,EAAE,CAAC,IAAD,CAb6B;AAczCiC,uBAAS,EAAE;AAd8B,aAAvB,CAApB;AAgBD;AAzD8B;AAAA;AAAA,iBA2DvB,kBAAS0F,GAAT,EAAc;AACpB;AACA,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACA,iBAAKxD,CAAL,CAAOmY,UAAP,CAAkBlY,QAAlB,CAA2BJ,GAAG,CAACsY,UAA/B;AACA,iBAAKnY,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOoY,WAAP,CAAmBnY,QAAnB,CAA4BJ,GAAG,CAACuY,WAAhC;AACA,iBAAKpY,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAOhC,iBAAP,CAAyBiC,QAAzB,CAAkCJ,GAAG,CAAC7B,iBAAtC;AACA,iBAAKgC,CAAL,CAAOiY,MAAP,CAAchY,QAAd,CAAuBJ,GAAG,CAACoY,MAA3B;AACA,iBAAKjY,CAAL,CAAO4X,QAAP,CAAgB3X,QAAhB,CAAyBJ,GAAG,CAAC+X,QAA7B;AACA,iBAAK5X,CAAL,CAAOjJ,QAAP,CAAgBkJ,QAAhB,CAAyBJ,GAAG,CAAC9I,QAA7B;AACA,iBAAKiJ,CAAL,CAAOhJ,MAAP,CAAciJ,QAAd,CAAuBJ,GAAG,CAAC7I,MAA3B;AACA,iBAAKgJ,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACA,iBAAK2U,MAAL,CAAYC,iBAAZ,GAAgCzY,GAAG,CAACuY,WAApC,CAfoB,CAgBpB;;AACA,iBAAKR,QAAL,GAAgB;AAAEC,kBAAI,EAAE,IAAIlmB,IAAJ,CAAS,cAAckO,GAAG,CAAC+X,QAA3B,EAAqCE,QAArC,EAAR;AAAyDC,oBAAM,EAAE,IAAIpmB,IAAJ,CAAS,cAAckO,GAAG,CAAC+X,QAA3B,EAAqCI,UAArC;AAAjE,aAAhB;AACA,iBAAKC,MAAL,GAAc;AAAEJ,kBAAI,EAAE,IAAIlmB,IAAJ,CAAS,cAAckO,GAAG,CAACoY,MAA3B,EAAmCH,QAAnC,EAAR;AAAuDC,oBAAM,EAAE,IAAIpmB,IAAJ,CAAS,cAAckO,GAAG,CAACoY,MAA3B,EAAmCD,UAAnC;AAA/D,aAAd;;AAEA,gBAAInY,GAAG,CAAC1F,SAAJ,IAAiB,EAArB,EAAyB;AACvB;AACA,kBAAIwO,eAAe,GAAG9I,GAAG,CAAC1F,SAA1B;AACA,mBAAKwd,kBAAL,GAA0BhP,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAA1B;AACA,mBAAK7I,CAAL,CAAO7F,SAAP,CAAiB8F,QAAjB,CAA0BJ,GAAG,CAAC1F,SAA9B;AACD;AACF;AArF8B;AAAA;AAAA,iBAuF/B,+BAAsB;AAAA;;AACpB;AACA,iBAAKoC,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAAClN,CAAL,CAAOmY,UAAP,CAAkBlY,QAAlB,CAA2Bc,GAA3B;;AACA,wBAAI,CAAC0W,eAAL,CAAqBzW,OAArB,CAA6BD,GAA7B,EAAkCtL,SAAlC,CAA4C,UAAAzB,GAAG,EAAI;AACjD;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AArG8B;AAAA;AAAA,iBAuGvB,yBAAgB;AAAA;;AACtB;AACA,iBAAKxC,eAAL,CAAqB6N,eAArB,GAAuC9iB,SAAvC,CAAiD,UAACzB,GAAD,EAAc;AAC7D,sBAAI,CAAC0jB,YAAL,GAAoB1jB,GAApB;AACD,aAFD;AAGD;AA5G8B;AAAA;AAAA,iBA8G/B,oBAAW;AAAA;;AACT;AACA,iBAAKkkB,YAAL,CAAkB/W,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;AACA,iBAAKqD,CAAL,CAAO4X,QAAP,CAAgB3X,QAAhB,CAAyB,KAAK2X,QAAL,CAAcC,IAAd,GAAqB,GAArB,GAA2B,KAAKD,QAAL,CAAcG,MAAlE;AACA,iBAAK/X,CAAL,CAAOiY,MAAP,CAAchY,QAAd,CAAuB,KAAKgY,MAAL,CAAYJ,IAAZ,GAAmB,GAAnB,GAAyB,KAAKI,MAAL,CAAYF,MAA5D;;AACA,gBAAI,KAAKG,YAAL,CAAkB9W,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7F,SAAP,CAAiB8F,QAAjB,CAA0B,KAAK0X,kBAAL,IAA2B5O,SAA3B,GAAuC,EAAvC,GAA4C,KAAK4O,kBAAL,CAAwB3O,QAAxB,EAAtE;AACA,iBAAKhJ,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;AACA,iBAAK0B,CAAL,CAAOoY,WAAP,CAAmBnY,QAAnB,CAA4B,KAAKoY,MAAL,CAAYC,iBAAxC;;AAGA,gBAAIjX,QAAQ,CAAC,KAAKrB,CAAL,CAAOmY,UAAP,CAAkB5d,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAC3C;AACA,mBAAKkd,eAAL,CAAqBnW,MAArB,CAA4B,KAAK4W,YAAL,CAAkB3d,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE;;AACA,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb;;AACA,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eARD,EAQG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAXD;AAYD,aAdD,MAcO;AACL;AACA,mBAAK6a,eAAL,CAAqB/V,MAArB,CAA4B,KAAKwW,YAAL,CAAkB3d,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAvJ8B;;AAAA;AAAA,S;;;;gBAdb;;gBAGX;;gBAAQ;;gBACR;;gBACA;;gBACA;;gBACA;;;;;;gBAuBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;gBAET,uD;AAAS,iBAAC,oGAAD,EAA0B;AAAE,sBAAQ;AAAV,WAA1B;;;AAlBC4a,0BAAoB,eAJhC,gEAAU;AACTplB,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAIgC,E,iCAoBR,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACc,iF,EACA,4E,EA1BI,GAApB6V,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAgB,iBAAiB;AAY5B,mCAAmB1W,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIU0F,yBAJV,EAIgE;AAAA;;AAJ7C,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAER,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AArB2B;AAAA;AAAA,iBAuB5B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAzB2B;AAAA;AAAA,iBA0Bf,gCAAuB1B,IAAvB,EAA6B;;;;;;;AACxC;;AAEK,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAE5G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAGA,GAAG,IAAE,CAAR,EAAU;AACR,gCAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,gCAAI,CAACc,OAAL;AACD,uBAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,8BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,qBAVD;;;;;;;;;;AAaL;AA5C2B;AAAA;AAAA,iBA8C5B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAnD2B;AAAA;AAAA,iBAqD5B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA9D2B;AAAA;AAAA,iBAgE5B,cAAKikB,QAAL,EAAe;AACb,iBAAK3Z,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwByU,QAAxB,CAArB;AACD;AAlE2B;AAAA;AAAA,iBAoE3B,gBAAOpW,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKE,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AAEH,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAVD;AAWD;AAhF0B;;AAAA;AAAA,S;;;;gBATrB;;gBALA;;gBAGA;;gBAFA;;gBAKA;;;;;;gBAiBN,0D;AAAY,iBAAC,wFAAD;;;AATF+W,uBAAiB,eAN7B,gEAAU;AACTpmB,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sHAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAM6B,E,iCAYA,iF,EACf,0F,EACA,0E,EACI,sD,EACoB,8F,EAhBT,GAAjBuV,iBAAiB,CAAjB;;;;;;;;;;;;;;;;AClBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFC,oBAAoB;AAY/B,sCACUpc,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUic,eANV,EAM0C;AAAA;;AALhC,eAAArc,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAic,eAAA,GAAAA,eAAA;AAhBV,eAAA/b,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAtB8B;AAAA;AAAA,iBAwB/B,oBAAW;AACT;AACC,iBAAKiQ,mBAAL;AACF;AA3B8B;AAAA;AAAA,eA6B/B,eAAQ;AAAE,mBAAO,KAAKwL,YAAL,CAAkBjb,QAAzB;AAAoC;AA7Bf;AAAA;AAAA,iBA+BvB,sBAAa;AACnB,iBAAKib,YAAL,GAAoB,KAAKtc,WAAL,CAAiBsB,KAAjB,CAAuB;AACzCwO,wBAAU,EAAE,CAD6B;AAEzChY,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CAFmC;AAGzC2F,wBAAU,EAAC,CAAC,EAAD,CAH8B;AAIzCrF,sBAAQ,EAAE,CAAC,IAAD,CAJ+B;AAKzCuF,mBAAK,EAAE,CAAC,EAAD;AALkC,aAAvB,CAApB;AAOD;AAvC8B;AAAA;AAAA,iBAyCvB,kBAAS7D,GAAT,EAAc;AACpB,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACC,iBAAK6L,CAAL,CAAOwD,UAAP,CAAkBvD,QAAlB,CAA2BJ,GAAG,CAAC2D,UAA/B;AACD,iBAAKxD,CAAL,CAAOmM,UAAP,CAAkBlM,QAAlB,CAA2BJ,GAAG,CAACsM,UAA/B;AACA,iBAAKnM,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAhD8B;AAAA;AAAA,iBAkD/B,+BAAsB;AAAA;;AACpB;AACA,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAAClN,CAAL,CAAOmM,UAAP,CAAkBlM,QAAlB,CAA2Bc,GAA3B;;AACA,wBAAI,CAAC2X,eAAL,CAAqB1X,OAArB,CAA6BD,GAA7B,EAAkCtL,SAAlC,CAA4C,UAAAzB,GAAG,EAAI;AACjD;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAhE8B;AAAA;AAAA,iBAkE/B,oBAAW;AAAA;;AACT;AACA,iBAAKyL,YAAL,CAAkBxX,gBAAlB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKgc,YAAL,CAAkBvX,OAAtB,EAA+B;AAAE;AAAS;;AAC1C,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAGA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAOmM,UAAP,CAAkB5R,KAAnB,CAAR,KAAsC,CAA1C,EAA6C;AAC3C;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK8e,YAAL,CAAkBpe,KAAjC,CAAZ;AACA,mBAAKme,eAAL,CAAqBpX,MAArB,CAA4B,KAAKqX,YAAL,CAAkBpe,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAbD,MAaO;AACL;AACA,mBAAK8b,eAAL,CAAqBhX,MAArB,CAA4B,KAAKiX,YAAL,CAAkBpe,KAA9C,EAAqD9E,SAArD,CAA+D,UAAAhE,IAAI,EAAI;AACrE;AACA,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;AACF,eAPD,EAOG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eAVD;AAWD;AACF;AAvG8B;;AAAA;AAAA,S;;;;gBAbb;;gBAEX;;gBAAQ;;gBACR;;gBACA;;gBACA;;;;;;gBAmBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAXC6b,0BAAoB,eALhC,gEAAU;AACTrmB,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sIAFS;;;;AAAA,OAAV,CAKgC,E,iCAaR,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACc,iF,EAlBI,GAApB8W,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCiBFG,iBAAiB;AAW5B,mCAAmB9W,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIU0F,yBAJV,EAIgE;AAAA;;AAC7D;AALgB,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAGR,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AArB2B;AAAA;AAAA,iBAuB5B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAzB2B;AAAA;AAAA,iBA2Bf,gCAAuB1B,IAAvB,EAA6B;;;;;;;AACxC;;AAEK,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAE5G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAGA,GAAG,IAAE,CAAR,EAAU;AACR,gCAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,gCAAI,CAACc,OAAL;AACD,uBAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,8BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,qBAVD;;;;;;;;;;AAaL;AA7C2B;AAAA;AAAA,iBA+C5B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AApD2B;AAAA;AAAA,iBAsD5B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA/D2B;AAAA;AAAA,iBAiE5B,cAAK6mB,QAAL,EAAe;AACb;AACI,iBAAKvc,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,sBAAD,EAAyBqX,QAAzB,CAArB;AACL;AApE2B;;AAAA;AAAA,S;;;;gBATrB;;gBAHA;;gBAEA;;gBADA;;gBAIA;;;;;;gBAgBN,0D;AAAY,iBAAC,wFAAD;;;AATFD,uBAAiB,eAN7B,gEAAU;AACTxmB,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,uHAFS;;;;AAAA,OAAV,CAM6B,E,iCAWA,iF,EACf,0F,EACA,0E,EACG,sD,EACqB,8F,EAfT,GAAjBiX,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFE,kBAAkB;AAY7B,oCACUzc,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUsc,aANV,EAMsC;AAAA;;AAL5B,eAAA1c,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAsc,aAAA,GAAAA,aAAA;AAhBV,eAAApc,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAoc,aAAA,GAAgB,KAAhB;AACA,eAAA/b,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAtB4B;AAAA;AAAA,iBAwB7B,oBAAW;AACT,iBAAK+b,iBAAL;AACD;AA1B4B;AAAA;AAAA,eA4B7B,eAAQ;AAAE,mBAAO,KAAKC,UAAL,CAAgBxb,QAAvB;AAAkC;AA5Bf;AAAA;AAAA,iBA8BrB,sBAAa;AACnB,iBAAKwb,UAAL,GAAkB,KAAK7c,WAAL,CAAiBsB,KAAjB,CAAuB;AACvCxJ,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0J,QAAhB,CADiC;AAEvCE,yBAAW,EAAE,CAAC,EAAD,CAF0B;AAGvCI,sBAAQ,EAAE,CAAC,IAAD,CAH6B;AAIvCgb,qBAAO,EAAE,CAJ8B;AAKvCzV,mBAAK,EAAE,CAAC,EAAD,CALgC;AAMvC3M,sBAAQ,EAAE,CAAC,EAAD,CAN6B;AAOvCC,oBAAM,EAAE,CAAC,EAAD,CAP+B;AAQvCgE,qBAAO,EAAE,KAAKwB,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OARG;AASvC9C,wBAAU,EAAE;AAT2B,aAAvB,CAAlB;AAWD;AA1C4B;AAAA;AAAA,iBA4CrB,kBAAS2H,GAAT,EAAc;AACpB;AACA,iBAAKG,CAAL,CAAO7L,IAAP,CAAY8L,QAAZ,CAAqBJ,GAAG,CAAC1L,IAAzB;AACA,iBAAK6L,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAOmZ,OAAP,CAAelZ,QAAf,CAAwBJ,GAAG,CAACsZ,OAA5B;AACA,iBAAKnZ,CAAL,CAAOjJ,QAAP,CAAgBkJ,QAAhB,CAAyBJ,GAAG,CAAC9I,QAA7B;AACA,iBAAKiJ,CAAL,CAAOhJ,MAAP,CAAciJ,QAAd,CAAuBJ,GAAG,CAAC7I,MAA3B;AACA,iBAAKgJ,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAtD4B;AAAA;AAAA,iBAwD7B,6BAAoB;AAAA;;AAClB,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACiY,aAAL,GAAqB,IAArB;;AACA,wBAAI,CAAChZ,CAAL,CAAOmZ,OAAP,CAAelZ,QAAf,CAAwBc,GAAxB;;AACA,wBAAI,CAACgY,aAAL,CAAmB/X,OAAnB,CAA2BD,GAA3B,EAAgC,QAAI,CAACf,CAAL,CAAOhF,OAAP,CAAeT,KAA/C,EAAsD9E,SAAtD,CAAgE,UAAAzB,GAAG,EAAI;AACrE;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACglB,aAAL,GAAqB,KAArB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AArE4B;AAAA;AAAA,iBAuE7B,oBAAW;AAAA;;AACT,iBAAKE,UAAL,CAAgB/X,gBAAhB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKuc,UAAL,CAAgB9X,OAApB,EAA6B;AAAE;AAAS;;AACxC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;AAEA,iBAAK0B,CAAL,CAAOjJ,QAAP,CAAgBkJ,QAAhB,CAAyB,KAAKyC,SAAL,CAAe,KAAKN,WAAL,CAAiBrL,QAAhC,CAAzB;AACA,iBAAKiJ,CAAL,CAAOhJ,MAAP,CAAciJ,QAAd,CAAuB,KAAKyC,SAAL,CAAe,KAAKN,WAAL,CAAiBpL,MAAhC,CAAvB;;AAEA,gBAAIqK,QAAQ,CAAC,KAAKrB,CAAL,CAAOmZ,OAAP,CAAe5e,KAAhB,CAAR,KAAmC,CAAvC,EAA0C;AACxC;AACA;AACA,mBAAKwe,aAAL,CAAmBzX,MAAnB,CAA0B,KAAK4X,UAAL,CAAgB3e,KAA1C,EAAiD9E,SAAjD,CAA2D,UAAAhE,IAAI,EAAI;AACjE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAbD,MAaO;AACL;AACA,mBAAKmc,aAAL,CAAmBrX,MAAnB,CAA0B,KAAKwX,UAAL,CAAgB3e,KAA1C,EAAiD9E,SAAjD,CAA2D,UAAAhE,IAAI,EAAI;AACjE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA5G4B;AAAA;AAAA,iBA8G7B,mBAAUiD,GAAV,EAAe;AACb,mBAAOA,GAAG,CAACF,IAAJ,GAAW,GAAX,GAAiBE,GAAG,CAACH,KAArB,GAA6B,GAA7B,GAAmCG,GAAG,CAACJ,GAA9C;AAAkD;AACnD;AAhH4B;;AAAA;AAAA,S;;;;gBAbX;;gBAEX;;gBAAQ;;gBACR;;gBACA;;gBACA;;;;;;gBAkBN,uD;AAAS,iBAAC,wGAAD,EAA2B;AAAE,sBAAQ;AAAV,WAA3B;;;gBACT,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAXCqZ,wBAAkB,eAL9B,gEAAU;AACT1mB,gBAAQ,EAAE,eADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,+HAFS;;;;AAAA,OAAV,CAK8B,E,iCAaN,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACY,6E,EAlBI,GAAlBmX,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAM,eAAe;AAW1B,iCAAmBtX,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAGyB;AAAA;;AAHN,eAAAwF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACP,eAAKiO,aAAL,GAAqB,KAAK/N,EAAL,CAAQ8Q,gBAAR,GAA2BtS,OAAhD;AAEA,eAAKkH,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AApByB;AAAA;AAAA,iBAsB1B,oBAAW;AACT,iBAAKE,OAAL;AACD;AAxByB;AAAA;AAAA,iBA0B1B,mBAAU;AACR,iBAAKP,OAAL,CAAaW,UAAb,CAAwB,KAAK8H,aAA7B;AACA,iBAAK5H,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AA/ByB;AAAA;AAAA,iBAiC1B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA1CyB;AAAA;AAAA,iBA4C1B,cAAKqnB,MAAL,EAAa;AACX,iBAAK/c,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,mBAAD,EAAsB6X,MAAtB,CAArB;AACD;AA9CyB;AAAA;AAAA,iBAgD1B,gBAAOxZ,GAAP,EAAY;AAAA;;AACV,iBAAKiC,OAAL,WAAoBjC,GAApB,EAAyBpK,SAAzB,CAAmC,UAACzB,GAAD,EAAc;AAC/C,kBAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,wBAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,wBAAI,CAACc,OAAL;AACD,eAHD,MAKE,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AAEH,aARD,EAQG,UAAAvF,KAAK,EAAI;AACV,sBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;AACD,aAVD;AAWD;AA5DyB;;AAAA;AAAA,S;;;;gBARnB;;gBAJA;;gBAGA;;gBAFA;;;;;;gBAoBN,0D;AAAY,iBAAC,wFAAD;;;AATF2X,qBAAe,eAN3B,gEAAU;AACThnB,gBAAQ,EAAE,YADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,kHAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAM2B,E,iCAWE,6E,EACf,0F,EACA,0E,EACI,sD,EAdS,GAAfmW,eAAe,CAAf;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFE,oBAAoB;AAY/B,sCACUjd,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMU8c,eANV,EAM0C;AAAA;;AALhC,eAAAld,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAA8c,eAAA,GAAAA,eAAA;AAhBV,eAAA5c,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAeE,eAAKC,UAAL;AACD;;AAtB8B;AAAA;AAAA,iBAwB/B,oBAAW;AACR,iBAAKiQ,mBAAL;AACF;AA1B8B;AAAA;AAAA,eA4B/B,eAAQ;AAAE,mBAAO,KAAKqM,WAAL,CAAiB9b,QAAxB;AAAmC;AA5Bd;AAAA;AAAA,iBA8BvB,sBAAa;AACnB;AACA,iBAAK8b,WAAL,GAAmB,KAAKnd,WAAL,CAAiBsB,KAAjB,CAAuB;AACxC+O,uBAAS,EAAE,CAD6B;AAExClR,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWqC,QAAhB,CAF0B;AAGxC4b,gCAAkB,EAAE,CAAC,EAAD,CAHoB;AAIxCC,gCAAkB,EAAE,CAAC,EAAD,CAJoB;AAKxCC,sCAAwB,EAAE,CAAC,EAAD,CALc;AAMxCpW,0BAAY,EAAE,CAAC,CAAD,CAN0B;AAOxCpF,sBAAQ,EAAE,CAAC,IAAD,CAP8B;AAQxCuF,mBAAK,EAAE,CAAC,EAAD,CARiC;AASxCrS,kBAAI,EAAE,CAAC,EAAD;AATkC,aAAvB,CAAnB;AAWD;AA3C8B;AAAA;AAAA,iBA6CvB,kBAASwO,GAAT,EAAc;AACpB;AACA,iBAAKG,CAAL,CAAOxE,YAAP,CAAoByE,QAApB,CAA6BJ,GAAG,CAACrE,YAAjC;AACA,iBAAKwE,CAAL,CAAO0Z,kBAAP,CAA0BzZ,QAA1B,CAAmCJ,GAAG,CAAC6Z,kBAAvC;AACA,iBAAK1Z,CAAL,CAAO0M,SAAP,CAAiBzM,QAAjB,CAA0BJ,GAAG,CAAC6M,SAA9B;AACA,iBAAK1M,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOyZ,kBAAP,CAA0BxZ,QAA1B,CAAmCJ,GAAG,CAAC4Z,kBAAvC;AACA,iBAAKzZ,CAAL,CAAO2Z,wBAAP,CAAgC1Z,QAAhC,CAAyCJ,GAAG,CAAC8Z,wBAA7C;AACA,iBAAK3Z,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAO3O,IAAP,CAAY4O,QAAZ,CAAqBJ,GAAG,CAACxO,IAAzB;AACA,iBAAK2O,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACD;AAzD8B;AAAA;AAAA,iBA2D/B,+BAAsB;AAAA;;AACpB;AACA,iBAAKnH,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAAClN,CAAL,CAAO0M,SAAP,CAAiBzM,QAAjB,CAA0Bc,GAA1B;;AACA,wBAAI,CAACwY,eAAL,CAAqBvY,OAArB,CAA6BD,GAA7B,EAAkCtL,SAAlC,CAA4C,UAAAzB,GAAG,EAAI;AACjD;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AAzE8B;AAAA;AAAA,iBA2E/B,oBAAW;AAAA;;AACT;AACA,iBAAKsM,WAAL,CAAiBrY,gBAAjB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK6c,WAAL,CAAiBpY,OAArB,EAA8B;AAAE;AAAS;;AACzC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;;AAGA,gBAAI+C,QAAQ,CAAC,KAAKrB,CAAL,CAAO0M,SAAP,CAAiBnS,KAAlB,CAAR,KAAqC,CAAzC,EAA4C;AAC1C,uBAD0C,CAE1C;;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAK2f,WAAL,CAAiBjf,KAAhC,CAAZ;AACA,mBAAKgf,eAAL,CAAqBjY,MAArB,CAA4B,KAAKkY,WAAL,CAAiBjf,KAA7C,EAAoD9E,SAApD,CAA8D,UAAAhE,IAAI,EAAI;AACpE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,4BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAdD,MAcO;AACL;AACA,mBAAK2c,eAAL,CAAqB7X,MAArB,CAA4B,KAAK8X,WAAL,CAAiBjf,KAA7C,EAAoD9E,SAApD,CAA8D,UAAAhE,IAAI,EAAI;AACpE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AAhH8B;;AAAA;AAAA,S;;;;gBAbb;;gBAEX;;gBAAQ;;gBACR;;gBACA;;gBACA;;;;;;gBAmBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;AAXC0c,0BAAoB,eALhC,gEAAU;AACTlnB,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,qIAFS;;;;AAAA,OAAV,CAKgC,E,iCAaR,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACc,iF,EAlBI,GAApB2X,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkBFM,gBAAgB;AAY3B,kCAAmB9X,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIU0F,yBAJV,EAIgE;AAAA;;AAC7D;AALgB,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAGR,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AAtB0B;AAAA;AAAA,iBAwB3B,oBAAW;AACT,iBAAKE,OAAL;AACD;AA1B0B;AAAA;AAAA,iBA2Bd,gCAAuB1B,IAAvB,EAA6B;;;;;;;AACxC;;AAEK,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAE5G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAGA,GAAG,IAAE,CAAR,EAAU;AACR,gCAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,gCAAI,CAACc,OAAL;AACD,uBAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,8BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,qBAVD;;;;;;;;;;AAaL;AA7C0B;AAAA;AAAA,iBA8C3B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AAnD0B;AAAA;AAAA,iBAqD3B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA9D0B;AAAA;AAAA,iBAgE3B,cAAK6nB,QAAL,EAAe;AACb;AACI,iBAAKvd,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,EAAwBqY,QAAxB,CAArB;AACL;AAnE0B;;AAAA;AAAA,S;;;;gBAVpB;;gBAJA;;gBAEA;;gBADA;;gBAIA;;;;;;gBAkBN,0D;AAAY,iBAAC,wFAAD;;;AATFD,sBAAgB,eAN5B,gEAAU;AACTxnB,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,sHAFS;;;;AAAA,OAAV,CAM4B,E,iCAYC,iF,EACf,0F,EACA,0E,EACG,sD,EACqB,8F,EAhBV,GAAhBiY,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AClBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFE,mBAAmB;AAe9B,qCACUzd,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUC,EAJV,EAKSC,EALT,EAMUsd,cANV,EAOUrP,eAPV,EAO2C;AAAA;;AANjC,eAAArO,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACD,eAAAC,EAAA,GAAAA,EAAA;AACC,eAAAsd,cAAA,GAAAA,cAAA;AACA,eAAArP,eAAA,GAAAA,eAAA;AApBV,eAAA/N,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAsQ,eAAA,GAAkB,KAAlB;AACA,eAAAjQ,UAAA,GAAa,MAAb;AAIA,eAAAya,YAAA,GAAe,EAAf;AACA,eAAAC,kBAAA,GAAqB,EAArB;AAcE,eAAKza,UAAL;AACA,eAAK0V,aAAL;AACD;;AA3B6B;AAAA;AAAA,iBA6B9B,oBAAW;AACT,iBAAKzF,mBAAL;AACD;AA/B6B;AAAA;AAAA,eAiC9B,eAAQ;AAAE,mBAAO,KAAK6M,WAAL,CAAiBtc,QAAxB;AAAmC;AAjCf;AAAA;AAAA,iBAmCtB,sBAAa;AACnB;AACA,iBAAKsc,WAAL,GAAmB,KAAK3d,WAAL,CAAiBsB,KAAjB,CAAuB;AACxCrN,gBAAE,EAAE,CADoC;AAExCuG,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWgH,QAAhB,CAFiC;AAGxCE,yBAAW,EAAE,CAAC,EAAD,CAH2B;AAIxCD,yBAAW,EAAE,CAAC,EAAD,CAJ2B;AAKxCE,+BAAiB,EAAE,CAAC,EAAD,CALqB;AAMxCuF,0BAAY,EAAE,CAAC,CAAD,CAN0B;AAOxC0W,sBAAQ,EAAE,CAAC,EAAD,CAP8B;AAQxC5oB,kBAAI,EAAE,CAAC,EAAD,CARkC;AASxC8M,sBAAQ,EAAE,CAAC,IAAD,CAT8B;AAUxCuF,mBAAK,EAAE,CAAC,EAAD,CAViC;AAWxCwW,4BAAc,EAAE,CAAC,EAAD,CAXwB;AAYxChiB,wBAAU,EAAE,CAAC,IAAD,CAZ4B;AAaxCiC,uBAAS,EAAE;AAb6B,aAAvB,CAAnB;AAeD;AApD6B;AAAA;AAAA,iBAsDtB,kBAAS0F,GAAT,EAAc;AACpB;AACA,iBAAKG,CAAL,CAAOnJ,KAAP,CAAaoJ,QAAb,CAAsBJ,GAAG,CAAChJ,KAA1B;AACA,iBAAKmJ,CAAL,CAAOlC,WAAP,CAAmBmC,QAAnB,CAA4BJ,GAAG,CAAC/B,WAAhC;AACA,iBAAKkC,CAAL,CAAO1P,EAAP,CAAU2P,QAAV,CAAmBJ,GAAG,CAACvP,EAAvB;AACA,iBAAK0P,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsBJ,GAAG,CAAC6D,KAA1B;AACA,iBAAK1D,CAAL,CAAOka,cAAP,CAAsBja,QAAtB,CAA+BJ,GAAG,CAACqa,cAAnC;AACA,iBAAKla,CAAL,CAAOjC,WAAP,CAAmBkC,QAAnB,CAA4BJ,GAAG,CAAC9B,WAAhC;AACA,iBAAKiC,CAAL,CAAOhC,iBAAP,CAAyBiC,QAAzB,CAAkCJ,GAAG,CAAC7B,iBAAtC;AACA,iBAAKgC,CAAL,CAAOuD,YAAP,CAAoBtD,QAApB,CAA6BJ,GAAG,CAAC0D,YAAjC;AACA,iBAAKvD,CAAL,CAAOia,QAAP,CAAgBha,QAAhB,CAAyBJ,GAAG,CAACoa,QAA7B;AACA,iBAAKja,CAAL,CAAO3O,IAAP,CAAY4O,QAAZ,CAAqBJ,GAAG,CAACxO,IAAzB;AACA,iBAAK2O,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyBJ,GAAG,CAAC1B,QAAJ,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAArD;AACA,iBAAKwF,OAAL,CAAarF,QAAb,GAAwBuB,GAAG,CAAC6D,KAA5B;AACA,iBAAKyW,MAAL,CAAY7B,iBAAZ,GAAgCzY,GAAG,CAACqa,cAApC;;AAEA,gBAAIra,GAAG,CAAC1F,SAAJ,IAAiB,EAArB,EAAyB;AACvB;AACA,kBAAIwO,eAAe,GAAG9I,GAAG,CAAC1F,SAA1B;AACA,mBAAKwd,kBAAL,GAA0BhP,eAAe,CAAClI,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BmI,MAA/B,CAA1B;AACA,mBAAK7I,CAAL,CAAO7F,SAAP,CAAiB8F,QAAjB,CAA0BJ,GAAG,CAAC1F,SAA9B;AACD;AACF;AA5E6B;AAAA;AAAA,iBA8E9B,+BAAsB;AAAA;;AACpB;AACA,iBAAKoC,KAAL,CAAWsE,QAAX,CAAoBpL,SAApB,CAA8B,UAAAqL,KAAK,EAAI;AACrC,kBAAMC,GAAG,GAAG,CAACD,KAAK,CAACxL,GAAN,CAAU,IAAV,CAAb;;AACA,kBAAIyL,GAAJ,EAAS;AACP,wBAAI,CAACmM,eAAL,GAAuB,IAAvB;;AACA,wBAAI,CAAClN,CAAL,CAAO1P,EAAP,CAAU2P,QAAV,CAAmBc,GAAnB;;AACA,wBAAI,CAACgZ,cAAL,CAAoB/Y,OAApB,CAA4BD,GAA5B,EAAiCtL,SAAjC,CAA2C,UAAAzB,GAAG,EAAI;AAChD;AACA,0BAAI,CAACiN,QAAL,CAAcjN,GAAd;;AACA,0BAAI,CAACkZ,eAAL,GAAuB,KAAvB;AACD,iBAJD;AAKD;AACF,aAXD;AAYD;AA5F6B;AAAA;AAAA,iBA8FtB,yBAAgB;AAAA;;AACtB;AACA,iBAAKxC,eAAL,CAAqB6N,eAArB,GAAuC9iB,SAAvC,CAAiD,UAACzB,GAAD,EAAc;AAC7D,sBAAI,CAAC0jB,YAAL,GAAoB1jB,GAApB;AACD,aAFD;AAGD;AAnG6B;AAAA;AAAA,iBAqG9B,oBAAW;AAAA;;AACT;AACA,iBAAKgmB,WAAL,CAAiB7Y,gBAAjB;AACA,iBAAKxE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKqd,WAAL,CAAiB5Y,OAArB,EAA8B;AAAE;AAAS;;AACzC,iBAAKxE,OAAL,GAAe,IAAf;AACA,iBAAKoD,CAAL,CAAO7F,SAAP,CAAiB8F,QAAjB,CAA0B,KAAK0X,kBAAL,IAA2B5O,SAA3B,GAAuC,EAAvC,GAA4C,KAAK4O,kBAAL,CAAwB3O,QAAxB,EAAtE;AACA,iBAAKhJ,CAAL,CAAO7B,QAAP,CAAgB8B,QAAhB,CAAyB,KAAKD,CAAL,CAAO7B,QAAP,CAAgB5D,KAAhB,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAA9D;AACA,iBAAKyF,CAAL,CAAO0D,KAAP,CAAazD,QAAb,CAAsB,KAAK0D,OAAL,CAAarF,QAAnC;AACA,iBAAK0B,CAAL,CAAOka,cAAP,CAAsBja,QAAtB,CAA+B,KAAKka,MAAL,CAAY7B,iBAA3C;;AAGA,gBAAIjX,QAAQ,CAAC,KAAKrB,CAAL,CAAO1P,EAAP,CAAUiK,KAAX,CAAR,KAA8B,CAAlC,EAAqC;AACnC,uBADmC,CAEnC;;AACAzJ,qBAAO,CAACC,GAAR,CAAY6I,IAAI,CAACC,SAAL,CAAe,KAAKmgB,WAAL,CAAiBzf,KAAhC,CAAZ;AACA,mBAAKwf,cAAL,CAAoBzY,MAApB,CAA2B,KAAK0Y,WAAL,CAAiBzf,KAA5C,EAAmD9E,SAAnD,CAA6D,UAAAhE,IAAI,EAAI;AACnE,oBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,4BAA/B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;;AACD,wBAAI,CAAC5E,OAAL,GAAe,KAAf;AACD,eAND,EAMG,UAAAV,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD,aAdD,MAcO;AACL;AACA,mBAAKmd,cAAL,CAAoBrY,MAApB,CAA2B,KAAKsY,WAAL,CAAiBzf,KAA5C,EAAmD9E,SAAnD,CAA6D,UAAAhE,IAAI,EAAI;AACnE,wBAAI,CAACmL,OAAL,GAAe,KAAf;;AACA,oBAAInL,IAAI,IAAI,CAAZ,EAAe;AACb,0BAAI,CAACgL,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA+B,8BAA/B;;AACA,0BAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AACF,eAND,EAMG,UAAAtF,KAAK,EAAI;AACV,wBAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,0BAA3B;;AACA,wBAAI,CAAC7E,OAAL,GAAe,KAAf;AACD,eATD;AAUD;AACF;AA5I6B;;AAAA;AAAA,S;;;;gBAfZ;;gBAGX;;gBAAQ;;gBACR;;gBACA;;gBACA;;gBACA;;;;;;gBAqBN,uD;AAAS,iBAAC,8FAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;;;gBACT,uD;AAAS,iBAAC,oGAAD,EAA0B;AAAE,sBAAQ;AAAV,WAA1B;;;AAdCkd,yBAAmB,eAL/B,gEAAU;AACT1nB,gBAAQ,EAAE,gBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,kIAFS;;;;AAAA,OAAV,CAK+B,E,iCAgBP,0D,EACL,sD,EACD,8D,EACH,0F,EACD,0E,EACa,+E,EACC,4E,EAtBG,GAAnBmY,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAM,gBAAgB;AAY3B,kCAAmBtY,OAAnB,EACStF,EADT,EAESC,EAFT,EAGSH,MAHT,EAIU0F,yBAJV,EAIgE;AAAA;;AAC9D;AALiB,eAAAF,OAAA,GAAAA,OAAA;AACV,eAAAtF,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACC,eAAA0F,yBAAA,GAAAA,yBAAA;AAGR,eAAKE,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,eAAKC,MAAL,GAAc,KAAd;AAED;;AAtB0B;AAAA;AAAA,iBAwB3B,oBAAW;AACT,iBAAKE,OAAL;AACD;AA1B0B;AAAA;AAAA,iBA2Bd,gCAAuB1B,IAAvB,EAA6B;;;;;;;AACxC;;AAEK,2BAAM,KAAKqB,yBAAL,CAA+BgB,OAA/B,CAAuC,kBAAvC,EAA2D,oCAA3D,CAAN;;;;;2CAA2G,I;;;;;AAE5G,yBAAKlB,OAAL,WAAoBnB,IAApB,EAA0BlL,SAA1B,CAAoC,UAACzB,GAAD,EAAc;AAChD,0BAAGA,GAAG,IAAE,CAAR,EAAU;AACR,gCAAI,CAACyI,EAAL,CAAQ8E,WAAR,CAAoB,SAApB,EAA8B,8BAA9B;;AACA,gCAAI,CAACc,OAAL;AACD,uBAHD,MAKA,QAAI,CAAC5F,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AAED,qBARD,EAQG,UAAAvF,KAAK,EAAI;AACV,8BAAI,CAACO,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA0B,0BAA1B;AACD,qBAVD;;;;;;;;;;AAaL;AA7C0B;AAAA;AAAA,iBA+C3B,mBAAU;AACR,iBAAKK,OAAL,CAAaW,UAAb;AACA,iBAAKE,KAAL,GAAa,KAAKb,OAAL,CAAaa,KAA1B;AACA,iBAAKC,MAAL,GAAc,KAAKd,OAAL,CAAac,MAA3B;AACA,iBAAKV,QAAL,GAAgB,KAAKJ,OAAL,CAAaI,QAA7B;AACD;AApD0B;AAAA;AAAA,iBAsD3B,wBAAyC;AAAA,gBAAhC/P,MAAgC,UAAhCA,MAAgC;AAAA,gBAAxBH,SAAwB,UAAxBA,SAAwB;AAEvC,iBAAK6Q,OAAL,CAAaC,OAAb,CAAqB,UAAAC,MAAM,EAAI;AAC7B,kBAAIA,MAAM,CAAChR,QAAP,KAAoBI,MAAxB,EAAgC;AAC9B4Q,sBAAM,CAAC/Q,SAAP,GAAmB,EAAnB;AACD;AACF,aAJD;AAKA,iBAAK8P,OAAL,CAAa7M,UAAb,GAA0B9C,MAA1B;AACA,iBAAK2P,OAAL,CAAa5M,aAAb,GAA6BlD,SAA7B;AACD;AA/D0B;AAAA;AAAA,iBAiE3B,cAAKqoB,OAAL,EAAc;AACZ,iBAAK/d,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,oBAAD,EAAuB6Y,OAAvB,CAArB;AACD;AAnE0B;;AAAA;AAAA,S;;;;gBATpB;;gBALA;;gBAGA;;gBAFA;;gBAKA;;;;;;gBAiBN,0D;AAAY,iBAAC,wFAAD;;;AATFD,sBAAgB,eAN5B,gEAAU;AACThoB,gBAAQ,EAAE,aADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,oHAFS;AAGTsB,iBAAS,EAAE;AAHF,OAAV,CAM4B,E,iCAYC,+E,EACf,0F,EACA,0E,EACI,sD,EACoB,8F,EAhBV,GAAhBmX,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXAE,YAAY,6B;;;AACvB,aAAAzjB,KAAA,GAAQ,KAAR;AAGD,OAJwB,C;;AAAZyjB,kBAAY,eAJxB,gEAAU;AACTloB,gBAAQ,EAAE,UADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAIwyBb;AAoBA;;;UAmOaC,SAAS;AAAA;AAAA,Q;;AAATA,eAAS,eAjMrB,+DAAS;AACRC,oBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,kEAHY,EAIZ,wFAJY,EAKZ,yEALY,EAMZ,2EANY,EAOZ,sEAPY,EAQZ,mFARY,EASZ,0FATY,EAUZ,4GAVY,EAWZ,iFAXY,EAYZ,8FAZY,EAaZ,6FAbY,EAcZ,6GAdY,EAeZ,iGAfY,EAgBZ,kHAhBY,EAiBZ,sFAjBY,EAkBZ,oGAlBY,EAmBZ,gGAnBY,EAoBZ,gHApBY,EAqBZ,wFArBY,EAsBZ,8FAtBY,EAuBZ,yFAvBY,EAwBZ,kGAxBY,EAyBZ,wFAzBY,EA0BZ,wGA1BY,EA2BZ,wFA3BY,EA4BZ,wGA5BY,EA6BZ,qGA7BY,EA8BZ,uHA9BY,EA+BZ,uHA/BY,EAgCZ,2GAhCY,EAiCZ,2GAjCY,EAkCZ,qFAlCY,EAmCZ,uGAnCY,EAoCZ,4GApCY,EAqCZ,8FArCY,EAsCZ;AACA,+GAvCY,EAwCZ,oFAxCY,EAyCZ,oGAzCY,EA0CZ,oHA1CY,EA2CZ,sHA3CY,EA4CZ,iGA5CY,EA6CZ,oHA7CY,EA8CZ,+FA9CY,EA+CZ,iHA/CY,EAgDZ,gHAhDY,EAiDZ,6FAjDY,EAkDZ,2FAlDY,EAmDZ,4GAnDY,EAoDZ,2FApDY,EAqDZ,sGArDY,EAsDZ,+GAtDY,EAuDZ,kFAvDY,EAwDZ,8FAxDY,EAyDZ,wGAzDY,EA0DZ,+GA1DY,EA2DZ,2FA3DY,EA4DZ,6FA5DY,EA6DZ,qFA7DY,EA8DZ,+FA9DY,EA+DZ,8EA/DY,EAgEZ,oFAhEY,EAiEZ,iFAjEY,EAkEZ,uFAlEY,CADN;AAsERC,eAAO,EAAE,CACP,wEAAcC,oBAAd,CAAmC;AAAEC,eAAK,EAAE;AAAT,SAAnC,CADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,kEALO,EAMP,yDAAaC,OAAb,EANO,EAOP,6FAPO,EAQP;AAEA,qEAAaA,OAAb,CAAqB,CACnB;AAAEC,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAE,sEAAvB;AAAuCC,mBAAS,EAAE;AAAlD,SADmB,EAEnB;AACEF,cAAI,EAAE,OADR;AACiBC,mBAAS,EAAE,yEAD5B;AAEEE,kBAAQ,EAAE,CACR;AAAEH,gBAAI,EAAE,WAAR;AAAqBC,qBAAS,EAAE;AAAhC,WADQ,EAER;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAFQ,EAGR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WAHQ,EAIR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAJQ,EAMR;AAAED,gBAAI,EAAE,MAAR;AAAgBC,qBAAS,EAAE;AAA3B,WANQ,EAOR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAPQ,EAQR;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WARQ,EASR;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WATQ,EAWR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAXQ,EAYR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WAZQ,EAaR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAbQ,EAeR;AAAED,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE;AAA7B,WAfQ,EAgBR;AAAED,gBAAI,EAAE,YAAR;AAAsBC,qBAAS,EAAE;AAAjC,WAhBQ,EAiBR;AAAED,gBAAI,EAAE,iBAAR;AAA2BC,qBAAS,EAAE;AAAtC,WAjBQ,EAmBR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAnBQ,EAoBR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WApBQ,EAqBR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WArBQ,EAuBR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAvBQ,EAwBR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WAxBQ,EAyBR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAzBQ,EA2BR;AAAED,gBAAI,EAAE,OAAR;AAAiBC,qBAAS,EAAE;AAA5B,WA3BQ,EA4BR;AAAED,gBAAI,EAAE,WAAR;AAAqBC,qBAAS,EAAE;AAAhC,WA5BQ,EA6BR;AAAED,gBAAI,EAAE,gBAAR;AAA0BC,qBAAS,EAAE;AAArC,WA7BQ,EA+BR;AAAED,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE;AAA7B,WA/BQ,EAgCR;AAAED,gBAAI,EAAE,YAAR;AAAsBC,qBAAS,EAAE;AAAjC,WAhCQ,EAiCR;AAAED,gBAAI,EAAE,iBAAR;AAA2BC,qBAAS,EAAE;AAAtC,WAjCQ,EAmCR;AAAED,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE;AAA7B,WAnCQ,EAoCR;AAAED,gBAAI,EAAE,YAAR;AAAsBC,qBAAS,EAAE;AAAjC,WApCQ,EAqCR;AAAED,gBAAI,EAAE,iBAAR;AAA2BC,qBAAS,EAAE;AAAtC,WArCQ,EAuCR;AAAED,gBAAI,EAAE,gBAAR;AAA0BC,qBAAS,EAAE;AAArC,WAvCQ,EAwCR;AAAED,gBAAI,EAAE,oBAAR;AAA8BC,qBAAS,EAAE;AAAzC,WAxCQ,EAyCR;AAAED,gBAAI,EAAE,sBAAR;AAAgCC,qBAAS,EAAE;AAA3C,WAzCQ,EA0CR;AAAED,gBAAI,EAAE,0BAAR;AAAoCC,qBAAS,EAAE;AAA/C,WA1CQ,EA2CR;AAAED,gBAAI,EAAE,0BAAR;AAAoCC,qBAAS,EAAE;AAA/C,WA3CQ,EA4CR;AAAED,gBAAI,EAAE,sBAAR;AAAgCC,qBAAS,EAAE;AAA3C,WA5CQ,EA8CR;AACA;AACA;AAEA;AAAED,gBAAI,EAAE,aAAR;AAAuBC,qBAAS,EAAE;AAAlC,WAlDQ,EAoDR;AAAED,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE;AAA7B,WApDQ,EAqDR;AAAED,gBAAI,EAAE,YAAR;AAAsBC,qBAAS,EAAE;AAAjC,WArDQ,EAsDR;AAAED,gBAAI,EAAE,iBAAR;AAA2BC,qBAAS,EAAE;AAAtC,WAtDQ,EAwDR;AAAED,gBAAI,EAAE,WAAR;AAAqBC,qBAAS,EAAE;AAAhC,WAxDQ,EAyDR;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WAzDQ,EA0DR;AAAED,gBAAI,EAAE,oBAAR;AAA8BC,qBAAS,EAAE;AAAzC,WA1DQ,EA4DR;AAAED,gBAAI,EAAE,WAAR;AAAqBC,qBAAS,EAAE;AAAhC,WA5DQ,EA6DR;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WA7DQ,EA8DR;AAAED,gBAAI,EAAE,oBAAR;AAA8BC,qBAAS,EAAE;AAAzC,WA9DQ,EAgER;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAhEQ,EAiER;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WAjEQ,EAkER;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAlEQ,EAoER;AAAED,gBAAI,EAAE,SAAR;AAAmBC,qBAAS,EAAE;AAA9B,WApEQ,EAqER;AAAED,gBAAI,EAAE,aAAR;AAAuBC,qBAAS,EAAE;AAAlC,WArEQ,EAsER;AAAED,gBAAI,EAAE,kBAAR;AAA4BC,qBAAS,EAAE;AAAvC,WAtEQ,EAwER;AAAED,gBAAI,EAAE,SAAR;AAAmBC,qBAAS,EAAE;AAA9B,WAxEQ,EAyER;AAAED,gBAAI,EAAE,gBAAR;AAA0BC,qBAAS,EAAE;AAArC,WAzEQ,EA0ER;AAAED,gBAAI,EAAE,yBAAR;AAAmCC,qBAAS,EAAE;AAA9C,WA1EQ,EA2ER;AAAED,gBAAI,EAAE,aAAR;AAAuBC,qBAAS,EAAE;AAAlC,WA3EQ,EA4ER;AAAED,gBAAI,EAAE,kBAAR;AAA4BC,qBAAS,EAAE;AAAvC,WA5EQ,EA8ER;AAAED,gBAAI,EAAE,SAAR;AAAmBC,qBAAS,EAAE;AAA9B,WA9EQ,EAgFR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAhFQ,EAiFR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WAjFQ,EAkFR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAlFQ,EAoFR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WApFQ,EAqFR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WArFQ,EAsFR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAtFQ,EAwFR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAxFQ,EAyFR;AAAED,gBAAI,EAAE,cAAR;AAAwBC,qBAAS,EAAE;AAAnC,WAzFQ,EA0FR;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WA1FQ,EA4FR;AAAED,gBAAI,EAAE,MAAR;AAAgBC,qBAAS,EAAE;AAA3B,WA5FQ,EA6FR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WA7FQ,EA8FR;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WA9FQ,EAgGR;AAAED,gBAAI,EAAE,MAAR;AAAgBC,qBAAS,EAAE;AAA3B,WAhGQ,EAiGR;AAAED,gBAAI,EAAE,UAAR;AAAoBC,qBAAS,EAAE;AAA/B,WAjGQ,EAkGR;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WAlGQ;AAFZ,SAFmB,CAArB,CAVO,EAoHP,6EAAoBG,QAApB,CAA6B,gBAA7B,EAA+C;AAAEC,iBAAO,EAAE,uEAAYC;AAAvB,SAA/C,CApHO,EAqHP,qEArHO,CAtED;AA6LRlY,iBAAS,EAAE,CAAC,8GAAD,CA7LH;AA8LR5S,eAAO,EAAE,CAAC,kGAAD,EAA2B,yEAA3B,CA9LD;AA+LR+qB,iBAAS,EAAE,CAAC,2DAAD,EAAe,kGAAf,EAAyC,yEAAzC;AA/LH,OAAT,CAiMqB,GAATb,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjRAc,gBAAgB;;;;AACpB,eAAAC,YAAA,GAAe,CAAf;AAKR;;AAN4B;AAAA;AAAA,iBAGpB,4BAAmB;AACxB,iBAAKA,YAAL;AACD;AAL0B;;AAAA;AAAA,S;;AAAhBD,sBAAgB,eAJ5B,gEAAU;AACTjpB,gBAAQ,EAAE,uBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAI4B,GAAhB0Z,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC0BAE,wBAAwB;AAOnC,0CAAoBC,QAApB,EAAkDC,SAAlD,EAAqF;AAAA;;AACnF;AACA;AACA;AAHkB,eAAAD,QAAA,GAAAA,QAAA;AAA8B,eAAAC,SAAA,GAAAA,SAAA;AALlD,eAAAC,WAAA,GAA8B,IAA9B;AAUE,eAAK3kB,QAAL,GAAgBykB,QAAQ,CAACG,QAAT,EAAhB;AACA,eAAK3kB,MAAL,GAAcwkB,QAAQ,CAACI,OAAT,CAAiBJ,QAAQ,CAACG,QAAT,EAAjB,EAAsC,GAAtC,EAA2C,CAA3C,CAAd;AACD;;AAdkC;AAAA;AAAA,iBAgBnC,yBAAgBxjB,IAAhB,EAA+B;AAC7B,gBAAI,CAAC,KAAKpB,QAAN,IAAkB,CAAC,KAAKC,MAA5B,EAAoC;AAClC,mBAAKD,QAAL,GAAgBoB,IAAhB;AACD,aAFD,MAEO,IAAI,KAAKpB,QAAL,IAAiB,CAAC,KAAKC,MAAvB,IAAiCmB,IAAjC,IAAyCA,IAAI,CAAC0jB,KAAL,CAAW,KAAK9kB,QAAhB,CAA7C,EAAwE;AAC7E,mBAAKC,MAAL,GAAcmB,IAAd;AACD,aAFM,MAEA;AACL,mBAAKnB,MAAL,GAAc,IAAd;AACA,mBAAKD,QAAL,GAAgBoB,IAAhB;AACD;AACF;AAzBkC;AAAA;AAAA,iBA2BnC,mBAAUA,IAAV,EAAyB;AACvB,mBAAO,KAAKpB,QAAL,IAAiB,CAAC,KAAKC,MAAvB,IAAiC,KAAK0kB,WAAtC,IAAqDvjB,IAAI,CAAC0jB,KAAL,CAAW,KAAK9kB,QAAhB,CAArD,IAAkFoB,IAAI,CAAC2jB,MAAL,CAAY,KAAKJ,WAAjB,CAAzF;AACD;AA7BkC;AAAA;AAAA,iBA+BnC,kBAASvjB,IAAT,EAAwB;AACtB,mBAAO,KAAKnB,MAAL,IAAemB,IAAI,CAAC0jB,KAAL,CAAW,KAAK9kB,QAAhB,CAAf,IAA4CoB,IAAI,CAAC2jB,MAAL,CAAY,KAAK9kB,MAAjB,CAAnD;AACD;AAjCkC;AAAA;AAAA,iBAmCnC,iBAAQmB,IAAR,EAAuB;AACrB,mBAAOA,IAAI,CAAC4jB,MAAL,CAAY,KAAKhlB,QAAjB,KAA+B,KAAKC,MAAL,IAAemB,IAAI,CAAC4jB,MAAL,CAAY,KAAK/kB,MAAjB,CAA9C,IAA2E,KAAKglB,QAAL,CAAc7jB,IAAd,CAA3E,IAAkG,KAAK8jB,SAAL,CAAe9jB,IAAf,CAAzG;AACD;AArCkC;AAAA;AAAA,iBAuCnC,uBAAc+jB,YAAd,EAA4CC,KAA5C,EAAyD;AACvD,gBAAMC,MAAM,GAAG,KAAKX,SAAL,CAAe1hB,KAAf,CAAqBoiB,KAArB,CAAf;AACA,mBAAOC,MAAM,IAAI,KAAKZ,QAAL,CAAca,OAAd,CAAsB,mEAAQC,IAAR,CAAaF,MAAb,CAAtB,CAAV,GAAwD,mEAAQE,IAAR,CAAaF,MAAb,CAAxD,GAA+EF,YAAtF;AACD;AA1CkC;;AAAA;AAAA,S;;;;gBA/BpB;;gBAAa;;;;AA+BjBX,8BAAwB,eA7BpC,gEAAU;AACTnpB,gBAAQ,EAAE,6BADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,mHAFS;;AAAA,OAAV,CA6BoC,E,iCAOL,sE,EAA+B,iF,EAP1B,GAAxB4Z,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCzBAgB,kBAAkB,6BAG7B,4BAAYhoB,IAAZ,EAAkDioB,OAAlD,EAAmE;AAAA;;AAAA;;AACjEjoB,YAAI,CAACe,GAAL,CAA4BknB,OAAO,GAAG,iBAAtC,EAAyD/mB,SAAzD,CAAmE,UAAAI,MAAM,EAAI;AAC3E,kBAAI,CAAC4mB,SAAL,GAAiB5mB,MAAjB;AACD,SAFD,EAEG,UAAAqG,KAAK;AAAA,iBAAIpL,OAAO,CAACoL,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR;AAGD,OAP4B,C;;;;gBANtB;;;;kBASwB,oD;AAAM,mBAAC,UAAD;;;;;AAH1BqgB,wBAAkB,eAJ9B,gEAAU;AACTnqB,gBAAQ,EAAE,gBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAI8B,E,iCAGX,+D,EAAY,M,EAHD,GAAlB4a,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDAG,aAAa;AAAA;AAAA,Q;;AAAbA,mBAAa,eAJzB,gEAAU;AACTtqB,gBAAQ,EAAE,UADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAIyB,GAAb+a,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAC,uBAAuB;AA0BlC,yCACSC,EADT,EAEUC,EAFV,EAE+B;AAAA;;AADtB,eAAAD,EAAA,GAAAA,EAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AA1BV,eAAAvE,iBAAA,GAAyB,sFAAzB;AACA,eAAAwE,QAAA,GAAoB,IAApB;AACA,eAAAC,YAAA,GAAwB,KAAxB;AACA,eAAAC,WAAA,GAAoB,IAApB;AA0BA,eAAAC,gBAAA,GAAmB,KAAKL,EAAL,CAAQjf,KAAR,CAAc;AAC/Be,gBAAI,EAAE,CAAC,IAAD;AADyB,WAAd,CAAnB;AADK;;AA9B6B;AAAA;AAAA,iBAMlC,sBAAaxH,KAAb,EAAoB;AAAA;;AAClB,gBAAI8H,MAAM,GAAG,IAAIC,UAAJ,EAAb,CADkB,CACa;;AAC/B,gBAAIP,IAAI,GAAGxH,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;;AACA,gBAAI5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,IAAsB5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/CE,oBAAM,CAACQ,aAAP,CAAqBd,IAArB,EAD+C,CAG/C;;AACAM,oBAAM,CAACK,MAAP,GAAgB,YAAM;AACpB,wBAAI,CAACiZ,iBAAL,GAAyBtZ,MAAM,CAACnJ,MAAhC;;AACA,wBAAI,CAAConB,gBAAL,CAAsB1d,UAAtB,CAAiC;AAC/Bb,sBAAI,EAAEM,MAAM,CAACnJ;AADkB,iBAAjC;;AAGA,wBAAI,CAACinB,QAAL,GAAgB,KAAhB;AACA,wBAAI,CAACC,YAAL,GAAoB,IAApB;AACD,eAPD,CAJ+C,CAY/C;;;AACA,mBAAKF,EAAL,CAAQK,YAAR;AACD;AACF;AAxBiC;;AAAA;AAAA,S;;;;gBAL3B;;gBADW;;;;AAMPP,6BAAuB,eAJnC,gEAAU;AACTvqB,gBAAQ,EAAE,oBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAImC,E,iCA2BrB,0D,EACC,+D,EA5BoB,GAAvBgb,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAQ,oBAAoB;AA0B/B,sCACSP,EADT,EAEUC,EAFV,EAE+B;AAAA;;AADtB,eAAAD,EAAA,GAAAA,EAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AA1BV,eAAAve,QAAA,GAAgB,sFAAhB;AACA,eAAAwe,QAAA,GAAoB,IAApB;AACA,eAAAC,YAAA,GAAwB,KAAxB;AACA,eAAAC,WAAA,GAAoB,IAApB;AA0BA,eAAAC,gBAAA,GAAmB,KAAKL,EAAL,CAAQjf,KAAR,CAAc;AAC/Be,gBAAI,EAAE,CAAC,IAAD;AADyB,WAAd,CAAnB;AADK;;AA9B0B;AAAA;AAAA,iBAM/B,sBAAaxH,KAAb,EAAoB;AAAA;;AAClB,gBAAI8H,MAAM,GAAG,IAAIC,UAAJ,EAAb,CADkB,CACa;;AAC/B,gBAAIP,IAAI,GAAGxH,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;;AACA,gBAAI5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,IAAsB5H,KAAK,CAAC2H,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/CE,oBAAM,CAACQ,aAAP,CAAqBd,IAArB,EAD+C,CAG/C;;AACAM,oBAAM,CAACK,MAAP,GAAgB,YAAM;AACpB,wBAAI,CAACf,QAAL,GAAgBU,MAAM,CAACnJ,MAAvB;;AACA,wBAAI,CAAConB,gBAAL,CAAsB1d,UAAtB,CAAiC;AAC/Bb,sBAAI,EAAEM,MAAM,CAACnJ;AADkB,iBAAjC;;AAGA,wBAAI,CAACinB,QAAL,GAAgB,KAAhB;AACA,wBAAI,CAACC,YAAL,GAAoB,IAApB;AACD,eAPD,CAJ+C,CAY/C;;;AACA,mBAAKF,EAAL,CAAQK,YAAR;AACD;AACF;AAxB8B;;AAAA;AAAA,S;;;;gBALxB;;gBADW;;;;AAMPC,0BAAoB,eAJhC,gEAAU;AACT/qB,gBAAQ,EAAE,iBADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAIgC,E,iCA2BlB,0D,EACC,+D,EA5BiB,GAApBwb,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACNb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCiBFC,eAAe;AAmB1B,iCAAoB9gB,MAApB,EACWwF,OADX,EAEWtF,EAFX,EAEoC;AAAA;;AAFhB,eAAAF,MAAA,GAAAA,MAAA;AACT,eAAAwF,OAAA,GAAAA,OAAA;AACA,eAAAtF,EAAA,GAAAA,EAAA;AApBX,eAAA6gB,SAAA,GAAY,EAAZ;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAApT,KAAA,GAAQ,EAAR,CAkBoC,CAClC;AACA;AACD,SAxByB,CAI1B;AACA;AACA;;;AAN0B;AAAA;AAAA,iBAQ1B,oBAAW,CACV;AAGC;AAGA;AACA;AAED;AAlByB;AAAA;AAAA,iBAyB1B,kBAAS;AAEPxQ,0BAAc,CAAC6jB,KAAf;AACA,iBAAKjhB,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AA7ByB;AAAA;AAAA,iBA+BlB,yBAAgB,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AAtDyB;AAAA;AAAA,iBAuD1B,mBAAUgc,MAAV,EAAkB,CAEhB;AACD;AA1DyB;;AAAA;AAAA,S;;;;gBAhBnB;;gBAOA;;gBACA;;;;AAQIJ,qBAAe,eAN3B,gEAAU;AACThrB,gBAAQ,EAAE,YADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,mGAFS;;;;AAAA,OAAV,CAM2B,E,iCAmBE,sD,EACR,4E,EACL,mF,EArBW,GAAfyb,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCLAK,cAAc;AAEzB,gCAAoBphB,WAApB,EACSyF,OADT,EAESrF,EAFT,EAGUH,MAHV,EAIUE,EAJV,EAImC;AAAA;;AAJf,eAAAH,WAAA,GAAAA,WAAA;AACX,eAAAyF,OAAA,GAAAA,OAAA;AACA,eAAArF,EAAA,GAAAA,EAAA;AACC,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAE,EAAA,GAAAA,EAAA;AAA4B;;AANb;AAAA;AAAA,iBAQzB,oBAAW;AACT,iBAAKU,UAAL;AACD;AAVwB;AAAA;AAAA,iBAWzB,oBAAW;AAET;AACA,iBAAKwgB,SAAL,CAAevc,gBAAf;;AACA,gBAAI,KAAKuc,SAAL,CAAetc,OAAnB,EAA4B;AAC1B;AACD;;AACL;;AACU,gBAAG,KAAKpB,CAAL,CAAOxF,QAAP,CAAgBD,KAAhB,IAAyB,kBAAzB,IAA+C,KAAKyF,CAAL,CAAOvF,QAAP,CAAgBF,KAAhB,IAAyB,WAA3E,EAAwF;AAEtF,mBAAK+B,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AAGD,aALD,MAMK;AACH,mBAAK/E,EAAL,CAAQgF,SAAR,CAAkB,OAAlB,EAA2B,sCAA3B;AACD;AAEF;AA7BkB;AAAA;AAAA,eAgCzB,eAAQ;AAAE,mBAAO,KAAKic,SAAL,CAAehgB,QAAtB;AAAiC;AAhClB;AAAA;AAAA,iBAiCjB,sBAAa;AAEnB,iBAAKggB,SAAL,GAAiB,KAAKrhB,WAAL,CAAiBsB,KAAjB,CAAuB;AAEtCnD,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWqD,QAAhB,CAF4B;AAGtCpD,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWoD,QAAhB;AAH4B,aAAvB,CAAjB;AAMD;AAzCwB;;AAAA;AAAA,S;;;;gBAXP;;gBACX;;gBAGA;;gBACA;;gBAFA;;;;AAQI4f,oBAAc,eAJ1B,gEAAU;AACTrrB,gBAAQ,EAAE,WADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA;AAFS,OAAV,CAI0B,E,iCAEQ,0D,EACf,oE,EACL,mE,EACK,sD,EACJ,mF,EANW,GAAd8b,cAAc,CAAd;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFE,gBAAgB;;;;AAC3B,eAAAC,UAAA,GAAa,KAAb;AASD;;AAV4B;AAAA;AAAA,iBAG3B,oBAAW;AACT,iBAAKA,UAAL,GAAkB,KAAlB;AACD;AAL0B;AAAA;AAAA,iBAO3B,kBAAS;AACP,iBAAKA,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;AAT0B;;AAAA;AAAA,S;;AAAhBD,sBAAgB,eAL5B,gEAAU;AACTvrB,gBAAQ,EAAE,cADD;AAETuP,gBAAQ,EAAR;AAAA;AAAA,uGAFS;;;;AAAA,OAAV,CAK4B,GAAhBgc,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACPb;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAME,WAAW,GAAG;AACzB1C,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;AAMA;;;;;;;;;;;;;;;;;ACdA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;AAUO,eAAS2C,UAAT,GAAsB;AAC3B,eAAOrU,QAAQ,CAACsU,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,IAAhD;AACD;;AACD,UAAM/a,SAAS,GAAG,CAChB;AAAEgb,eAAO,EAAE,UAAX;AAAuBC,kBAAU,EAAEJ,UAAnC;AAA+CK,YAAI,EAAE;AAArD,OADgB,CAAlB;;AAIA,UAAI,sEAAYhD,UAAhB,EAA4B;AAC1B;AACD;;AAED,uGAAuBlY,SAAvB,EAAkCmb,eAAlC,CAAkD,yDAAlD,WACS,UAAAC,GAAG;AAAA,eAAIvtB,OAAO,CAACC,GAAR,CAAYstB,GAAZ,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Blog</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"blogForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Blog Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=title placeholder=\\\"\\\" formControlName=\\\"title\\\">\\r\\n              <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                  Title is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicTitle placeholder=\\\"\\\" formControlName=\\\"arabicTitle\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=country formControlName=\\\"country\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"country\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.country.invalid && (f.country.dirty || f.country.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.country.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"city\\\" formControlName=\\\"city\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.city.invalid && (f.city.dirty || f.city.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.city.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"startDate\\\">Start Date</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"startDate\\\" formControlName=\\\"startDate\\\">\\r\\n              <div *ngIf=\\\"f.startDate.invalid && (f.startDate.dirty || f.startDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.startDate.errors?.required\\\">\\r\\n                  Start Date is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"endDate\\\">End Date</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"endDate\\\" formControlName=\\\"endDate\\\">\\r\\n              <div *ngIf=\\\"f.endDate.invalid && (f.endDate.dirty || f.endDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.endDate.errors?.required\\\">\\r\\n                  End Date is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Type</label>\\r\\n              <select class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <option selected disabled>-- Please Select --</option>\\r\\n                <option>Blog's</option>\\r\\n                <option>New's Alert</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\" rows=\\\"5\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Description</label>\\r\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\" rows=\\\"5\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n              <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Blog's</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Blog's List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Blog\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"title\\\" (sort)=\\\"onSort($event)\\\"> Title</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"startDate\\\" (sort)=\\\"onSort($event)\\\">Start Date </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"endDate\\\" (sort)=\\\"onSort($event)\\\">End Date</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td> {{item.startDate | date}} </td>\\r\\n            <td> {{item.endDate | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.blogID)\\\"></i>\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add BodyType</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bodytypeForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">BodyType Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-md-8\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                          <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                            <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                              Name is required.\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <!-- Form Row-->\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Display Order</label>\\r\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">BodyType</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">BodyType List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Add BodyType</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"ArabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n            <th width=\\\"15%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.arabicName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.bodyTypeID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Car</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"carsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Car Details\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"float: right;\\\">Save changes</button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Customer</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Enter a valid Saudi Arabia phone number\\\" formControlName=\\\"customerPhone\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Vin No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vinNo\\\" placeholder=\\\"\\\" formControlName=\\\"vinNo\\\">\\r\\n              <div *ngIf=\\\"f.vinNo.invalid && (f.vinNo.dirty || f.vinNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.vinNo.errors.required\\\">\\r\\n                  Vin No is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Make</label>\\r\\n              <select class=\\\"custom-select\\\" id=makeID formControlName=\\\"makeID\\\" (change)=\\\"onChange($event)\\\">\\r\\n                <option [ngValue]=\\\"option.makeID\\\" selected=\\\"option.makeID == makeID\\\" *ngFor=\\\"let option of MakeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.makeID.invalid && (f.makeID.dirty || f.makeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.makeID.errors.required\\\">\\r\\n                  Make is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Model</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"modelID\\\">\\r\\n                <option [ngValue]=\\\"option.modelID\\\" selected=\\\"option.modelID == modelID\\\"\\r\\n                        *ngFor=\\\"let option of ModelList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.modelID.invalid && (f.modelID.dirty || f.modelID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.modelID.errors.required\\\">\\r\\n                  Model is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Year</label>\\r\\n              <select name=\\\"year\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <option *ngFor=\\\"let option of YearList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.year.invalid && (f.year.dirty || f.year.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.year.errors.required\\\">\\r\\n                  Year is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Color</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"color\\\" placeholder=\\\"\\\" formControlName=\\\"color\\\">\\r\\n              <div *ngIf=\\\"f.color.invalid && (f.color.dirty || f.color.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.color.errors.required\\\">\\r\\n                  Color is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Registration No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=registrationNo placeholder=\\\"\\\" formControlName=\\\"registrationNo\\\">\\r\\n              <div *ngIf=\\\"f.registrationNo.invalid && (f.registrationNo.dirty || f.registrationNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.registrationNo.errors.required\\\">\\r\\n                  Registration No. is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Check Litres</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"checkLitre\\\" placeholder=\\\"\\\" formControlName=\\\"checkLitre\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Engine Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=engineType placeholder=\\\"\\\" formControlName=\\\"engineType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Inline Engine Layout</option>\\r\\n                <option>Flat Engine</option>\\r\\n                <option>V-Engine</option>\\r\\n                <option>Twin Cylinder</option>\\r\\n                <option>Three Cylinder</option>\\r\\n                <option>Four Cylinder</option>\\r\\n                <option>Five Cylinder</option>\\r\\n                <option>Six Cylinder</option>\\r\\n                <option>Seven Cylinder</option>\\r\\n                <option>Eight Cylinders</option>\\r\\n                <option>Nine Cylinders</option>\\r\\n                <option>Ten Cylinders</option>\\r\\n                <option>Eleven Cylinders</option>\\r\\n                <option>Twelve Cylinders</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <!--<div *ngIf=\\\"f.engineType.invalid && (f.fuelType.dirty || f.engineType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.engineType.errors.required\\\">\\r\\n                  Engine Type is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Recommended Amount</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recommendedAmount\\\" placeholder=\\\"\\\" formControlName=\\\"recommendedAmount\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Gender</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gender\\\" placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Car Type</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"carType\\\" formControlName=\\\"carType\\\">\\r\\n                <option [ngValue]=\\\"option.bodyTypeID\\\" selected=\\\"option.bodyTypeID == bodyTypeID\\\" *ngFor=\\\"let option of BodyTypeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.carType.invalid && (f.carType.dirty || f.carType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.carType.errors.required\\\">\\r\\n                  Car Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=statusID placeholder=\\\"\\\" formControlName=\\\"statusID\\\" value=\\\"1\\\" hidden>\\r\\n              <!-- Save changes button-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n                  <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n                  <br>\\r\\n                  <label for=\\\"file\\\">Select Images </label>\\r\\n                  <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n                  <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n                  <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n                  <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Car Sell List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Car Sell\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n            <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <!--<th width=\\\"10%\\\">IMAGE</th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"makeName\\\" (sort)=\\\"onSort($event)\\\">Make Name </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"bodyType\\\" (sort)=\\\"onSort($event)\\\">Body Type </th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"modelName\\\" (sort)=\\\"onSort($event)\\\">Model Name </th>\\r\\n            <!-- <th width=\\\"10%\\\" sortable=\\\"createdDate\\\" (sort)=\\\"onSort($event)\\\">Date </th> -->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"address\\\" (sort)=\\\"onSort($event)\\\">Address </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <!--<td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>-->\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.makeName}} </td>\\r\\n            <!--<td> {{item.bodyType}} </td>-->\\r\\n            <td> {{item.modelName}} </td>\\r\\n\\r\\n            <!--     -->\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.address}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 1,'btn-success': item.statusID === 2, 'btn-danger':item.statusID === 3, 'btn-dark':item.statusID === 4}\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==4 ? 'Sold' :\\r\\n                             item.statusID ==1 ? 'Pending' :\\r\\n                             item.statusID ==2 ? 'Accepted' :\\r\\n                             item.statusID ==3 ? 'Rejected' :\\r\\n                             item.statusID ==4 ? 'Sold' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <!--<button class=\\\"btn btn-sm btn-warning\\\">-->\\r\\n              <i class=\\\"fas fa-fw fa-eye\\\" (click)=\\\"View(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n              &nbsp;\\r\\n              <!--<button class=\\\"btn btn-sm btn-success \\\" >-->\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">CarSell Details</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"carsell.statusID!=4\\\">\\r\\n        <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n          <div class=\\\"card-header border-bottom-0\\\">CarSell Status</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(carsell,2)\\\">\\r\\n                <i class=\\\"fas fa-check-circle\\\"></i> Accepted\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(carsell,3)\\\">\\r\\n                <i class=\\\"fas fa-truck\\\"></i> Rejected\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(carsell,4)\\\">\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Sold\\r\\n              </button>\\r\\n            </div>\\r\\n            <br />\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>Reason</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reason\\\" required=\\\"required\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Customer Details</div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Customer Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.fullName}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Contact\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.mobile}}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Email\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.email}}</div>\\r\\n              </div>-->\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Address\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.address}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <!-- Report summary card example-->\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Car Informations</div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Car Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Description\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.description }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Make\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ makeInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Model\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ modelInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Year\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.year }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Registration No.\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.registrationNo }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Price\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.price }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Car Details</div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Country\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ countryInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      City\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ cityInfo.name }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Body Color\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.bodyColor }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Transmition\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.transmition }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Assembly\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"mr-2\\\">\\r\\n                  {{ carsell.assembly }}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Kilometer\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.kilometer }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Fuel Type\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.fuelType }}</div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Engine Type\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.engineType }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Features\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\" style=\\\"display: -webkit-inline-box; flex-wrap: wrap; font-size: 11px; \\\">\\r\\n                  <div *ngFor=\\\"let item of featureInfo \\\">\\r\\n                    <label class=\\\"badge-pill badge-info\\\">{{ item.name }}</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Is Inspected\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.isInspected}}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div *ngFor=\\\"let item of images\\\" class=\\\"mr-2\\\">\\r\\n                  <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                  <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-left-dark shadow \\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-header border-bottom-0\\\">Images</div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let item of images\\\">\\r\\n              <div class=\\\"col-md-2\\\">\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"img-thumbnail\\\" alt=\\\"\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"carSellForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Car Sell Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Customer</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Enter a valid Saudi Arabia phone number\\\" formControlName=\\\"customerPhone\\\">\\r\\n              <!--<div *ngIf=\\\"form.get('customerPhone').hasError('saudiPhoneNumber')\\\">\\r\\n                Please enter a valid Saudi Arabia phone number.\\r\\n              </div>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n              <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                  Address is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Registration No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=registrationNo placeholder=\\\"\\\" formControlName=\\\"registrationNo\\\">\\r\\n              <div *ngIf=\\\"f.registrationNo.invalid && (f.registrationNo.dirty || f.registrationNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.registrationNo.errors.required\\\">\\r\\n                  Registration No. is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Body Type</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"bodyTypeID\\\" formControlName=\\\"bodyTypeID\\\">\\r\\n                <option [ngValue]=\\\"option.bodyTypeID\\\" selected=\\\"option.bodyTypeID == bodyTypeID\\\" *ngFor=\\\"let option of BodyTypeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.bodyTypeID.invalid && (f.bodyTypeID.dirty || f.bodyTypeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.bodyTypeID.errors.required\\\">\\r\\n                  Body Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Features</label>\\r\\n              <ng-select [items]=\\\"FeaturesList\\\" bindLabel=\\\"name\\\" bindValue=\\\"featureID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedFeatureID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=countryCode formControlName=\\\"countryCode\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"countryCode\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.countryCode.invalid && (f.countryCode.dirty || f.countryCode.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.countryCode.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=cityID formControlName=\\\"cityID\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.cityID.invalid && (f.cityID.dirty || f.cityID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.cityID.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Fuel Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=fuelType placeholder=\\\"\\\" formControlName=\\\"fuelType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Petrol</option>\\r\\n                <option>Diesel</option>\\r\\n                <option>Electric</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.fuelType.invalid && (f.fuelType.dirty || f.fuelType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.fuelType.errors.required\\\">\\r\\n                  Fuel Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Engine Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=engineType placeholder=\\\"\\\" formControlName=\\\"engineType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Inline Engine Layout</option>\\r\\n                <option>Flat Engine</option>\\r\\n                <option>V-Engine</option>\\r\\n                <option>Twin Cylinder</option>\\r\\n                <option>Three Cylinder</option>\\r\\n                <option>Four Cylinder</option>\\r\\n                <option>Five Cylinder</option>\\r\\n                <option>Six Cylinder</option>\\r\\n                <option>Seven Cylinder</option>\\r\\n                <option>Eight Cylinders</option>\\r\\n                <option>Nine Cylinders</option>\\r\\n                <option>Ten Cylinders</option>\\r\\n                <option>Eleven Cylinders</option>\\r\\n                <option>Twelve Cylinders</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.engineType.invalid && (f.fuelType.dirty || f.engineType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.engineType.errors.required\\\">\\r\\n                  Engine Type Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Kilometer</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=kilometer placeholder=\\\"\\\" formControlName=\\\"kilometer\\\">\\r\\n              <div *ngIf=\\\"f.kilometer.invalid && (f.kilometer.dirty || f.kilometer.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.kilometer.errors.required\\\">\\r\\n                  Mileage is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Transmition</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=transmition placeholder=\\\"\\\" formControlName=\\\"transmition\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Automatic</option>\\r\\n                <option>Manual</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.transmition.invalid && (f.transmition.dirty || f.transmition.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.transmition.errors.required\\\">\\r\\n                  Transmition is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Price</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n              <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                  Price is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Body Color</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=bodyColor placeholder=\\\"\\\" formControlName=\\\"bodyColor\\\">\\r\\n              <div *ngIf=\\\"f.bodyColor.invalid && (f.bodyColor.dirty || f.bodyColor.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.bodyColor.errors.required\\\">\\r\\n                  Color is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Make</label>\\r\\n              <select class=\\\"custom-select\\\" id=makeID formControlName=\\\"makeID\\\" (change)=\\\"onChange($event)\\\">\\r\\n                <option [ngValue]=\\\"option.makeID\\\" selected=\\\"option.makeID == makeID\\\" *ngFor=\\\"let option of MakeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.makeID.invalid && (f.makeID.dirty || f.makeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.makeID.errors.required\\\">\\r\\n                  Make is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Model</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"modelID\\\">\\r\\n                <option [ngValue]=\\\"option.modelID\\\" selected=\\\"option.modelID == modelID\\\"\\r\\n                        *ngFor=\\\"let option of ModelList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.modelID.invalid && (f.modelID.dirty || f.modelID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.modelID.errors.required\\\">\\r\\n                  Model is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Assembly</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=assembly placeholder=\\\"\\\" formControlName=\\\"assembly\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Local</option>\\r\\n                <option>Imported</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.assembly.invalid && (f.assembly.dirty || f.assembly.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.assembly.errors.required\\\">\\r\\n                  Assembly is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Year</label>\\r\\n              <select name=\\\"year\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <option *ngFor=\\\"let option of YearList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.year.invalid && (f.year.dirty || f.year.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.year.errors.required\\\">\\r\\n                  Year is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Is Inspected</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isInspected\\\" formControlName=\\\"isInspected\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isInspected\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=statusID placeholder=\\\"\\\" formControlName=\\\"statusID\\\" value=\\\"1\\\" hidden>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n              <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Car Sell List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Car\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <!--<label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>-->\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <!--<th width=\\\"10%\\\">IMAGE</th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n            <th width=\\\"15%\\\" sortable=\\\"makeName\\\" (sort)=\\\"onSort($event)\\\">Make Name </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"bodyType\\\" (sort)=\\\"onSort($event)\\\">Body Type </th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"modelName\\\" (sort)=\\\"onSort($event)\\\">Model Name </th>\\r\\n            <!-- <th width=\\\"10%\\\" sortable=\\\"createdDate\\\" (sort)=\\\"onSort($event)\\\">Date </th> -->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"address\\\" (sort)=\\\"onSort($event)\\\">Address </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <!--<td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>-->\\r\\n            <td> {{item.name}} </td>\\r\\n            <!--<td> {{item.description}} </td>-->\\r\\n            <td> {{item.makeName}} </td>\\r\\n            <!--<td> {{item.bodyType}} </td>-->\\r\\n            <td> {{item.modelName}} </td>\\r\\n\\r\\n            <!--     -->\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.address}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 1,'btn-success': item.statusID === 2, 'btn-danger':item.statusID === 3, 'btn-dark':item.statusID === 4}\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==4 ? 'Sold' :\\r\\n                             item.statusID ==1 ? 'Pending' :\\r\\n                             item.statusID ==2 ? 'Accepted' :\\r\\n                             item.statusID ==3 ? 'Rejected' :\\r\\n                             item.statusID ==4 ? 'Sold' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <!--<button class=\\\"btn btn-sm btn-warning\\\">-->\\r\\n              <i class=\\\"fas fa-fw fa-eye\\\" (click)=\\\"View(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n              &nbsp;\\r\\n              <!--<button class=\\\"btn btn-sm btn-success \\\" >-->\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Location Details\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"float: right;\\\">Save changes</button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n              <!--<div *ngIf=\\\"f.arabicName.invalid && (f.arabicName.dirty || f.arabicName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicName.errors.required\\\">\\r\\n                  Arabic name is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n              <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                  Address is required.\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"arabicAddress\\\">\\r\\n              <!--<div *ngIf=\\\"f.arabicAddress.invalid && (f.arabicAddress.dirty || f.arabicAddress.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicAddress.errors.required\\\">\\r\\n                  Arabic Address is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\">\\r\\n              <div *ngIf=\\\"f.contactNo.invalid && (f.contactNo.dirty || f.contactNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.contactNo.errors.required\\\">\\r\\n                  Contact No is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n              <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                  Email is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" id=descripiton formControlName=\\\"descripiton\\\" height=\\\"100px\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.descripiton.invalid && (f.descripiton.dirty || f.descripiton.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.descripiton.errors.required\\\">\\r\\n                  Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Arabic Description</label>\\r\\n              <textarea class=\\\"form-control\\\" id=descripiton formControlName=\\\"arabicDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n              <!--<div *ngIf=\\\"f.arabicDescription.invalid && (f.arabicDescription.dirty || f.arabicDescription.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicDescription.errors.required\\\">\\r\\n                  Arabic Descripiton is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n              <!--<div *ngIf=\\\"f.latitude.invalid && (f.latitude.dirty || f.latitude.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.latitude.errors.required\\\">\\r\\n                  Latitude Descripiton is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n              <!--<div *ngIf=\\\"f.longitude.invalid && (f.longitude.dirty || f.longitude.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.longitude.errors.required\\\">\\r\\n                  Longitude is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Amenities</label>\\r\\n              <ng-select [items]=\\\"AmenitiesList\\\" bindLabel=\\\"name\\\" bindValue=\\\"amenitiesID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAmenitiesID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Services</label>\\r\\n              <ng-select [items]=\\\"ServiceList\\\" bindLabel=\\\"serviceTitle\\\" bindValue=\\\"serviceID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedServiceID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.serviceTitle}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"countryID\\\" formControlName=\\\"countryID\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"countryID\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.countryID.invalid && (f.countryID.dirty || f.countryID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.countryID.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=cityID formControlName=\\\"cityID\\\" [(ngModel)]=\\\"cityID\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.cityID.invalid && (f.cityID.dirty || f.cityID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.cityID.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Select Landmark</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"landmarkID\\\">\\r\\n                <option [ngValue]=\\\"option.landmarkID\\\" selected=\\\"option.landmarkID == landmarkID\\\"\\r\\n                        *ngFor=\\\"let option of Items\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">GMap Link</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=gmaplink placeholder=\\\"\\\" formControlName=\\\"gmaplink\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Customer Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"customerStatusID\\\" formControlName=\\\"customerStatusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"customerStatusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">IsFeatured</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n              <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <h5>Location Timing's</h5>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <h5>Brand Thumbnail Image</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"row\\\" *ngFor=\\\"let timings of locationTimings\\\">\\r\\n                <div class=\\\"col-md-5 form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">{{ timings.name }}</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-7\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" id=\\\"timings{{ timings }}\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"timings.time\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group col-md-4\\\">\\r\\n                <app-imageupload></app-imageupload>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-2 input-group mb-3\\\">\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.descripiton}} </td>\\r\\n            <td> {{item.contactNo}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.customerStatusID === 1, 'btn-danger':item.customerStatusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.customerStatusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Customer Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                                <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                    <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                                            Email is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                    <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                            Password is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Mobile</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                                    <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                                            Contact is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!--<div class=\\\"row d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n  <br />\\r\\n  <br />\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h3 class=\\\" mb-0 text-gray-800\\\">Home > Dashboard</h3>\\r\\n  </div>\\r\\n  <hr style=\\\"color:#888\\\" />\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 class=\\\" mb-0 text-gray-800\\\">WELCOME TO GARAGE CUSTOMER CONTROL PANEL</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>-->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <h2 class=\\\" mb-0 text-gray-800\\\">WELCOME TO GARAGE CUSTOMER CONTROL PANEL</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <br />\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Service's</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalService}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-viruses fa-2x text-gray-300\\\"></i>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Location's</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalLocation}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-search-location fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-danger shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Feature's</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalFeature}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-feather fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Carsell</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalCarsell}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-car fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Feature</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"featureForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Feature Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Display Order</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Features</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Features List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Feature\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 form-group\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!--<div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>-->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"arabicname\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">StatusID</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order</th>\\r\\n            <th width=\\\"15%\\\" style=\\\"\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.arabicName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.featureID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Addons Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Addon</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"10%\\\">Discount </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.discountAmount}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Reviews</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Reviews List</h6>\\r\\n      </div>\\r\\n      <!--<div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Banner\\r\\n        </button>\\r\\n      </div>-->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"35%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Message </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"rate\\\" (sort)=\\\"onSort($event)\\\">Rate </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"location\\\" (sort)=\\\"onSort($event)\\\">Location </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"date\\\" (sort)=\\\"onSort($event)\\\">Date</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\">Status</th>\\r\\n            <!--<th width=\\\"10%\\\">Actions</th>-->\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.message}} </td>\\r\\n            <td> {{item.rate}} </td>\\r\\n            <td> {{item.location}} </td>\\r\\n            <td> {{item.date | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <!--<a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>-->\\r\\n\\r\\n             <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                        <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,103)\\\" *ngIf=\\\"order.statusID!=103\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,104)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (orderOrderCheckout.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}\\r\\n                                            <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                                <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                            </tr>\\r\\n                                        </td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <div class=\\\"modal-header\\\">\\r\\n     \\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n   \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ dataObj.order.statusID == 100 ? \\\"Delivered\\\" : dataObj.order.statusID==101 ?\\\"Order confirmed\\\" : dataObj.order.statusID == 102? \\\"Order prepared\\\" : dataObj.order.statusID == 103? \\\" Order out for delivery\\\" : dataObj.order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n      <hr/>\\r\\n      <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"dataObj.order.statusID!=100\\\">\\r\\n              <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                  <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"\\\">\\r\\n                      <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(dataObj.order,102)\\\" *ngIf=\\\"dataObj.order.statusID!=102\\\">\\r\\n                        <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(dataObj.order,103)\\\" *ngIf=\\\"dataObj.order.statusID!=103\\\">\\r\\n                        <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(dataObj.order,100)\\\" *ngIf=\\\"dataObj.order.statusID!=100\\\">\\r\\n                        <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(dataObj.order,104)\\\">\\r\\n                        <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n              <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Customer Name\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.name }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                   Email\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.email }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Address\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Google Address\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.address }} | Latitude: {{ dataObj.customerOrders.latitude }}| Longitude: {{ dataObj.customerOrders.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Contact Number\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.mobile }}</div>\\r\\n                          </div>\\r\\n                          \\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n\\r\\n                      \\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Order No\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderNo }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Transaction No\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.transactionNo }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Order Type\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderType=='1'?'Home': dataObj.order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                        Order Date\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderDate | date }}</div>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Status\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"mr-2\\\">\\r\\n                                  {{ dataObj.order.statusID == 100 ? \\\"Delivered\\\" : dataObj.order.statusID==101 ?\\\"Order confirmed\\\" : dataObj.order.statusID == 102? \\\"Order prepared\\\" : dataObj.order.statusID == 103? \\\" Order out for delivery\\\" : dataObj.order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 mb-4\\\">\\r\\n              <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Amount Total\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.amountTotal | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Discount\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.discountAmount | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Tax\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.tax | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Service Charges\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.serviceCharges | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                         Grand Total\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.grandTotal | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                          <table class=\\\"table table-striped\\\">\\r\\n                              <thead>\\r\\n                                  <tr class=\\\"table-header\\\">\\r\\n                                      <th width=\\\"50%\\\">Name </th>\\r\\n                                      <th width=\\\"25\\\">Quantity</th>\\r\\n                                      <th width=\\\"25\\\">Price</th>\\r\\n                                  </tr>\\r\\n                              </thead>\\r\\n                              <tbody>\\r\\n                                  <tr *ngFor=\\\"let item of dataObj.orderDetails \\\">\\r\\n                                      <td> {{item.name}}\\r\\n                                          <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                              <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                          </tr>\\r\\n                                      </td>\\r\\n                                      <td> {{item.quantity}} </td>\\r\\n                                      <td> {{item.price}} </td>\\r\\n                                  </tr>\\r\\n                              </tbody>\\r\\n                          </table>\\r\\n                      </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n</div>    \\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n  </div> -->\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button> -->\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"5%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                        <td> {{item.orderNo}} </td>\\r\\n                        <td> {{item.transactionNo}} </td>\\r\\n                        <td> {{item.customerName}} </td>\\r\\n                        <td> {{item.customerMobile}} </td>\\r\\n                        <!-- <td> {{item.amountTotal | number : '1.2-2'}} </td>\\r\\n                        <td> {{item.tax | number : '1.2-2'}} </td>\\r\\n                        <td> {{item.serviceCharges | number : '1.2-2'}} </td> -->\\r\\n                        <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n                        <td>{{item.orderDate | date}}</td>\\r\\n                        <td><span class=\\\"badge badge-yellow\\\">{{item.orderType==1?\\\"Delivery\\\" :\\\"Pick Up\\\"}}</span></td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 102,'btn-warning': item.statusID === 101,'btn-success': item.statusID === 100, 'btn-danger':item.statusID === 103, 'btn-danger':item.statusID === 104 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Delivered' :\\r\\n                             item.statusID ==101 ? 'Confirmed' :\\r\\n                             item.statusID ==102 ? 'Prepared' :\\r\\n                             item.statusID ==103 ? 'On Delivery' :\\r\\n                             item.statusID ==104 ? 'Cancelled' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <!-- <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"open(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                            <a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Amenities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"amenitiesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Amenities Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                 \\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Amenities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Amenities List</h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-right\\\">\\r\\n          <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n            Add Amenities\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.arabicName}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.amenitiesID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Timings & Info</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Timings & Info Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\"> Branch Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=BranchName placeholder=\\\"\\\" formControlName=\\\"branchName\\\">\\r\\n                                <div *ngIf=\\\"f.branchName.invalid && (f.branchName.dirty || f.branchName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.branchName.errors.required\\\">\\r\\n                                       Branch Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Address</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchAddress placeholder=\\\"\\\" formControlName=\\\"branchAddress\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Discount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=deliveryNo placeholder=\\\"\\\" formControlName=\\\"deliveryNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Whatsapp No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=whatsappNo placeholder=\\\"\\\" formControlName=\\\"whatsappNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Timing </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchTiming placeholder=\\\"\\\" formControlName=\\\"branchTiming\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Discount Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"discountdescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Application Info</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                   \\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Application Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"appDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Facebook Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=facebook placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Twitter Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=twitter placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Instagram Link </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=instagram placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <!-- <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                 \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Banner Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                                    <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                                            Description is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Banner\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ title }}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismiss()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      {{ message }}\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{ btnCancelText }}</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"accept()\\\">{{ btnOkText }}</button>\\r\\n    </div>\\r\\n\";","export default \"\\r\\n<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Area\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">                      \\r\\n                        <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>                          \\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                     \\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.amount}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Discount</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"discountForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Discount Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Location</label>\\r\\n                  <ng-select [items]=\\\"LocationList\\\" bindLabel=\\\"name\\\" bindValue=\\\"locationID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedLocationID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">From Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" placeholder=\\\"\\\" formControlName=\\\"fromDate\\\" required>\\r\\n                  <div *ngIf=\\\"f.fromDate.invalid && (f.fromDate.dirty || f.fromDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fromDate.errors.required\\\">\\r\\n                      From Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">To Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" placeholder=\\\"\\\" formControlName=\\\"toDate\\\" required>\\r\\n                  <div *ngIf=\\\"f.toDate.invalid && (f.toDate.dirty || f.toDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.toDate.errors.required\\\">\\r\\n                      To Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">From Time</label>\\r\\n                  <ngb-timepicker [(ngModel)]=\\\"fromTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">To Time</label>\\r\\n                  <ngb-timepicker [(ngModel)]=\\\"toTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n\\r\\n              <app-alternateimage></app-alternateimage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Discount</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Discount List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n          <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Discount\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From  </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To  </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.fromDate | date}} </td>\\r\\n            <td> {{item.toDate | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.discountID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n     <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n            <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n            </ngb-pagination>\\r\\n        </div>\\r\\n    </div> \\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Landmark</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"landmarkForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Landmark Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                 \\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Landmark</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Landmark List</h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-right\\\">\\r\\n          <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n            Add Landmark\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>   \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>                                                                                           \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.arabicName}} </td>\\r\\n                      \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.landmarkID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Services</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"serviceForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Service Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=serviceTitle placeholder=\\\"\\\" formControlName=\\\"serviceTitle\\\">\\r\\n                                <div *ngIf=\\\"f.serviceTitle.invalid && (f.serviceTitle.dirty || f.serviceTitle.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.serviceTitle.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicServiceTitle placeholder=\\\"\\\" formControlName=\\\"arabicServiceTitle\\\">\\r\\n                                \\r\\n                            </div>\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"serviceDescription\\\" placeholder=\\\"\\\" formControlName=\\\"serviceDescription\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicServiceDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicServiceDescription\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Display Order</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"displayOrder\\\" placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group  \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Services</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Service List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n          <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Services\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"serviceTitle\\\" (sort)=\\\"onSort($event)\\\"> Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"arabicServiceTitle\\\" (sort)=\\\"onSort($event)\\\"> Arr Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"serviceDescription\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"arabicServiceDescription\\\" (sort)=\\\"onSort($event)\\\">Arr Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.serviceTitle}} </td>\\r\\n            <td> {{item.arabicServiceTitle}} </td>\\r\\n            <td> {{item.serviceDescription}} </td>\\r\\n            <td> {{item.arabicServiceDescription}} </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.serviceID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n              <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"settingForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Setting Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=title placeholder=\\\"\\\" formControlName=\\\"title\\\">\\r\\n              <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                  Title is required.\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicTitle placeholder=\\\"\\\" formControlName=\\\"arabicTitle\\\">\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Page Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pageName\\\" placeholder=\\\"\\\" formControlName=\\\"pageName\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Display Order</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"displayOrder\\\" placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Location</label>\\r\\n                  <ng-select [items]=\\\"LocationList\\\" bindLabel=\\\"name\\\" bindValue=\\\"locationID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedLocationID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n\\r\\n              <app-alternateimage></app-alternateimage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Setting List</h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <!--<div class=\\\" col-lg-12 input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n          </div>-->\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-right\\\">\\r\\n          <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n            Add Setting\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"title\\\" (sort)=\\\"onSort($event)\\\"> Title </th>   \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicTitle\\\" (sort)=\\\"onSort($event)\\\"> Arabic Title </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicDescription\\\" (sort)=\\\"onSort($event)\\\"> Arabic description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"pageName\\\" (sort)=\\\"onSort($event)\\\"> Page Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>                        \\r\\n                        <th width=\\\"5%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.title}} </td>\\r\\n                        <td> {{item.arabicTitle}} </td>\\r\\n                        <td> {{item.description}} </td>                        \\r\\n                        <td> {{item.arabicDescription}} </td>                        \\r\\n                        <td> {{item.pageName}} </td>\\r\\n                        <td> {{item.type}} </td>\\r\\n                        <td> {{item.displayOrder}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.id)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n         <!--<div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>--> \\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<router-outlet>\\r\\n\\r\\n</router-outlet>\\r\\n\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ alternateimageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\\r\\n\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\";","export default \"<body id=\\\"page-top\\\">\\r\\n  <!-- Page Wrapper -->\\r\\n  <div id=\\\"wrapper\\\">\\r\\n\\r\\n    <!-- Sidebar -->\\r\\n    <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n\\r\\n      <!-- Sidebar - Brand -->\\r\\n      <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n        <div class=\\\"sidebar-brand-icon\\\">\\r\\n          <img src=\\\"../../assets/img/logo-garage.svg\\\" style=\\\"width: 40%;\\\" />\\r\\n        </div>\\r\\n      </a>\\r\\n\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider my-0\\\">\\r\\n\\r\\n      <!-- Nav Item - Dashboard -->\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n          <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n\\r\\n      <!-- Heading -->\\r\\n      <div class=\\\"sidebar-heading\\\">\\r\\n        Modules\\r\\n      </div>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n          <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n          <span>Settings</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/discount']\\\">Discount</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/services']\\\">Services</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/amenities']\\\">Amenities</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/location']\\\">Locations</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/landmarks']\\\">Landmarks</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/setting']\\\">Setting</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCarSell\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCarSell\\\">\\r\\n          <i class=\\\"fas fa-fw fa-car-side\\\"></i>\\r\\n          <span>Car Sell</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCarSell\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/bodytype']\\\">Body Type List</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/features']\\\">Features List</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/carsell']\\\">Car Sell List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseReviews\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseReviews\\\">\\r\\n          <i class=\\\"fas fa-fw fa-receipt\\\"></i>\\r\\n          <span>Customer Reviews</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseReviews\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reviews']\\\">Reviews List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!--<hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCars\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCars\\\">\\r\\n          <i class=\\\"fas fa-fw fa-car-alt\\\"></i>\\r\\n          <span>Cars</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCars\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/cars']\\\">Car's List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>-->\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseBlogs\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseBlogs\\\">\\r\\n          <i class=\\\"fas fa-fw fa-blog\\\"></i>\\r\\n          <span>Blogs</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseBlogs\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/blog']\\\">Blog's</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n\\r\\n      <!-- Sidebar Toggler (Sidebar) -->\\r\\n      <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n        <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n      </div>\\r\\n\\r\\n    </ul>\\r\\n    <!-- End of Sidebar -->\\r\\n    <!-- Content Wrapper -->\\r\\n    <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n\\r\\n      <!-- Main Content -->\\r\\n      <div id=\\\"content\\\">\\r\\n\\r\\n        <!-- Topbar -->\\r\\n        <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n\\r\\n          <!-- Sidebar Toggle (Topbar) -->\\r\\n          <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n          </button>\\r\\n\\r\\n\\r\\n\\r\\n          <!-- Topbar Navbar -->\\r\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\r\\n            <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n              <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">Administrator</span>\\r\\n                <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n              </a>\\r\\n              <!-- Dropdown - User Information -->\\r\\n              <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                  <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n                </a>\\r\\n              </div>\\r\\n            </li>\\r\\n\\r\\n          </ul>\\r\\n\\r\\n        </nav>\\r\\n        <!-- End of Topbar -->\\r\\n        <!-- Begin Page Content -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- End of Main Content -->\\r\\n      <!-- Footer -->\\r\\n      <footer class=\\\"sticky-footer bg-white\\\">\\r\\n        <div class=\\\"container my-auto\\\">\\r\\n          <div class=\\\"copyright text-center my-auto\\\">\\r\\n            <span>Copyright &copy; Garage 2022</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- End of Footer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- End of Content Wrapper -->\\r\\n\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-5\\\">\\r\\n                                    <img src=\\\"../../assets/img/logo-garage.svg\\\" style=\\\"height:110px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">GarageCustomerAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n    console.log('worksheet',worksheet);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n}","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class CarSells {\r\n  carSellID:number;\r\n  customerID:number;\r\n  customerPhone:string;\r\n  name:string;\r\n  description:string;\r\n  registrationNo: string;\r\n  bodyTypeID: number;\r\n  bodyType:string;\r\n  features:string;\r\n  fuelType:string;\r\n  engineType:string;\r\n  kilometer:number;\r\n  year:string;\r\n  makeID:number;\r\n  modelID:number;\r\n  makeName:string;\r\n  modelName:string;\r\n  transmition:string;\r\n  price:number;\r\n  isInspected:boolean;\r\n  cityID:number;\r\n  countryID:string;\r\n  address:string;\r\n  carSellAddID:number;\r\n  bodyColor:string;\r\n  assembly:string;\r\n  reason:string;\r\n  statusID:number;\r\n  createdBy:number;\r\n  createdDate:string;\r\n  updatedBy:number;   \r\n}\r\nexport class CarSellImages {\r\n  id: number;\r\n  carSellID: number;\r\n  image: string;\r\n  statusID: number;\r\n\r\n}\r\nexport class Customers {\r\n  customerID: number;\r\n  fullName: string;\r\n  email: string;\r\n  mobile: string;\r\n  city: string;\r\n  password: string;\r\n  image: string;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n}\r\n\r\nexport class Make {\r\n  makeID: number;\r\n  rowID: number;\r\n  name: string;\r\n  aArabicName: string;\r\n  imagePath: string;\r\n  lastUpdatedBy: string;\r\n  lastUpdatedDate: string;\r\n  statusID: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n  displayOrder: number;\r\n}\r\nexport class Models {\r\n  modelID: number;\r\n  rowID: number;\r\n  makeID: number;\r\n  name: string;\r\n  arabicName: string;\r\n  year: string;\r\n  engineNo: string;\r\n  recommendedLitres: string;\r\n  imagePath: string;\r\n  lastUpdatedBy: string;\r\n  lastUpdatedDate: string;\r\n  statusID: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n}\r\nexport class Country {\r\n  code: string;\r\n  name: string;\r\n}\r\nexport class City {\r\n  id: number;\r\n  name: string;\r\n}\r\nexport class Feature {\r\n  featureID: number;\r\n  name: string;\r\n}\r\n","export class DashboardSummary {\r\n  totalService: number;\r\n  totalLocation: number;\r\n  totalFeature: number;\r\n  totalCarsell: number;\r\n}\r\n","export class Orders {\r\n  customerID: number;\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  orderDetailModifier: OrderDetailModifiers[]\r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Report {\r\n\r\n}\r\n\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  tax: number;\r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Amenities } from '../_models/Amenities';\r\n\r\n\r\ninterface SearchAmenitiesResult {\r\n  data: Amenities[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Amenities[], column: SortColumn, direction: string): Amenities[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Amenities, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AmenitiesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Amenities[]>([]);\r\n  private _data$ = new BehaviorSubject<Amenities[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Amenities: Amenities[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Amenities[]>(`api/amenities/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/amenities/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Amenities[]>(url).subscribe(res => {\r\n        this.Amenities = res;\r\n         \r\n        this._data$.next(this.Amenities);\r\n        this._allData$.next(this.Amenities);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAmenitiesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Amenities, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/amenities/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/amenities/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/amenities/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchCategoryResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(brandId) {\r\n    return this.http.get<Appsetting[]>(`api/About/brand/${brandId}`);\r\n  }\r\n\r\n  \r\n  // getAllData(brandId) {\r\n\r\n  //   const url = `api/category/all/${brandId}`;\r\n  //   console.log(url);\r\n  //   tap(() => this._loading$.next(true)),\r\n  //     this.http.get<Category[]>(url).subscribe(res => {\r\n  //       this.categories = res;\r\n  //         debugger\r\n  //       this._data$.next(this.categories);\r\n  //       this._allData$.next(this.categories);\r\n\r\n  //       this._search$.pipe(\r\n  //         switchMap(() => this._search()),\r\n  //         tap(() => this._loading$.next(false))\r\n  //       ).subscribe(result => {\r\n  //         // this._data$.next(result.data);\r\n  //         this._total$.next(result.total);\r\n  //       });\r\n\r\n  //       this._search$.next();\r\n  //     });\r\n  // }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n \r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/About/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/About/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id, brandId) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/banner/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        debugger\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { BlogImages_Junc, Blog, Country } from '../_models/Blog';\r\nimport { City } from '../_models/Blog';\r\n\r\ninterface SearchBlogResult {\r\n  data: Blog[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Blog[], column: SortColumn, direction: string): Blog[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Blog, term: string) {\r\n\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BlogService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Blog[]>([]);\r\n  private _data$ = new BehaviorSubject<Blog[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public blogs: Blog[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/blog/${id}`);\r\n  }\r\n  getblogId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/blog/blogid/${id}`);\r\n  }\r\n\r\n  getAllData(fromDate, toDate) {\r\n    debugger\r\n    const url = `api/blog/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Blog[]>(url).subscribe(res => {\r\n        this.blogs = res;\r\n           \r\n        this._data$.next(this.blogs);\r\n        this._allData$.next(this.blogs);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBlogResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.blogs, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/blog/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadBlogImages(id) {\r\n    debugger\r\n    return this.http.get<BlogImages_Junc[]>(`api/blog/images/${id}`);\r\n  }\r\n  loadCountry() {\r\n    return this.http.get<Country[]>(`api/blog/allCountry`);\r\n  }\r\n  loadCity(event) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/blog/allCity/${event}`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/blog/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(blogs) {\r\n    debugger\r\n    return this.http.post(`api/blog/updatestatus`, blogs)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/blog/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { BodyType } from '../_models/BodyType';\r\n\r\ninterface SearchBodyTypeResult {\r\n  data: BodyType[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: BodyType[], column: SortColumn, direction: string): BodyType[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: BodyType, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BodyTypeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<BodyType[]>([]);\r\n  private _data$ = new BehaviorSubject<BodyType[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public bodytype: BodyType[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList() {\r\n    return this.http.get<BodyType[]>(`api/bodyType/all/`);\r\n  }\r\n  getById(id) {\r\n    \r\n    return this.http.get<BodyType[]>(`api/bodyType/${id}/brand/`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/bodyType/all/`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<BodyType[]>(url).subscribe(res => {\r\n        this.bodytype = res;\r\n           \r\n        this._data$.next(this.bodytype);\r\n        this._allData$.next(this.bodytype);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBodyTypeResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.bodytype, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/bodyType/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/bodyType/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/bodyType/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Cars, CarsImages } from '../_models/Cars';\r\nimport { Features } from '../_models/Feature';\r\nimport { City } from '../_models/City';\r\nimport { BodyType } from '../_models/BodyType';\r\nimport { Customers, Make, Models } from '../_models/Cars';\r\n\r\n\r\ninterface SearchCarsResult {\r\n  data: Cars[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Cars[], column: SortColumn, direction: string): Cars[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Cars, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Cars[]>([]);\r\n  private _data$ = new BehaviorSubject<Cars[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public cars: Cars[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/cars/${id}`);\r\n  }\r\n  getcarId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/cars/carsellid/${id}`);\r\n  }\r\n\r\n  getAllData() {\r\n\r\n    const url = `api/cars/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Cars[]>(url).subscribe(res => {\r\n        this.cars = res;\r\n           \r\n        this._data$.next(this.cars);\r\n        this._allData$.next(this.cars);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCarsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.cars, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/cars/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadCarsImages(id) {\r\n    debugger\r\n    return this.http.get<CarsImages[]>(`api/cars/images/${id}`);\r\n  }\r\n  loadBodyType() {\r\n    return this.http.get<BodyType[]>(`api/bodytype/all`);\r\n  }\r\n  loadMake() {\r\n    debugger\r\n    return this.http.get<Make[]>(`api/carsell/allMake`);\r\n  }\r\n  loadModel(event) {\r\n    return this.http.get<Models[]>( `api/carsell/allModel/${event}`);\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/cars/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(cars) {\r\n    debugger\r\n    return this.http.post(`api/carsell/updatestatus`, cars)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  } \r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { CarSellImages, CarSells } from '../_models/CarSell';\r\nimport { Features } from '../_models/Feature';\r\nimport { City } from '../_models/City';\r\nimport { BodyType } from '../_models/BodyType';\r\nimport { Customers, Make, Models } from '../_models/CarSell';\r\n\r\n\r\ninterface SearchCarSellResult {\r\n  data: CarSells[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: CarSells[], column: SortColumn, direction: string): CarSells[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: CarSells, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarSellService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<CarSells[]>([]);\r\n  private _data$ = new BehaviorSubject<CarSells[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public carsells: CarSells[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/carsell/${id}`);\r\n  }\r\n  getcarId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/carsell/carsellid/${id}`);\r\n  }\r\n  printorder(id) {\r\n    return this.http.get<CarSells[]>(`api/orders/print/${id}`);\r\n  }\r\n  //getAllData(fromDate,toDate) {\r\n  getAllData() {\r\n\r\n    //const url = `api/carsell/all/${fromDate}/${toDate}`;\r\n    const url = `api/carsell/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<CarSells[]>(url).subscribe(res => {\r\n        this.carsells = res;\r\n           \r\n        this._data$.next(this.carsells);\r\n        this._allData$.next(this.carsells);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCarSellResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.carsells, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/carsell/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadCarSellImages(id) {\r\n    debugger\r\n    return this.http.get<CarSellImages[]>( `api/carsell/images/${id}`);\r\n  }\r\n  loadFeature() {\r\n    return this.http.get<Features[]>( `api/feature/all`);\r\n  }\r\n  loadBodyType() {\r\n    return this.http.get<BodyType[]>(`api/bodytype/all`);\r\n  }\r\n  loadMake() {\r\n    return this.http.get<Make[]>( `api/carsell/allMake`);\r\n  }\r\n  loadModel(event) {\r\n    return this.http.get<Models[]>( `api/carsell/allModel/${event}`);\r\n  }\r\n  loadCountry() {\r\n    return this.http.get<Features[]>( `api/carsell/allCountry`);\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  loadCity(event) {\r\n    return this.http.get<any[]>( `api/carsell/allCity/${event}`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/carsell/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(carsell) {\r\n    return this.http.post(`api/carsell/updatestatus`, carsell)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  } \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/customer/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/customer/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Location } from '../_models/Location';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\nimport { State } from '../_models/State';\r\n\r\ninterface SearchDashboardResult {\r\n  data: DashboardSummary[];\r\n  total: number;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DashboadService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public dashboard: DashboardSummary[];\r\n\r\n  GetDashboard(locationID, date) {\r\n    var today = date;\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + dd + '-' + mm;\r\n    return this.http.get<any[]>(`api/dashboard/get/${locationID}/${today}`);\r\n  }\r\n\r\n  GetDashboardRange(locationID, fdate,tdate) {\r\n    return this.http.get<any[]>(`api/dashboard/range/get/${locationID}/${fdate}/${tdate}`);\r\n  }\r\n\r\n  getAllData() {\r\n    return this.http.get<any[]>(`api/dashboard/all`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData(brandId) {\r\n\r\n    const url = `api/delivery/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Discount } from '../_models/Discount';\r\n\r\n\r\ninterface SearchDiscountResult {\r\n  data: Discount[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Discount[], column: SortColumn, direction: string): Discount[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Discount, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DiscountService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Discount[]>([]);\r\n  private _data$ = new BehaviorSubject<Discount[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Discount: Discount[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Discount[]>(`api/discount/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/discount/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Discount[]>(url).subscribe(res => {\r\n        this.Discount = res;\r\n       \r\n        this._data$.next(this.Discount);\r\n        this._allData$.next(this.Discount);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDiscountResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Discount, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/discount/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/discount/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/discount/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Features } from '../_models/Feature';\r\n\r\n\r\ninterface SearchFeatureResult {\r\n  data: Features[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Features[], column: SortColumn, direction: string): Features[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Features, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FeaturesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Features[]>([]);\r\n  private _data$ = new BehaviorSubject<Features[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Feature: Features[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Features[]>(`api/feature/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/feature/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Features[]>(url).subscribe(res => {\r\n        this.Feature = res;\r\n         \r\n        this._data$.next(this.Feature);\r\n        this._allData$.next(this.Feature);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchFeatureResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Feature, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/feature/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/feature/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/feature/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Landmark } from '../_models/Landmark';\r\n\r\n\r\n\r\ninterface SearchLandmarkResult {\r\n  data: Landmark[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Landmark[], column: SortColumn, direction: string): Landmark[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Landmark, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LandmarkService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Landmark[]>([]);\r\n  private _data$ = new BehaviorSubject<Landmark[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Landmark: Landmark[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Landmark[]>(`api/landmark/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/landmark/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Landmark[]>(url).subscribe(res => {\r\n        this.Landmark = res;\r\n         \r\n        this._data$.next(this.Landmark);\r\n        this._allData$.next(this.Landmark);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLandmarkResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Landmark, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/landmark/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/landmark/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/landmark/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location, LocationImages, LocationTimings } from '../_models/Location';\r\nimport { Amenities } from '../_models/Amenities';\r\nimport { Services } from '../_models/Services';\r\nimport { Landmark } from '../_models/Landmark';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id) {   \r\n    return this.http.get<Location[]>(`api/location/${id}`);\r\n  }\r\n  getAllLocations() {\r\n    return this.http.get<Location[]>(`api/location/all`);\r\n  }\r\n  getAllData() {\r\n    \r\n    const url = `api/location/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  loadLocationImages(id) {\r\n    return this.http.get<LocationImages[]>( `api/location/images/${id}`);\r\n  }\r\n  loadTimings(id) {\r\n    return this.http.get<LocationTimings[]>(`api/location/loadTimings/${id}`);\r\n  }\r\n  loadAmenities() {\r\n    return this.http.get<Amenities[]>( `api/amenities/all`);\r\n  }\r\n  loadService() {\r\n    return this.http.get<Services[]>( `api/service/all`);\r\n  }\r\n  loadLandmark() {\r\n    return this.http.get<Landmark[]>( `api/landmark/all`);\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/location/insertlocation', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {  \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Offers } from '../_models/Offers';\r\n\r\n\r\ninterface SearchOffersResult {\r\n  data: Offers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Offers[], column: SortColumn, direction: string): Offers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Offers, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OffersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Offers[]>([]);\r\n  private _data$ = new BehaviorSubject<Offers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public offerss: Offers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Offers[]>(`api/offers/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/offers/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Offers[]>(url).subscribe(res => {\r\n        this.offerss = res;\r\n          \r\n        this._data$.next(this.offerss);\r\n        this._allData$.next(this.offerss);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOffersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.offerss, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/offers/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/offers/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/offers/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id,brandId) {\r\n    return this.http.get<any[]>(`api/orders/${id}/brand/${brandId}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(brandID,locationID,fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/${brandID}/${locationID}/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { SortColumn, SortDirection, State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalescategorywiseReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalescategorywiseReport[], column: SortColumn, direction: string): SalescategorywiseReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: SalescategorywiseReport, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salescategorywiseReport: SalescategorywiseReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    debugger;\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salescategorywiseReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesDetailRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { reviews } from '../_models/Reviews';\r\n\r\n\r\ninterface SearchReviewsResult {\r\n  data: reviews[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: reviews[], column: SortColumn, direction: string): reviews[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: reviews, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReviewsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<reviews[]>([]);\r\n  private _data$ = new BehaviorSubject<reviews[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Review: reviews[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getAllData() {\r\n\r\n    const url = `api/reviews/all/`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<reviews[]>(url).subscribe(res => {\r\n        this.Review = res;\r\n        debugger\r\n        this._data$.next(this.Review);\r\n        this._allData$.next(this.Review);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchReviewsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Review, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Services } from '../_models/Services';\r\n\r\n\r\ninterface SearchAmenitiesResult {\r\n  data: Services[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Services[], column: SortColumn, direction: string): Services[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Services, term: string) {\r\n  debugger\r\n  return data.serviceTitle.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Services[]>([]);\r\n  private _data$ = new BehaviorSubject<Services[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Amenities: Services[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Services[]>(`api/service/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/service/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Services[]>(url).subscribe(res => {\r\n        this.Amenities = res;\r\n         \r\n        this._data$.next(this.Amenities);\r\n        this._allData$.next(this.Amenities);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAmenitiesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Amenities, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/service/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/service/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/service/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { setting } from '../_models/Setting';\r\n\r\n\r\ninterface SearchSettingResult {\r\n  data: setting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: setting[], column: SortColumn, direction: string): setting[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: setting, term: string) {\r\n  debugger\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<setting[]>([]);\r\n  private _data$ = new BehaviorSubject<setting[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Setting: setting[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<setting[]>(`api/setting/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/setting/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<setting[]>(url).subscribe(res => {\r\n        this.Setting = res;\r\n         \r\n        this._data$.next(this.Setting);\r\n        this._allData$.next(this.Setting);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchSettingResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Setting, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/setting/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/setting/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/setting/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Jsb2dzL2FkZC9hZGRibG9nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BlogService } from '../../../_services/blog.service';\r\n//import { EditorModule } from '@tinymce/tinymce-angular';\r\n/*import tinymce from 'tinymce';*/\r\ndeclare var tinymce: any;\r\n@Component({\r\n  selector: 'app-addblog',\r\n  templateUrl: './addblog.component.html',\r\n  styleUrls: ['./addblog.component.css']\r\n})\r\nexport class AddBlogComponent implements OnInit {\r\n  submitted = false;\r\n  blogForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  selectedCityID = [];\r\n  ButtonText = \"Save\";\r\n  datesstart: Date[];\r\n  datesend: Date[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public blogService: BlogService,\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBlog();\r\n    this.edtor();\r\n\r\n  }\r\n  getContentFromEditor(editorId: string): string {\r\n    return tinymce.get(editorId).getContent();\r\n  }\r\n\r\n  get f() { return this.blogForm.controls; }\r\n\r\n  private createForm() {\r\n    this.blogForm = this.formBuilder.group({\r\n      blogID: 0,\r\n      title: ['', Validators.required],\r\n      arabicTitle: [''],\r\n      description: ['', Validators.required],\r\n      arabicDescription: [''],\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required],\r\n      statusID: [1],\r\n      isFeatured: [false],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      blogImages: [],\r\n      city: [, Validators.required],\r\n      country: ['', Validators.required],\r\n      file: ['', Validators.required],\r\n      type: [''],\r\n      formattedStartDate: [''],\r\n      formattedEndDate: [''],\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.blogForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1; // Month indices are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    return formattedDate;\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n\r\n    const desc = tinymce.get(\"description\").setContent(obj.description);\r\n    const arabicDescription = tinymce.get(\"arabicDescription\").setContent(obj.arabicDescription);\r\n\r\n    this.f.title.setValue(obj.title);\r\n    this.f.arabicTitle.setValue(obj.arabicTitle);\r\n    this.f.description.setValue(desc);\r\n    this.f.arabicDescription.setValue(arabicDescription);\r\n    this.f.city.setValue(obj.city);\r\n    this.f.country.setValue(obj.country);\r\n\r\n    //const startDate = new Date(obj.startDate);\r\n    //const endDate = new Date(obj.endDate);\r\n\r\n    //const formattedStartDate = this.formatDate(startDate);\r\n    //const formattedEndDate = this.formatDate(endDate);\r\n\r\n    ////this.blogForm.get('formattedStartDate').setValue(formattedStartDate);\r\n    ////this.blogForm.get('formattedEndDate').setValue(formattedEndDate);\r\n    this.f.startDate.setValue(obj.startDate);\r\n    this.f.endDate.setValue(obj.endDate);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.blogID.setValue(obj.blogID);\r\n    this.f.statusID.setValue(obj.statusID);\r\n    this.loadBlogImages(this.f.blogID.value);\r\n\r\n    if (obj.country != \"\") {\r\n      this.blogService.loadCity(obj.country).subscribe((res: any) => {\r\n        this.CityList = res;\r\n      });\r\n    }\r\n  }\r\n  private loadBlogImages(id) {\r\n    debugger\r\n    this.blogService.loadBlogImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  edtor() {\r\n    tinymce.init(\r\n      {\r\n        selector: \"#description\",\r\n\r\n      });\r\n    tinymce.init(\r\n      {\r\n        selector: \"#arabicDescription\",\r\n\r\n      });\r\n  }\r\n\r\n  \r\n  private loadCountry() {\r\n    debugger\r\n    this.blogService.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.blogService.loadCity(value).subscribe((res: any) => {\r\n      this.CityList = res;\r\n    });\r\n  }\r\n  setSelectedBlog() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.blogID.setValue(sid);\r\n        this.blogService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    const description = this.getContentFromEditor('description');\r\n    const arabicDescription = this.getContentFromEditor('arabicDescription');\r\n    this.blogForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.description.setValue(description);\r\n    this.f.arabicDescription.setValue(arabicDescription);\r\n\r\n    if (this.blogForm.invalid) { return; }\r\n    this.loading = true;\r\n    if (parseInt(this.f.blogID.value) === 0) {\r\n      //Insert location\r\n      this.blogService.insert(this.blogForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/blog']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.blogService.update(this.blogForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/blog']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Jsb2dzL2Jsb2cuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Blog } from 'src/app/_models/Blog';\r\nimport { BlogService } from 'src/app/_services/blog.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { ConfirmationDialogService } from '../settings/confirm/confirmation-dialog.service';\r\n\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-bloglist',\r\n  templateUrl: './blog.component.html',\r\n  styleUrls: ['./blog.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class BloglistComponent implements OnInit {\r\n  data$: Observable<Blog[]>;\r\n  FeatureList =[];\r\n  oldData: Blog[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n\r\n  constructor(public service: BlogService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(BlogID) {\r\n     \r\n    this.router.navigate([\"admin/blog/edit\", BlogID]);\r\n  }\r\n\r\n  updateBlog(blog, status) {\r\n    debugger\r\n    blog.statusID = status;\r\n    this.service.update(blog).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/blog']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n     debugger\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n\r\n    if (await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true) {\r\n      this.service.delete(item).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n          this.getData();\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n    }\r\n    else { }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JvZHl0eXBlL2FkZC9hZGRib2R5VHlwZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BodyTypeService } from 'src/app/_services/bodyType.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addbodyType',\r\n  templateUrl: './addbodyType.component.html',\r\n  styleUrls: ['./addbodyType.component.css']\r\n})\r\nexport class AddbodyTypeComponent implements OnInit {\r\n  submitted = false;\r\n  bodytypeForm: FormGroup;\r\n  loading = false;\r\n  loadingbodyType = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private bodytypeService: BodyTypeService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelected();\r\n  }\r\n\r\n  get f() { return this.bodytypeForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bodytypeForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      displayOrder: [],\r\n      arabicName: [''],\r\n      statusID: [true],\r\n      bodyTypeID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelected() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingbodyType = true;\r\n        this.f.bodyTypeID.setValue(sid);\r\n        this.bodytypeService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingbodyType = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.bodytypeForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bodytypeForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.bodyTypeID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.bodytypeForm.value));\r\n      this.bodytypeService.insert(this.bodytypeForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/bodytype']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.bodytypeService.update(this.bodytypeForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/bodytype']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BodyType } from 'src/app/_models/BodyType';\r\nimport { BodyTypeService } from 'src/app/_services/bodyType.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { ConfirmationDialogService } from '../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-bodytype',\r\n  templateUrl: './bodytype.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class BodyTypeComponent implements OnInit {\r\n  data$: Observable<BodyType[]>;  \r\n  oldData: BodyType[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>; \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BodyTypeService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(bodytype) {\r\n        \r\n    this.router.navigate([\"admin/bodytype/edit\", bodytype]);\r\n  }\r\n\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n\r\n    if (await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true) {\r\n      this.service.delete(item).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n          this.getData();\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n    }\r\n    else { }\r\n  }\r\n\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnMvYWRkY2Fycy9hZGRjYXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarsService } from 'src/app/_services/cars.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { BodyTypeService } from '../../../../_services/bodyType.service';\r\n\r\n@Component({\r\n  selector: 'app-addcars',\r\n  templateUrl: './addcars.component.html',\r\n  styleUrls: ['./addcars.component.css']\r\n})\r\nexport class AddcarsComponent implements OnInit {\r\n  submitted = false;\r\n  carsForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  ModelList = [];\r\n  BodyTypeList = [];\r\n  CustomerList = [];\r\n  MakeList = [];\r\n  selectedBodyTypeID = [];\r\n  selectedModelID = [];\r\n  selectedMakeID = [];\r\n  YearList = ['2023', '2022', '2021', '2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990'];\r\n  ButtonText = \"Save\";\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private carsService: CarsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    //this.loadCarSellFeature();\r\n    this.loadBodyType();\r\n    this.loadMake();\r\n    //this.loadCustomer();\r\n    //this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCarSell();\r\n  }\r\n\r\n  get f() { return this.carsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.carsForm = this.formBuilder.group({\r\n      carID: 0,\r\n      rowID: [0],\r\n      customerID: [0],\r\n      customerPhone: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      vinNo: ['', Validators.required],\r\n      makeID: [, Validators.required],\r\n      modelID: [, Validators.required],\r\n      year: [, Validators.required],\r\n      color: ['', Validators.required],\r\n      registrationNo: ['', Validators.required],\r\n      checkLitre: [],\r\n      engineType: ['', Validators.required],\r\n      recommendedAmount: [''],\r\n      statusID: [1],\r\n      binaryImage: [''],\r\n      locationID: [, Validators.required],\r\n      userID: [, Validators.required],\r\n      gender: [''],\r\n      carType: ['', Validators.required],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      carsImages: [],\r\n      file: [''],\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.carsForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.customerPhone.setValue(obj.customerPhone);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.assembly.setValue(obj.assembly);\r\n    this.f.cityID.setValue(obj.cityID);\r\n    this.f.bodyColor.setValue(obj.bodyColor);\r\n    this.f.countryCode.setValue(obj.countryCode);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.transmition.setValue(obj.transmition);\r\n    this.f.modelID.setValue(obj.modelID);\r\n    this.f.makeID.setValue(obj.makeID);\r\n    this.f.year.setValue(obj.year);\r\n    this.f.checkLitre.setValue(obj.checkLitre);\r\n    this.f.kilometer.setValue(obj.kilometer);\r\n    this.f.fuelType.setValue(obj.fuelType);\r\n    this.f.engineType.setValue(obj.engineType);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.bodyType.setValue(obj.bodyType);\r\n    this.f.registrationNo.setValue(obj.registrationNo);\r\n    this.f.carSellID.setValue(obj.carSellID);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.statusID.setValue(obj.statusID === 1);\r\n    this.loadCarsImages(this.f.carsID.value);\r\n\r\n    if (obj.makeID != \"\") {\r\n      this.carsService.loadModel(obj.makeID).subscribe((res: any) => {\r\n        this.ModelList = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n\r\n  private loadMake() {\r\n    debugger\r\n    this.carsService.loadMake().subscribe((res: any) => {\r\n      this.MakeList = res;\r\n    });\r\n  }\r\n\r\n  onChange(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.carsService.loadModel(value).subscribe((res: any) => {\r\n      this.ModelList = res;\r\n    });\r\n  }\r\n  setSelectedCarSell() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.carSellID.setValue(sid);\r\n        this.carsService.getcarId(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  private loadCarsImages(id) {\r\n    debugger\r\n    this.carsService.loadCarsImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.carsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.carsForm.invalid) { return; }\r\n    this.loading = true;\r\n    //this.f.statusID.setValue(this.f.statusID.value === 1 ? true : false);\r\n    //this.f.features.setValue(this.selectedFeatureID == undefined ? \"\" : this.selectedFeatureID.toString());\r\n    if (parseInt(this.f.carSellID.value) === 0) {\r\n      //Insert location\r\n      this.carsService.insert(this.carsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    }\r\n    else {\r\n      //Update location\r\n      this.carsService.update(this.carsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  private loadBodyType() {\r\n    debugger\r\n    this.carsService.loadBodyType().subscribe((res: any) => {\r\n      this.BodyTypeList = res;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnMvY2Fyc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Cars } from 'src/app/_models/Cars';\r\nimport { CarsService } from 'src/app/_services/cars.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n//import { NgbdModalContent } from '../../sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-carslist',\r\n  templateUrl: './carslist.component.html',\r\n  styleUrls: ['./carslist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CarslistComponent implements OnInit {\r\n  data$: Observable<Cars[]>;\r\n  oldData: Cars[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n  \r\n  constructor(public service: CarsService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(carID) {\r\n     \r\n    this.router.navigate([\"admin/cars/edit\", carID]);\r\n  }\r\n\r\n  updateCars(cars, status) {\r\n    debugger\r\n    cars.statusID = status;\r\n    //Update customer\r\n    this.service.update(cars).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/cars']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n    debugger\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarSells, CarSellImages, Customers, Make, Models, Country, City, Feature } from 'src/app/_models/CarSell';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-carselldetails',\r\n  templateUrl: './carselldetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class CarSelldetailsComponent implements OnInit {\r\n  public carsell = new CarSells();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  reason = [\"\"];\r\n  public customerInfo = new Customers();\r\n  public makeInfo = new Make();\r\n  public modelInfo = new Models();\r\n  public countryInfo = new Country();\r\n  public cityInfo = new City();\r\n  public featureInfo = new Feature();\r\n  public images = new CarSellImages();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: CarSellService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loadCarSellImages(this.carsell.carSellID);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n  setSelectedOrder() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(carsell, status) {\r\n    debugger\r\n    carsell.statusID = status;\r\n    carsell.reason = this.reason;\r\n\r\n    //Update customer\r\n    this.service.updatestatus(carsell).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/carsell']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.carsell = obj.carsell;\r\n    this.customerInfo = obj.customer;\r\n    this.makeInfo = obj.make;\r\n    this.modelInfo = obj.model;\r\n    this.countryInfo = obj.country;\r\n    this.cityInfo = obj.city;\r\n    this.featureInfo = obj.feature;\r\n    this.images = obj.image;\r\n  }\r\n  private loadCarSellImages(carsell) {\r\n    debugger\r\n    this.service.loadCarSellImages(carsell).subscribe((res: any) => {\r\n      this.images = res;\r\n      //this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnNlbGwvY2Fyc2VsbGxpc3QvYWRkY2Fyc2VsbC9hZGRjYXJzZWxsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BodyTypeService } from '../../../../_services/bodyType.service';\r\n\r\n@Component({\r\n  selector: 'app-addcarsell',\r\n  templateUrl: './addcarsell.component.html',\r\n  styleUrls: ['./addcarsell.component.css']\r\n})\r\nexport class AddcarsellComponent implements OnInit {\r\n  submitted = false;\r\n  carSellForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  FeaturesList = [];\r\n  BodyTypeList = [];\r\n  ModelList = [];\r\n  CustomerList = [];\r\n  MakeList = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  selectedFeatureID: [];\r\n  selectedBodyTypeID = [];\r\n  selectedModelID = [];\r\n  selectedMakeID = [];\r\n  selectedCityID = [];\r\n  YearList = ['2023', '2022', '2021', '2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990'];\r\n  ButtonText = \"Save\";\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private carsellService: CarSellService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCarSellFeature();\r\n    this.loadBodyType();\r\n    this.loadMake();\r\n    //this.loadCustomer();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCarSell();\r\n  }\r\n\r\n  get f() { return this.carSellForm.controls; }\r\n\r\n  private createForm() {\r\n    this.carSellForm = this.formBuilder.group({\r\n      carSellID: 0,\r\n      customerID: [0],\r\n      customerPhone: [''],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      statusID: [1],\r\n      createdBy: [],\r\n      updatedBy: [],\r\n      isInspected: [false],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      carsellImages: [],\r\n      featureID: [null],\r\n      features: [],\r\n      registrationNo: ['', Validators.required],\r\n      bodyTypeID: ['', Validators.required],\r\n      bodyType: [''],\r\n      fuelType: ['', Validators.required],\r\n      engineType: ['', Validators.required],\r\n      kilometer: [0, Validators.required],\r\n      year: ['2023', Validators.required],\r\n      makeID: [, Validators.required],\r\n      modelID: [, Validators.required],\r\n      transmition: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      cityID: [, Validators.required],\r\n      countryCode: ['', Validators.required],\r\n      carSellAddID: 0,\r\n      bodyColor: ['', Validators.required],\r\n      assembly: ['', Validators.required],\r\n      file: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.carSellForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.customerPhone.setValue(obj.customerPhone);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.assembly.setValue(obj.assembly);\r\n\r\n    this.f.bodyColor.setValue(obj.bodyColor);\r\n    this.f.countryCode.setValue(obj.countryCode);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.transmition.setValue(obj.transmition);\r\n    this.f.modelID.setValue(obj.modelID);\r\n    this.f.makeID.setValue(obj.makeID);\r\n    this.f.year.setValue(obj.year);\r\n    this.f.kilometer.setValue(obj.kilometer);\r\n    this.f.fuelType.setValue(obj.fuelType);\r\n    this.f.engineType.setValue(obj.engineType);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.bodyType.setValue(obj.bodyType);\r\n    this.f.registrationNo.setValue(obj.registrationNo);\r\n    this.f.carSellID.setValue(obj.carSellID);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.statusID.setValue(obj.statusID === 1);\r\n    this.loadCarSellImages(this.f.carSellID.value);\r\n    if (obj.features != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.features;\r\n      this.selectedFeatureID = stringToConvert.split(',').map(Number);\r\n      this.f.features.setValue(obj.features);\r\n    }\r\n    if (obj.countryCode != \"\") {\r\n      //this.carsellService.loadCity(obj.countryCode).subscribe((res: any) => {\r\n      //  this.CityList = res;\r\n      //  this.f.cityID.setValue(obj.cityID);\r\n      //});\r\n      this.loadCity(obj.countryCode, 1);\r\n    }\r\n    if (obj.makeID != \"\") {\r\n      this.carsellService.loadModel(obj.makeID).subscribe((res: any) => {\r\n        this.ModelList = res;\r\n      });\r\n    }\r\n  }\r\n  private loadCarSellImages(id) {\r\n    debugger\r\n    this.carsellService.loadCarSellImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  private loadCarSellFeature() {\r\n    this.carsellService.loadFeature().subscribe((res: any) => {\r\n      this.FeaturesList = res;\r\n    });\r\n  }\r\n  private loadBodyType() {\r\n    this.carsellService.loadBodyType().subscribe((res: any) => {\r\n      this.BodyTypeList = res;\r\n    });\r\n  }\r\n\r\n  private loadMake() {\r\n    this.carsellService.loadMake().subscribe((res: any) => {\r\n      this.MakeList = res;\r\n    });\r\n  }\r\n  private loadCountry() {\r\n    debugger\r\n    this.carsellService.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n      if (!this.CountryList || this.CountryList.length === 0) {\r\n        this.CountryList = [{ name: 'Saudia Arabia', code: 'SA' }];\r\n      }\r\n      this.f.countryCode.setValue('SA');\r\n      this.loadCity(this.f.countryCode.value, 0);\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n  }\r\n  loadCity(obj, type) {\r\n    this.carsellService.loadCity(obj).subscribe((res: any) => {\r\n      this.CityList = res;\r\n      if (type == 0)\r\n        this.f.cityID.setValue(res[0].id);\r\n\r\n    });\r\n  }\r\n  onChange(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.carsellService.loadModel(value).subscribe((res: any) => {\r\n      this.ModelList = res;\r\n    });\r\n  }\r\n  setSelectedCarSell() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.carSellID.setValue(sid);\r\n        this.carsellService.getcarId(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.carSellForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.carSellForm.invalid) { return; }\r\n    this.loading = true;\r\n    //this.f.statusID.setValue(this.f.statusID.value === 1 ? true : false);\r\n    this.f.features.setValue(this.selectedFeatureID == undefined ? \"\" : this.selectedFeatureID.toString());\r\n    if (parseInt(this.f.carSellID.value) === 0) {\r\n      //Insert location\r\n      this.carsellService.insert(this.carSellForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.carsellService.update(this.carSellForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnNlbGwvY2Fyc2VsbGxpc3QvY2Fyc2VsbGxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CarSells } from 'src/app/_models/CarSell';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { NgbdModalContent } from '../../sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-carselllist',\r\n  templateUrl: './carselllist.component.html',\r\n  styleUrls: ['./carselllist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CarselllistComponent implements OnInit {\r\n  data$: Observable<CarSells[]>;\r\n  FeatureList =[];\r\n  oldData: CarSells[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n  \r\n  constructor(public service: CarSellService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    //this.loadLocations();\r\n  }\r\n  ngOnInit() {\r\n    //const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    //this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(CarSellID) {\r\n     \r\n    this.router.navigate([\"admin/carsell/edit\", CarSellID]);\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/carsell']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  //UpdateStatus(item, status) {\r\n  //  debugger\r\n  //  item.statusID = status;\r\n  //  //Update customer\r\n  //  this.service.updatestatus(item).subscribe(data => {\r\n\r\n  //    if (data != 0) {\r\n  //      this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n  //      this.router.navigate(['/admin/carsell']);\r\n  //    }\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to update record.\")\r\n  //  });\r\n  //}\r\n  \r\n\r\n  getData() {\r\n     debugger\r\n    this.service.getAllData();//(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(carsell) {\r\n    this.router.navigate([\"admin/carselldetails/view\", carsell]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      debugger\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n        debugger\r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LocationTimings } from '../../../../_models/Location';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { ImageuploadComponent } from '../../../../imageupload/imageupload.component';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  Images = [];\r\n  Image = [];\r\n  AmenitiesList = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  ServiceList = [];\r\n  LandmarkList = [];\r\n  Items = [];\r\n  selectedAmenitiesID = [];\r\n  selectedServiceID = [];\r\n  selectedLandmarkID = [];\r\n  ButtonText = \"Save\";\r\n  timings = [];\r\n  public locationTimings: Array<Object> = [\r\n    { name: 'Sunday', time: '' },\r\n    { name: 'Monday', time: '' },\r\n    { name: 'Tuesday', time: '' },\r\n    { name: 'Wednesday', time: '' },\r\n    { name: 'Thursday', time: '' },\r\n    { name: 'Friday', time: '' },\r\n    { name: 'Saturday', time: '' }\r\n  ];\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService,\r\n    private service: CarSellService,\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadAmenities();\r\n    this.loadService();\r\n    this.loadLandmark();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n\r\n  private createForm() {\r\n\r\n    this.locationForm = this.formBuilder.group({\r\n      locationID: 0,\r\n      userID: 0,\r\n      name: ['', Validators.required],\r\n      descripiton: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      arabicAddress: [''],\r\n      contactNo: ['', Validators.required],\r\n      arabicName: [''],\r\n      arabicDescription: [''],\r\n      email: ['', Validators.required],\r\n      minOrderAmount: [0],\r\n      latitude: ['', Validators.required],\r\n      longitude: ['', Validators.required],\r\n      statusID: [1],\r\n      customerStatusID: [1],\r\n      landmarkID: [],\r\n      gmaplink: [''],\r\n      lastUpdatedBy: [''],\r\n      lastUpdatedDate: [''],\r\n      isFeatured: false,\r\n      file: [''],\r\n      imagesSource: [''],\r\n      locationImages: [],\r\n      amenities: [],\r\n      service: [],\r\n      amenitiesID: [null],\r\n      serviceID: [null],\r\n      locationTimings: [],\r\n      cityID: 0,\r\n      countryID: ['', Validators.required],\r\n      brandThumbnailImage: [''],\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.locationForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.arabicAddress.setValue(obj.arabicAddress);\r\n    this.f.descripiton.setValue(obj.descripiton);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);\r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);\r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.userID.setValue(obj.userID);\r\n    this.f.gmaplink.setValue(obj.gmaplink);\r\n    this.f.landmarkID.setValue(obj.landmarkID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.customerStatusID.setValue(obj.customerStatusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured === 1 ? true : false);\r\n\r\n    this.f.brandThumbnailImage.setValue(obj.brandThumbnailImage);\r\n    this.imgComp.imageUrl = obj.brandThumbnailImage;\r\n\r\n    this.loadItemImages(this.f.locationID.value);\r\n    this.f.locationTimings.setValue(obj.locationTimings);\r\n    this.locationTimings = obj.locationTimings;\r\n    this.f.brandThumbnailImage.setValue(obj.brandThumbnailImage);\r\n\r\n    if (obj.amenities != \"\") {\r\n      var stringToConvert = obj.amenities;\r\n      this.selectedAmenitiesID = stringToConvert.split(',').map(Number);\r\n      this.f.amenities.setValue(obj.amenities);\r\n    }\r\n    if (obj.service != \"\") {\r\n      var stringToConvert = obj.service;\r\n      this.selectedServiceID = stringToConvert.split(',').map(Number);\r\n      this.f.service.setValue(obj.service);\r\n    }\r\n\r\n    this.f.cityID.setValue(obj.cityID);\r\n    if (obj.countryID != \"\") {\r\n      this.loadCity(obj.countryID, 1);\r\n    }\r\n\r\n  }\r\n  private loadCountry() {\r\n    this.service.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n      if (!this.CountryList || this.CountryList.length === 0) {\r\n        this.CountryList = [{ name: 'Saudia Arabia', code: 'SA' }];\r\n      }\r\n      this.f.countryID.setValue('SA');\r\n      this.loadCity(this.f.countryID.value, 0);\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    debugger\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    this.loadCity(value, 1);\r\n    console.log(index);\r\n    console.log(value);\r\n  }\r\n  loadCity(obj, type) {\r\n    debugger\r\n    this.service.loadCity(obj).subscribe((res: any) => {\r\n      this.CityList = res;\r\n      //debugger\r\n      //if (type == 0)\r\n      //  this.f.cityID.setValue(res[0].id);\r\n      //else if (type == 1)\r\n      //  debugger\r\n      //  //var cityID = this.f.cityID;\r\n      //this.f.cityID.setValue(this.f.cityID);\r\n    });\r\n  }\r\n  private loadItemImages(id) {\r\n    this.locationService.loadLocationImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  private loadAmenities() {\r\n    this.locationService.loadAmenities().subscribe((res: any) => {\r\n      this.AmenitiesList = res;\r\n    });\r\n  }\r\n  private loadService() {\r\n    this.locationService.loadService().subscribe((res: any) => {\r\n      this.ServiceList = res;\r\n    });\r\n  }\r\n  private loadLandmark() {\r\n    this.locationService.loadLandmark().subscribe((res: any) => {\r\n      this.Items = res;\r\n    });\r\n  }\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locationTimings.setValue(this.locationTimings);\r\n    this.f.amenities.setValue(this.selectedAmenitiesID == undefined ? \"\" : this.selectedAmenitiesID.toString());\r\n    this.f.service.setValue(this.selectedServiceID == undefined ? \"\" : this.selectedServiceID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.customerStatusID.setValue(this.f.customerStatusID.value === true ? 1 : 2);\r\n    this.f.isFeatured.setValue(this.f.isFeatured.value === 1 ? true : false);\r\n    this.f.brandThumbnailImage.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n      //Insert location\r\n      console.log(JSON.stringify(this.locationForm.value));\r\n    }\r\n    else {\r\n      //Update location     \r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ConfirmationDialogService } from '../../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n   \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n     \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVyL2N1c3RvbWVycy9hZGRjdXN0b21lcnMvYWRkY3VzdG9tZXIuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger;\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/customer/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Customers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\n\r\n\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexTitleSubtitle,\r\n  ApexMarkers,\r\n  AnnotationStyle,\r\n  ApexDataLabels,\r\n  ApexStroke,\r\n  ApexGrid,\r\n  ApexYAxis,\r\n  ApexAnnotations,\r\n  ApexNonAxisChartSeries,\r\n  ApexFill,\r\n  ApexLegend,\r\n  ApexTooltip,\r\n  ApexPlotOptions,\r\n  ApexResponsive,\r\n  ApexStates,\r\n  ApexTheme\r\n} from \"ng-apexcharts\";\r\nimport { DashboadService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  title: ApexTitleSubtitle;\r\n};\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions;  \r\n  public chartOptionsDonut;\r\n  selectedLocations = [];\r\n  dashboardSummary=new DashboardSummary();\r\n  \r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  ngOnInit() {\r\n    // const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);   \r\n    // this._datepicker.fromDate=date;\r\n    // this.GetDataDashboard();\r\n    this.GetDashboard();\r\n  }\r\n \r\n  constructor(public service: DashboadService,public ls: LocalStorageService) {\r\n\r\n  }\r\n  BindTodaysSales(sales, timeSlot) {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Sales\",\r\n          data: sales\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 300,\r\n        type: \"bar\"\r\n      },\r\n      title: {\r\n        text: \"\"\r\n      },\r\n      xaxis: {\r\n        categories: timeSlot\r\n      }\r\n    };\r\n\r\n  }\r\n  BindMAEN(maen) {\r\n    \r\n    this.chartOptionsDonut = {\r\n      series: [maen.morning, maen.afterNoon, maen.evening, maen.night],\r\n      chart: {\r\n        type: \"donut\"\r\n      },\r\n      labels: [\"Morning\", \"Evening\", \"Afternoon\", \"Night\"],\r\n      responsive: [\r\n        {\r\n          breakpoint: 250,\r\n          options: {\r\n            colors: ['#2E93fA', '#66DA26', '#546E7A', '#E91E63', '#FF9800'],\r\n            chart: {\r\n              width: 100\r\n            },\r\n            legend: {\r\n              position: \"bottom\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  GetDashboard() {\r\n    debugger\r\n    this.service.getAllData().subscribe((res: any) => {\r\n      debugger\r\n      this.dashboardSummary = res[0];\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FeaturesService } from 'src/app/_services/features.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addfeature',\r\n  templateUrl: './addfeature.component.html',\r\n})\r\nexport class AddfeatureComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  featureForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private featureService: FeaturesService,\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedFeature();\r\n  }\r\n\r\n  get f() { return this.featureForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.featureForm = this.formBuilder.group({\r\n      featureID: 0,\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      displayOrder: [],\r\n      statusID: [true],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.image.setValue(obj.image);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedFeature() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.featureID.setValue(sid);\r\n        this.featureService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.featureForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.featureForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n\r\n    if (parseInt(this.f.featureID.value) === 0) {\r\n      //Insert services\r\n      this.featureService.insert(this.featureForm.value).subscribe(data => {\r\n        debugger\r\n        if (data != 0) {\r\n          debugger\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/features']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n    else {\r\n      //Update banner\r\n      this.featureService.update(this.featureForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/features']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2ZlYXR1cmVzL2ZlYXR1cmVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Features } from '../../_models/Feature';\r\nimport { FeaturesService } from '../../_services/features.service';\r\nimport { ConfirmationDialogService } from '../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-featurelist',\r\n  templateUrl: './featurelist.component.html',\r\n  styleUrls: ['./featurelist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class FeaturelistComponent implements OnInit {\r\n  data$: Observable<Features[]>;\r\n  FeatureList = [];\r\n  oldData: Features[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: FeaturesService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  Edit(featureID) {\r\n    this.router.navigate([\"admin/features/edit\", featureID]);\r\n  }\r\n\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    if (await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true) {\r\n      this.service.delete(item).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n          this.getData();\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n    }\r\n    else { }\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/features']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(carsell) {\r\n    this.router.navigate([\"admin/carselldetails/view\", carsell]);\r\n  }\r\n\r\n  Filter() {\r\n\r\n    this.getData();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addaddons',\r\n  templateUrl: './addaddons.component.html',\r\n  styleUrls: ['./addaddons.component.css']\r\n})\r\nexport class AddaddonsComponent implements OnInit {\r\n  submitted = false;\r\n  addonForm: FormGroup;\r\n  loading = false;\r\n  loadingaddon = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private addonsService: AddonsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedaddon();\r\n  }\r\n\r\n  get f() { return this.addonForm.controls; }\r\n\r\n  private createForm() {\r\n    this.addonForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      addonID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.addonID.setValue(obj.addonID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedaddon() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingaddon = true;\r\n        this.f.addonID.setValue(sid);\r\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingaddon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.addonForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.addonForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.addonID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.addonForm.value));\r\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public tss: ToastrService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n         debugger;\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      debugger;\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        //.pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',  \r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  \r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID,0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders= res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      //.pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n\r\n        this.getData(this.selectedLocations.toString());\r\n    \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getData(locaionIDs) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionIDs, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          \r\n          this.orderDetails = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());   \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      //.pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.selectedLocation);\r\n    this.loadLocations();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { reviews } from 'src/app/_models/Reviews';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReviewsService } from 'src/app/_services/reviews.service';\r\n\r\n@Component({\r\n  selector: 'app-reviews',\r\n  templateUrl: './reviews.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class ReviewsComponent implements OnInit {\r\n  data$: Observable<reviews[]>;  \r\n  oldData: reviews[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ReviewsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new OrderCheckout();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid, this.selectedBrand).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n  \r\n@Component({\r\n  selector: 'app-modal-content',\r\n  templateUrl: './modal-OrderDetail.component.html'\r\n})\r\nexport class ModalContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  } \r\n\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n\r\n  selector: 'app-orderdetails', \r\n  // templateUrl:'./modal-OrderDetail.component.html'\r\n  template: `\r\n <div class=\"modal-header\">\r\n    \r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n   \r\n<div class=\"card shadow mb-4\">\r\n  <div class=\"card-header py-3\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n              <h6 class=\"m-0 font-weight-bold text-orange\">Order Details - <span class=\"badge badge-info\"> {{ dataObj.order.statusID == 100 ? \"Delivered\" : dataObj.order.statusID==101 ?\"Order confirmed\" : dataObj.order.statusID == 102? \"Order prepared\" : dataObj.order.statusID == 103? \" Order out for delivery\" : dataObj.order.statusID == 104? \"Order Cancelled\" : \"-\" }}</span></h6>\r\n          </div>\r\n          <div class=\"col-md-6 text-right\">\r\n\r\n          </div>\r\n      </div>\r\n      <hr/>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\" *ngIf=\"dataObj.order.statusID!=100\">\r\n              <div class=\"card border-left-info shadow mb-4\">\r\n                  <div class=\"card-header border-bottom-0\">Order Status</div>\r\n                  <div class=\"card-body\">\r\n                    <div class=\"\">\r\n                      <button class=\"btn btn-warning mr-1\" (click)=\"updateOrder(dataObj.order,102)\" *ngIf=\"dataObj.order.statusID!=102\">\r\n                        <i class=\"fas fa-check-circle\"></i> Prepared\r\n                      </button>\r\n                      <button class=\"btn btn-info mr-1\" (click)=\"updateOrder(dataObj.order,103)\" *ngIf=\"dataObj.order.statusID!=103\">\r\n                        <i class=\"fas fa-truck\"></i> Out For Delivery\r\n                      </button>\r\n                      <button class=\"btn btn-success mr-1\" (click)=\"updateOrder(dataObj.order,100)\" *ngIf=\"dataObj.order.statusID!=100\">\r\n                        <i class=\"fas fa-people-carry\"></i> Delivered\r\n                      </button>\r\n                      <button class=\"btn btn-danger mr-1\" (click)=\"updateOrder(dataObj.order,104)\">\r\n                        <i class=\"fas fa-people-carry\"></i> Cancelled\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-6 mb-4\">\r\n\r\n              <div class=\"card border-left-success shadow mb-4\">\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Customer Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                    Customer Name\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.name }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                   Email\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.email }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                    Address\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.addressNickName }}</div>\r\n\r\n\r\n\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                  Google Address\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.address }} | Latitude: {{ dataObj.customerOrders.latitude }}| Longitude: {{ dataObj.customerOrders.longitude }}</div>\r\n\r\n\r\n\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                     Contact Number\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.mobile }}</div>\r\n                          </div>\r\n                          \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"card border-left-warning shadow \">\r\n\r\n                  <div class=\"card-body\">\r\n\r\n                      <!-- Report summary card example-->\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Order Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Order No\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderNo }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Transaction No\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.transactionNo }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Order Type\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderType=='1'?'Home': dataObj.order.orderType=='2'?'Work':'Other' }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                        Order Date\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderDate | date }}</div>\r\n                          </div>\r\n                          \r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                       Status\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div class=\"mr-2\">\r\n                                  {{ dataObj.order.statusID == 100 ? \"Delivered\" : dataObj.order.statusID==101 ?\"Order confirmed\" : dataObj.order.statusID == 102? \"Order prepared\" : dataObj.order.statusID == 103? \" Order out for delivery\" : dataObj.order.statusID == 104? \"Order Cancelled\" : \"-\" }}\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-6 mb-4\">\r\n              <div class=\"card border-left-danger shadow mb-4\">\r\n\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Billing Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Amount Total\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.amountTotal | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Discount\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.discountAmount | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Tax\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.tax | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Service Charges\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.serviceCharges | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                         Grand Total\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.grandTotal | number : '1.2-2')}}</div>\r\n                          </div>\r\n\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"card border-left-primary shadow\">\r\n\r\n                  <div class=\"card-body\">\r\n                      <div class=\"tile-body p-0 table-responsive \">\r\n                          <table class=\"table table-striped\">\r\n                              <thead>\r\n                                  <tr class=\"table-header\">\r\n                                      <th width=\"50%\">Name </th>\r\n                                      <th width=\"25\">Quantity</th>\r\n                                      <th width=\"25\">Price</th>\r\n                                  </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                  <tr *ngFor=\"let item of dataObj.orderDetails \">\r\n                                      <td> {{item.name}}\r\n                                          <tr *ngFor=\"let item1 of item.orderDetailModifiers \">\r\n                                              <td class=\"badge badge-pill\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\r\n\r\n                                          </tr>\r\n                                      </td>\r\n                                      <td> {{item.quantity}} </td>\r\n                                      <td> {{item.price}} </td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table>\r\n                      </div>\r\n\r\n                  </div>\r\n\r\n              </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n</div>    \r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n  </div>\r\n\r\n`,\r\n \r\n  \r\n})\r\nexport class NgbdModalContent {\r\n  \r\n  @Input() name;\r\n  dataObj: any = []; \r\n  constructor(public activeModal: NgbActiveModal,public service: OrdersService,\r\n    public ts: ToastService,\r\n    public router: Router) {}    \r\n\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails } from 'src/app/_models/Orders';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalContent } from './modal-content/ngbd-OrderDetail-content.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class OrdersComponent implements OnInit {\r\n  data$: Observable<Orders[]>;\r\n  oldData: Orders[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesorders: Orders[] = [];\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: OrdersService,private modalService: NgbModal,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loadLocations();\r\n  }\r\n\r\n  open(orders) \r\n  {    \r\n            \r\n    this.service.getById(orders, this.selectedBrand).subscribe(res => {          \r\n      console.log(res);\r\n      const modalRef = this.modalService.open(NgbdModalContent);\r\n      modalRef.componentInstance.dataObj = res;      \r\n    });        \r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  getData(locaionID) {\r\n     \r\n    this.service.getAllData(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(orders) {\r\n    this.router.navigate([\"admin/orders/view\", orders]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n          \r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FtZW5pdGllcy9hZGRhbWVuaXRpZXMvYWRkYW1lbml0aWVzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AmenitiesService } from 'src/app/_services/amenities.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addamenities',\r\n  templateUrl: './addamenities.component.html',\r\n  styleUrls: ['./addamenities.component.css']\r\n})\r\nexport class AddamenitiesComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  amenitiesForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private amenitiesService: AmenitiesService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.amenitiesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.amenitiesForm = this.formBuilder.group({\r\n      amenitiesID: 0,\r\n      name: ['', Validators.required],   \r\n      arabicName:[''],   \r\n      statusID: [true],      \r\n      image: [''],            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.amenitiesID.setValue(obj.amenitiesID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.amenitiesID.setValue(sid);\r\n        this.amenitiesService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.amenitiesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.amenitiesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.amenitiesID.value) === 0) {\r\n      //Insert amenities\r\n      console.log(JSON.stringify(this.amenitiesForm.value));\r\n      this.amenitiesService.insert(this.amenitiesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/amenities']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.amenitiesService.update(this.amenitiesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/amenities']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FtZW5pdGllcy9hbWVuaXRpZXMuY29tcG9uZW50LmNzcyJ9 */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { Amenities } from 'src/app/_models/Amenities';\r\nimport { AmenitiesService } from 'src/app/_services/amenities.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-amenities',\r\n  templateUrl: './amenities.component.html',\r\n  styleUrls: ['./amenities.component.css']\r\n})\r\n\r\nexport class AmenitiesComponent implements OnInit {\r\n  data$: Observable<Amenities[]>;  \r\n  oldData: Amenities[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: AmenitiesService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    //  this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(amenities) {\r\n    debugger\r\n        this.router.navigate([\"admin/amenities/edit\", amenities]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FwcHNldHRpbmdzL2FwcHNldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  styleUrls: ['./appsettings.component.css']\r\n})\r\nexport class AppsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n  loadingCategory = false;  \r\n  loading = false;\r\n  constructor(  \r\n    public ts :ToastService,\r\n    private appsettingService: AppsettingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,    \r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService\r\n    ) { \r\n      this.createForm();\r\n     \r\n      brandID: this.ls.getSelectedBrand().brandID;\r\n      this.setSelectedCategory();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n \r\n\r\n  get f() { return this.categoryForm.controls; }\r\n  \r\n  private createForm() {\r\n   \r\n    this.categoryForm = this.formBuilder.group({\r\n      branchName: ['', Validators.required],\r\n      branchAddress: [''],\r\n      branchTiming: [''],\r\n      statusID: [true],\r\n      deliveryNo: [''],\r\n      whatsappNo:[''],\r\n      discount: 0,\r\n      discountdescription:[''],          \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      ID: 0,\r\n      AppInfoID: 0,\r\n      appDescription:[''],     \r\n      facebook:[''],\r\n      twitter:[''],\r\n      instagram:[''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\ndebugger;\r\n    this.f.branchName.setValue(obj.branchName);\r\n    this.f.branchAddress.setValue(obj.branchAddress);\r\n    this.f.branchTiming.setValue(obj.branchTiming);\r\n    this.f.deliveryNo.setValue(obj.deliveryNo);\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.discountdescription.setValue(obj.discountdescription);\r\n    this.f.whatsappNo.setValue(obj.whatsappNo);\r\n    this.f.appDescription.setValue(obj.appDescription);\r\n    this.f.facebook.setValue(obj.facebook);\r\n    this.f.twitter.setValue(obj.twitter);\r\n    this.f.instagram.setValue(obj.instagram);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);    \r\n    this.f.ID.setValue(obj.id);\r\n    this.f.appInfoID.setValue(obj.appInfoID);\r\n  }\r\n\r\n  setSelectedCategory() {\r\n    \r\n    this.loadingCategory = true;\r\n    this.appsettingService.getById(this.f.brandID.value).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingCategory = false;\r\n    });\r\n  }\r\n  onSubmit() {    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    debugger;\r\n    if (parseInt(this.f.ID.value) === 0) {\r\n      //Insert appsetting\r\n      this.appsettingService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update appsetting\r\n      this.appsettingService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvbmZpcm0vY29uZmlybS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n\r\n constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n//import { Observable } from 'rxjs/Observable';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmComponent } from './confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmationDialogService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Delivery } from 'src/app/_models/Delivery';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  data$: Observable<Delivery[]>;  \r\n  oldData: Delivery[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DeliveryService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(delivery) {\r\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { alternateimageComponent } from 'src/app/imageupload/alternateimage.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DiscountService } from 'src/app/_services/discount.service';\r\nimport { LocationsService } from '../../../../_services/locations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-adddiscount',\r\n  templateUrl: './adddiscount.component.html',\r\n})\r\nexport class AdddiscountComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  discountForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  LocationList = [];\r\n  selectedLocationID = [];\r\n  fromTime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  toTime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n\r\n\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  //@ViewChild(ImageuploadComponent, { static: true }) arbimg;\r\n  @ViewChild(alternateimageComponent, { static: true }) arbimg;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private discountService: DiscountService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.discountForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.discountForm = this.formBuilder.group({\r\n      discountID: 0,\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      arabicName: [''],\r\n      arabicDescription: [''],\r\n      toDate: ['', Validators.required],\r\n      toTime: [''],\r\n      fromDate: ['', Validators.required],\r\n      fromTime: [''],\r\n      statusID: [true],\r\n      image: [''],\r\n      arabicImage: [''],\r\n      locationID: [null],\r\n      locations: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.discountID.setValue(obj.discountID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.arabicImage.setValue(obj.arabicImage);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.toTime.setValue(obj.toTime);\r\n    this.f.fromTime.setValue(obj.fromTime);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.arbimg.alternateimageUrl = obj.arabicImage;\r\n    //this.arbimg.alternateimageUrl = obj.arabicImage;\r\n    this.fromTime = { hour: new Date(\"1/1/1900 \" + obj.fromTime).getHours(), minute: new Date(\"1/1/1900 \" + obj.fromTime).getMinutes() };\r\n    this.toTime = { hour: new Date(\"1/1/1900 \" + obj.toTime).getHours(), minute: new Date(\"1/1/1900 \" + obj.toTime).getMinutes() };\r\n\r\n    if (obj.locations != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.locations;\r\n      this.selectedLocationID = stringToConvert.split(',').map(Number);\r\n      this.f.locations.setValue(obj.locations);\r\n    }\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.discountID.setValue(sid);\r\n        this.discountService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadLocations() {\r\n    debugger\r\n    this.locationService.getAllLocations().subscribe((res: any) => {\r\n      this.LocationList = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.discountForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.fromTime.setValue(this.fromTime.hour + \":\" + this.fromTime.minute);\r\n    this.f.toTime.setValue(this.toTime.hour + \":\" + this.toTime.minute);\r\n    if (this.discountForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locations.setValue(this.selectedLocationID == undefined ? \"\" : this.selectedLocationID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    this.f.arabicImage.setValue(this.arbimg.alternateimageUrl);\r\n\r\n\r\n    if (parseInt(this.f.discountID.value) === 0) {\r\n      //Insert services\r\n      this.discountService.insert(this.discountForm.value).subscribe(data => {\r\n        debugger\r\n        if (data != 0) {\r\n          debugger\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/discount']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.discountService.update(this.discountForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/discount']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Discount } from 'src/app/_models/Discount';\r\nimport { DiscountService } from 'src/app/_services/discount.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-discount',\r\n  templateUrl: './discount.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class DiscountComponent implements OnInit {\r\n  data$: Observable<Discount[]>;\r\n  oldData: Discount[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: DiscountService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n \r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(discount) {\r\n    this.router.navigate([\"admin/discount/edit\", discount]);\r\n  }\r\n\r\n   Delete(obj) {\r\n     this.service.delete(obj).subscribe((res: any) => {\r\n       if (res != 0) {\r\n         this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n         this.getData();\r\n       }\r\n       else\r\n         this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n     }, error => {\r\n       this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n     });\r\n   }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2xhbmRtYXJrcy9hZGRsYW5kbWFyay9hZGRsYW5kbWFyay5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LandmarkService } from 'src/app/_services/landmark.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addlandmark',\r\n  templateUrl: './addlandmark.component.html',\r\n  styleUrls: ['./addlandmark.component.css']\r\n})\r\nexport class AddlandmarkComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  landmarkForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private landmarkService: LandmarkService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    debugger\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.landmarkForm.controls; }\r\n\r\n  private createForm() {\r\n    this.landmarkForm = this.formBuilder.group({\r\n      landmarkID: 0,\r\n      name: ['', Validators.required],    \r\n      arabicName:[''],  \r\n      statusID: [true],      \r\n      image: [''],            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n     this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.landmarkID.setValue(obj.landmarkID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.landmarkID.setValue(sid);\r\n        this.landmarkService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.landmarkForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.landmarkForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.landmarkID.value) === 0) {\r\n      //Insert landmark\r\n      console.log(JSON.stringify(this.landmarkForm.value));\r\n      this.landmarkService.insert(this.landmarkForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/landmarks']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.landmarkService.update(this.landmarkForm.value).subscribe(data => {\r\n        debugger\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/landmarks']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2xhbmRtYXJrcy9sYW5kbWFyay5jb21wb25lbnQuY3NzIn0= */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LandmarkService } from 'src/app/_services/landmark.service';\r\nimport { Landmark } from 'src/app/_models/Landmark';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n@Component({\r\n  selector: 'app-landmark',\r\n  templateUrl: './landmark.component.html',\r\n  styleUrls: ['./landmark.component.css']\r\n})\r\n\r\nexport class LandmarkComponent implements OnInit {\r\n  data$: Observable<Landmark[]>;  \r\n  oldData: LandmarkService[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LandmarkService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  debugger;\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(landmark) {\r\n    debugger\r\n        this.router.navigate([\"admin/landmarks/edit\", landmark]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if(res!=0){\r\n  //       this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9hZGRvZmZlcnMvYWRkb2ZmZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addoffers',\r\n  templateUrl: './addoffers.component.html',\r\n  styleUrls: ['./addoffers.component.css']\r\n})\r\nexport class AddoffersComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  offersForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private offersService: OffersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.offersForm.controls; }\r\n\r\n  private createForm() {\r\n    this.offersForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      offerID: 0,\r\n      image: [''],\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.offerID.setValue(obj.offerID);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.offerID.setValue(sid);\r\n        this.offersService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.offersForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.offersForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    this.f.fromDate.setValue(this.parseDate(this._datepicker.fromDate));\r\n    this.f.toDate.setValue(this.parseDate(this._datepicker.toDate));\r\n\r\n    if (parseInt(this.f.offerID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.offersService.insert(this.offersForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.offersService.update(this.offersForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Offers } from 'src/app/_models/Offers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OffersComponent implements OnInit {\r\n  data$: Observable<Offers[]>;\r\n  oldData: Offers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: OffersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/offers/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NlcnZpY2VzL2FkZHNlcnZpY2VzL2FkZHNlcnZpY2VzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ServicesService } from 'src/app/_services/services.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addservices',\r\n  templateUrl: './addservices.component.html',\r\n  styleUrls: ['./addservices.component.css']\r\n})\r\nexport class AddservicesComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  serviceForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private servicesService: ServicesService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.serviceForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.serviceForm = this.formBuilder.group({\r\n      serviceID: 0,\r\n      serviceTitle: ['', Validators.required],\r\n      serviceDescription: [''],    \r\n      arabicServiceTitle: [''],\r\n      arabicServiceDescription: [''],  \r\n      displayOrder: [0],      \r\n      statusID: [true],      \r\n      image: [''],   \r\n      type: ['']            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.serviceTitle.setValue(obj.serviceTitle);\r\n    this.f.arabicServiceTitle.setValue(obj.arabicServiceTitle);\r\n    this.f.serviceID.setValue(obj.serviceID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.serviceDescription.setValue(obj.serviceDescription);\r\n    this.f.arabicServiceDescription.setValue(obj.arabicServiceDescription);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.serviceID.setValue(sid);\r\n        this.servicesService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.serviceForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.serviceForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.serviceID.value) === 0) {\r\n      debugger\r\n      //Insert services\r\n      console.log(JSON.stringify(this.serviceForm.value));\r\n      this.servicesService.insert(this.serviceForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/services']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.servicesService.update(this.serviceForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/services']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbXBvbmVudC5jc3MifQ== */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Services } from 'src/app/_models/Services';\r\nimport { ServicesService } from 'src/app/_services/services.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n \r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css']\r\n})\r\n\r\nexport class ServiceComponent implements OnInit {\r\n  data$: Observable<Services[]>;  \r\n  oldData: Services[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: ServicesService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(services) {\r\n    debugger\r\n        this.router.navigate([\"admin/services/edit\", services]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if(res!=0){\r\n  //       this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NldHRpbmcvYWRkc2V0dGluZy9hZGRzZXR0aW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { alternateimageComponent } from 'src/app/imageupload/alternateimage.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { SettingService } from 'src/app/_services/setting.service';\r\nimport { LocationsService } from '../../../../_services/locations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addsetting',\r\n  templateUrl: './addsetting.component.html',\r\n  styleUrls: ['./addsetting.component.css']\r\n})\r\nexport class AddsettingComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  settingForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  LocationList = [];\r\n  selectedLocationID = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  @ViewChild(alternateimageComponent, { static: true }) altimg;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private settingService: SettingService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.settingForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.settingForm = this.formBuilder.group({\r\n      id: 0,\r\n      title: ['', Validators.required],\r\n      description: [''],\r\n      arabicTitle: [''],\r\n      arabicDescription: [''],\r\n      displayOrder: [0],\r\n      pageName: [''],\r\n      type: [''],\r\n      statusID: [true],\r\n      image: [''],\r\n      alternateImage: [''],\r\n      locationID: [null],\r\n      locations: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.title.setValue(obj.title);\r\n    this.f.arabicTitle.setValue(obj.arabicTitle);\r\n    this.f.id.setValue(obj.id);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.alternateImage.setValue(obj.alternateImage);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.pageName.setValue(obj.pageName);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.altimg.alternateimageUrl = obj.alternateImage;\r\n\r\n    if (obj.locations != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.locations;\r\n      this.selectedLocationID = stringToConvert.split(',').map(Number);\r\n      this.f.locations.setValue(obj.locations);\r\n    }\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.id.setValue(sid);\r\n        this.settingService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadLocations() {\r\n    debugger\r\n    this.locationService.getAllLocations().subscribe((res: any) => {\r\n      this.LocationList = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.settingForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.settingForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locations.setValue(this.selectedLocationID == undefined ? \"\" : this.selectedLocationID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    this.f.alternateImage.setValue(this.altimg.alternateimageUrl);\r\n\r\n\r\n    if (parseInt(this.f.id.value) === 0) {\r\n      debugger\r\n      //Insert services\r\n      console.log(JSON.stringify(this.settingForm.value));\r\n      this.settingService.insert(this.settingForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/setting']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.settingService.update(this.settingForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/setting']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { setting } from 'src/app/_models/Setting';\r\nimport { SettingService } from 'src/app/_services/setting.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SettingComponent implements OnInit {\r\n  data$: Observable<setting[]>;\r\n  oldData: setting[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: SettingService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n \r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(setting) {\r\n    this.router.navigate([\"admin/setting/edit\", setting]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if (res != 0) {\r\n  //       this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //       this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ConfirmationDialogService } from './admin/settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n \r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule, NgbTimepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { alternateimageComponent } from './imageupload/alternateimage.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\nimport { CustomersComponent } from './admin/customer/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/customer/customers/addcustomers/addcustomer.component';\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\n//import { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { OffersComponent } from './admin/settings/offers/offers.component';\r\nimport { AddoffersComponent } from './admin/settings/offers/addoffers/addoffers.component';\r\nimport { OrdersComponent } from './admin/sales/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/sales/orderdetails/orderdetails.component';\r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\n//import { AdddeliveryComponent } from './admin/settings/Delivery/adddelivery/adddelivery.component';\r\nimport { AppsettingsComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\nimport { ModalContentComponent } from './admin/sales/orders/modal-content/modal-OrderDetail.component';\r\nimport { NgbdModalContent } from './admin/sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nimport { AmenitiesComponent } from './admin/settings/amenities/amenities.component';\r\nimport { AddamenitiesComponent } from './admin/settings/amenities/addamenities/addamenities.component';\r\nimport { AddlandmarkComponent } from './admin/settings/landmarks/addlandmark/addlandmark.component';\r\nimport { LandmarkComponent } from './admin/settings/landmarks/landmark.component';\r\nimport { AddservicesComponent } from './admin/settings/services/addservices/addservices.component';\r\nimport { ServiceComponent } from './admin/settings/services/services.component';\r\nimport { SettingComponent } from './admin/settings/setting/setting.component';\r\nimport { AddsettingComponent } from './admin/settings/setting/addsetting/addsetting.component';\r\nimport { ConfirmComponent } from './admin/settings/confirm/confirm.component';\r\nimport { ConfirmationDialogService } from './admin/settings/confirm/confirmation-dialog.service';\r\nimport { CarselllistComponent } from './admin/carsell/carselllist/carselllist.component';\r\nimport { CarSelldetailsComponent } from './admin/carsell/carselldetails/carselldetails.component';\r\nimport { AddcarsellComponent } from './admin/carsell/carselllist/addcarsell/addcarsell.component';\r\nimport { ReviewsComponent } from './admin/reviews/reviews.component';\r\nimport { DiscountComponent } from './admin/settings/discount/discount.component';\r\nimport { AdddiscountComponent } from './admin/settings/discount/add/adddiscount.component';\r\nimport { FeaturelistComponent } from './admin/features/featurelist.component';\r\nimport { AddfeatureComponent } from './admin/features/add/addfeature.component';\r\n\r\nimport { BodyTypeComponent } from './admin/bodytype/bodytype.component';\r\nimport { AddbodyTypeComponent } from './admin/bodytype/add/addbodyType.component';\r\n\r\nimport { BloglistComponent } from './admin/blogs/blog.component';\r\nimport { AddBlogComponent } from './admin/blogs/add/addblog.component';\r\n\r\nimport { CarslistComponent } from './admin/cars/carslist.component';\r\nimport { AddcarsComponent } from './admin/cars/addcars/addcars.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    alternateimageComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    OffersComponent,\r\n    AddoffersComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    OrdersComponent,\r\n    OrderdetailsComponent,\r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    //AdddeliveryComponent,\r\n    AppsettingsComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    ModalContentComponent,\r\n    NgbdModalContent,\r\n    AmenitiesComponent,\r\n    AddamenitiesComponent,\r\n    LandmarkComponent,\r\n    AddlandmarkComponent,\r\n    AddservicesComponent,\r\n    ServiceComponent,\r\n    SettingComponent,\r\n    AddsettingComponent,\r\n    ConfirmComponent,\r\n    CarselllistComponent,\r\n    AddcarsellComponent,\r\n    ReviewsComponent,\r\n    DiscountComponent,\r\n    AdddiscountComponent,\r\n    CarSelldetailsComponent,\r\n    FeaturelistComponent,\r\n    AddfeatureComponent,\r\n    BodyTypeComponent,\r\n    AddbodyTypeComponent,\r\n    BloglistComponent,\r\n    AddBlogComponent,\r\n    CarslistComponent,\r\n    AddcarsComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    //NgApexchartsModule,\r\n\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          { path: 'orders', component: OrdersComponent },\r\n          { path: 'orders/add', component: OrderdetailsComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'customer', component: CustomersComponent },\r\n          { path: 'customer/add', component: AddcustomerComponent },\r\n          { path: 'customer/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'banner', component: BannerComponent },\r\n          { path: 'banner/add', component: AddbannerComponent },\r\n          { path: 'banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'offers', component: OffersComponent },\r\n          { path: 'offers/add', component: AddoffersComponent },\r\n          { path: 'offers/edit/:id', component: AddoffersComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n          // { path: 'delivery', component: DeliveryComponent },\r\n          // { path: 'delivery/add', component: AdddeliveryComponent },\r\n          // { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'appsettings', component: AppsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'amenities', component: AmenitiesComponent },\r\n          { path: 'amenities/add', component: AddamenitiesComponent },\r\n          { path: 'amenities/edit/:id', component: AddamenitiesComponent },\r\n\r\n          { path: 'landmarks', component: LandmarkComponent },\r\n          { path: 'landmarks/add', component: AddlandmarkComponent },\r\n          { path: 'landmarks/edit/:id', component: AddlandmarkComponent },\r\n\r\n          { path: 'services', component: ServiceComponent },\r\n          { path: 'services/add', component: AddservicesComponent },\r\n          { path: 'services/edit/:id', component: AddservicesComponent },\r\n\r\n          { path: 'setting', component: SettingComponent },\r\n          { path: 'setting/add', component: AddsettingComponent },\r\n          { path: 'setting/edit/:id', component: AddsettingComponent },\r\n\r\n          { path: 'carsell', component: CarselllistComponent },\r\n          { path: 'carselldetails', component: CarSelldetailsComponent },\r\n          { path: 'carselldetails/view/:id', component: CarSelldetailsComponent },\r\n          { path: 'carsell/add', component: AddcarsellComponent },\r\n          { path: 'carsell/edit/:id', component: AddcarsellComponent },\r\n\r\n          { path: 'reviews', component: ReviewsComponent },\r\n\r\n          { path: 'discount', component: DiscountComponent },\r\n          { path: 'discount/add', component: AdddiscountComponent },\r\n          { path: 'discount/edit/:id', component: AdddiscountComponent },\r\n\r\n          { path: 'features', component: FeaturelistComponent },\r\n          { path: 'features/add', component: AddfeatureComponent },\r\n          { path: 'features/edit/:id', component: AddfeatureComponent },\r\n\r\n          { path: 'bodytype', component: BodyTypeComponent },\r\n          { path: 'bodytype/add', component: AddbodyTypeComponent },\r\n          { path: 'bodytype/edit/:id', component: AddbodyTypeComponent },\r\n\r\n          { path: 'blog', component: BloglistComponent },\r\n          { path: 'blog/add', component: AddBlogComponent },\r\n          { path: 'blog/edit/:id', component: AddBlogComponent },\r\n\r\n          { path: 'cars', component: CarslistComponent },\r\n          { path: 'cars/add', component: AddcarsComponent },\r\n          { path: 'cars/edit/:id', component: AddcarsComponent },\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [ConfirmationDialogService],\r\n  exports: [NgbdDatepickerRangePopup, NgbTimepicker],\r\n  bootstrap: [AppComponent, NgbdDatepickerRangePopup, NgbTimepicker]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-alternateimage',\r\n  templateUrl: './alternateimage.component.html'\r\n})\r\nexport class alternateimageComponent {\r\n\r\n  alternateimageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.alternateimageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  branchname = \"\";\r\n  email = \"\";\r\n  // locationID: 0;\r\n  // Locations: [];\r\n  // private selectedBrand;\r\n\r\n  ngOnInit() {\r\n   ///var data = this.ls.getSelectedBrand();\r\n\r\n    \r\n    //this.loadLocations();\r\n\r\n\r\n    // if (data == null)\r\n    //   this.router.navigate([\"/\"]);\r\n\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public ls: LocalStorageService) {\r\n    // this.branchname = this.ls.getSelectedBrand().name;\r\n    // this.email = this.ls.getSelectedBrand().email;\r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private loadLocations() {\r\n    // var loc = this.ls.getLocation();\r\n    // if (loc != null) {\r\n    //   this.Locations = this.ls.getLocation();\r\n    //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n    // }\r\n    // else {\r\n    //   this.service.getAllLocations(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n    //     debugger\r\n    //     if (res.length > 0) {\r\n    //       this.ls.setLocation(res);\r\n    //       this.ls.setSelectedLocation(res[0]);\r\n    //       this.locationID =res[0].locationID;\r\n    //       this.Locations =res;\r\n    //     }\r\n    //     else {\r\n    //       this.router.navigate(['/']);\r\n    //     }\r\n    //   });\r\n    // }\r\n    // this.Locations = this.ls.getLocation();\r\n    // this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  }\r\n  changeloc(LocObj) {\r\n\r\n    // this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    debugger\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\ndebugger\r\n          if(this.f.username.value == \"admin@garage.com\" && this.f.password.value == \"Admin@123\") {\r\n             \r\n            this.router.navigate([\"/admin/dashboard\"]);\r\n            \r\n                  \r\n          }\r\n          else {\r\n            this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n          }\r\n\r\n        } \r\n   \r\n\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n \r\n\r\n \r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}