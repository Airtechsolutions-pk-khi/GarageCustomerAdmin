{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/admin/bodytype/add/addbodyType.component.html","webpack:///src/app/admin/bodytype/bodytype.component.html","webpack:///src/app/admin/carsell/carselldetails/carselldetails.component.html","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.html","webpack:///src/app/admin/carsell/carselllist/carselllist.component.html","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/customer/customers/customers.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/features/add/addfeature.component.html","webpack:///src/app/admin/features/featurelist.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/reviews/reviews.component.html","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.html","webpack:///src/app/admin/sales/orders/modal-content/modal-OrderDetail.component.html","webpack:///src/app/admin/sales/orders/orders.component.html","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.html","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.html","webpack:///src/app/admin/settings/amenities/amenities.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/confirm/confirm.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/discount/add/adddiscount.component.html","webpack:///src/app/admin/settings/discount/discount.component.html","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.html","webpack:///src/app/admin/settings/landmarks/landmark.component.html","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.html","webpack:///src/app/admin/settings/offers/offers.component.html","webpack:///src/app/admin/settings/services/addservices/addservices.component.html","webpack:///src/app/admin/settings/services/services.component.html","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.html","webpack:///src/app/admin/settings/setting/setting.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/imageupload/alternateimage.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/CarSell.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/amenities.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/bodyType.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/carsell.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/discount.service.ts","webpack:///src/app/_services/features.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/landmark.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/offers.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/reviews.service.ts","webpack:///src/app/_services/services.service.ts","webpack:///src/app/_services/setting.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/admin/bodytype/add/addbodyType.component.css","webpack:///src/app/admin/bodytype/add/addbodyType.component.ts","webpack:///src/app/admin/bodytype/bodytype.component.ts","webpack:///src/app/admin/carsell/carselldetails/carselldetails.component.ts","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.css","webpack:///src/app/admin/carsell/carselllist/addcarsell/addcarsell.component.ts","webpack:///src/app/admin/carsell/carselllist/carselllist.component.css","webpack:///src/app/admin/carsell/carselllist/carselllist.component.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/customer/customers/customers.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/features/add/addfeature.component.ts","webpack:///src/app/admin/features/featurelist.component.css","webpack:///src/app/admin/features/featurelist.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/reviews/reviews.component.ts","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/sales/orders/modal-content/modal-OrderDetail.component.ts","webpack:///src/app/admin/sales/orders/modal-content/ngbd-OrderDetail-content.component.ts","webpack:///src/app/admin/sales/orders/orders.component.ts","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.css","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.ts","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.css","webpack:///src/app/admin/settings/amenities/addamenities/addamenities.component.ts","webpack:///src/app/admin/settings/amenities/amenities.component.css","webpack:///src/app/admin/settings/amenities/amenities.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.css","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/confirm/confirm.component.css","webpack:///src/app/admin/settings/confirm/confirm.component.ts","webpack:///src/app/admin/settings/confirm/confirmation-dialog.service.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/discount/add/adddiscount.component.ts","webpack:///src/app/admin/settings/discount/discount.component.ts","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.css","webpack:///src/app/admin/settings/landmarks/addlandmark/addlandmark.component.ts","webpack:///src/app/admin/settings/landmarks/landmark.component.css","webpack:///src/app/admin/settings/landmarks/landmark.component.ts","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.css","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.ts","webpack:///src/app/admin/settings/offers/offers.component.ts","webpack:///src/app/admin/settings/services/addservices/addservices.component.css","webpack:///src/app/admin/settings/services/addservices/addservices.component.ts","webpack:///src/app/admin/settings/services/services.component.css","webpack:///src/app/admin/settings/services/services.component.ts","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.css","webpack:///src/app/admin/settings/setting/addsetting/addsetting.component.ts","webpack:///src/app/admin/settings/setting/setting.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/imageupload/alternateimage.component.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","json","excelFileName","worksheet","json_to_sheet","console","log","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","data","Blob","Date","getTime","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","selector","host","CarSells","CarSellImages","Customers","Make","Models","Country","City","Feature","DashboardSummary","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Report","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","compare","v1","v2","a","b","res","matches","term","name","toLowerCase","includes","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","brandId","get","url","next","subscribe","addons","pipe","_search","result","total","patch","Object","assign","sortedData","filter","slice","post","updateData","asObservable","_set","providedIn","AmenitiesService","Amenities","AppsettingService","BannerService","Banner","BodyTypeService","bodytype","BrandsService","brands","CarSellService","fromDate","toDate","carsells","event","carsell","CategoryService","categories","fullName","CustomersService","customers","DashboadService","locationID","date","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fdate","tdate","DeliveryService","Delivery","DiscountService","Discount","FeaturesService","ItemsService","items","LandmarkService","Landmark","LocalStorageService","brand","sessionStorage","setItem","JSON","stringify","location","parse","getItem","userInfo","LocationsService","locations","LoginService","currentUserSubject","currentUser","username","password","value","ModifiersService","modifiers","OffersService","offerss","orderNo","OrdersService","brandID","orders","categoryName","ReportService","salescategorywiseReport","customerID","ReviewsService","Review","serviceTitle","ServicesService","title","SettingService","Setting","ToastService","toastr","_title","_message","success","timeOut","error","warning","AddbodyTypeComponent","formBuilder","router","route","ts","ls","bodytypeService","submitted","loading","loadingbodyType","createForm","setSelected","bodytypeForm","group","required","displayOrder","arabicName","statusID","bodyTypeID","image","obj","f","setValue","imgComp","imageUrl","paramMap","param","sid","getById","editForm","markAllAsTouched","invalid","parseInt","insert","showSuccess","navigate","showError","update","controls","template","BodyTypeComponent","service","excelService","loading$","submit","getData","ExportList","exportAsExcelFile","getAllData","data$","total$","headers","forEach","header","providers","CarSelldetailsComponent","Locations","selectedLocations","reason","customerInfo","makeInfo","modelInfo","countryInfo","cityInfo","featureInfo","images","loadCarSellImages","carSellID","setSelectedOrder","status","updatestatus","customer","make","model","country","city","feature","AddcarsellComponent","carsellService","Images","FeaturesList","BodyTypeList","ModelList","CustomerList","MakeList","CountryList","CityList","selectedBodyTypeID","selectedModelID","selectedMakeID","selectedCityID","YearList","ButtonText","loadCarSellFeature","loadBodyType","loadMake","loadCountry","setSelectedCarSell","carSellForm","customerPhone","description","address","createdBy","updatedBy","isInspected","imagesSource","carsellImages","featureID","features","registrationNo","bodyType","fuelType","engineType","kilometer","year","makeID","modelID","transmition","price","cityID","countryCode","carSellAddID","bodyColor","assembly","file","target","files","filesAmount","reader","FileReader","fileSize","size","alert","onload","push","patchValue","readAsDataURL","stringToConvert","selectedFeatureID","split","map","Number","loadCity","loadModel","index","indexOf","splice","loadFeature","selectElementValue","item","trim","getcarId","undefined","toString","now","CarselllistComponent","FeatureList","_datepicker","CarSellID","order","parseDate","printorder","printout","html","month","day","newWindow","open","document","write","print","AddbrandComponent","brandService","loadingBrand","imageBgUrl","setSelectedBrand","brandForm","email","companyURl","currency","fileData","BrandComponent","selectedBrand","rowVersion","AddlocationComponent","locationService","loadingLocations","AmenitiesList","ServiceList","LandmarkList","Items","selectedAmenitiesID","selectedServiceID","selectedLandmarkID","loadAmenities","loadService","loadLandmark","setSelectedLocations","locationForm","descripiton","arabicAddress","contactNo","arabicDescription","minOrderAmount","latitude","longitude","customerStatusID","landmarkID","gmaplink","imageURL","lastUpdatedBy","lastUpdatedDate","isFeatured","locationImages","amenities","amenitiesID","serviceID","loadItemImages","loadLocationImages","LocationsComponent","confirmationDialogService","confirm","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","mobile","getSelectedBrand","CustomersComponent","DashboardComponent","dashboardSummary","sales","timeSlot","chartOptions","series","chart","height","text","xaxis","maen","chartOptionsDonut","morning","afterNoon","evening","night","labels","responsive","breakpoint","options","colors","width","legend","position","AddfeatureComponent","featureService","setSelectedFeature","featureForm","FeaturelistComponent","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","addonID","AddonsComponent","AddcategoryComponent","categoryService","loadingCategory","setSelectedCategory","categoryForm","categoryID","CategoryComponent","tss","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isApplyDiscount","cost","itemID","calories","selectedModifierIds","selectedAddonIds","loadActiveCategories","loadModifierList","loadAddonList","ItemsComponent","ItemsettingsComponent","ItemsList","loadItems","getTodaysItems","isItemSetting","itemSettingTitle","selectedItemIds","updateSettings","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","SalescategorywiseComponent","salesCategoryWise","loadLocations","locaionID","SalesCategorywiseRpt","selectedLocation","loadLocationsMulti","arr","element","x","toLocaleLowerCase","SalescustomerwiseComponent","SalesCustomerwiseRpt","SalesdetailComponent","orderDetails","locaionIDs","SalesDetailRpt","y","disabled","SalesitemwiseComponent","salesItemWise","SalesItemwiseRpt","SalesuserwiseComponent","salesUserWise","getSelectedLocation","SummaryComponent","_model","SalesSummaryRpt","ReviewsComponent","banner","OrderdetailsComponent","orderOrderCheckout","orderCustomerInfo","customerOrders","orderCheckouts","ModalContentComponent","NgbdModalContent","activeModal","dataObj","OrdersComponent","modalService","salesorders","modalRef","componentInstance","AdddeliveryComponent","deliveryService","BrandsList","loadBrands","deliveryForm","amount","deliveryAreaID","selectedBrandIds","AddamenitiesComponent","amenitiesService","amenitiesForm","AmenitiesComponent","AppsettingsComponent","appsettingService","branchName","branchAddress","branchTiming","deliveryNo","whatsappNo","discount","discountdescription","ID","AppInfoID","appDescription","facebook","twitter","instagram","appInfoID","AddbannerComponent","bannerService","bannerForm","bannerID","BannerComponent","ConfirmComponent","close","dismiss","ConfirmationDialogService","btnOkText","btnCancelText","dialogSize","DeliveryComponent","delivery","AdddiscountComponent","discountService","LocationList","selectedLocationID","fromTime","hour","getHours","minute","getMinutes","toTime","discountForm","discountID","arabicImage","arbimg","alternateimageUrl","getAllLocations","DiscountComponent","AddlandmarkComponent","landmarkService","landmarkForm","LandmarkComponent","landmark","AddoffersComponent","offersService","loadingOffers","setSelectedOffers","offersForm","offerID","OffersComponent","offers","AddservicesComponent","servicesService","serviceForm","serviceDescription","arabicServiceTitle","arabicServiceDescription","ServiceComponent","services","AddsettingComponent","settingService","settingForm","arabicTitle","pageName","alternateImage","altimg","SettingComponent","setting","AppComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","children","register","enabled","production","bootstrap","CounterComponent","currentCount","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","after","before","equals","isInside","isHovered","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HomeComponent","alternateimageComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","markForCheck","ImageuploadComponent","LayoutComponent","_Langname","branchname","clear","LocObj","LoginComponent","loginForm","NavMenuComponent","isExpanded","environment","getBaseUrl","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;A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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add BodyType</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bodytypeForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">BodyType Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-md-8\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                          <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                            <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                              Name is required.\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <!-- Form Row-->\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Display Order</label>\\r\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">BodyType</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">BodyType List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Add BodyType</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"ArabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n            <th width=\\\"15%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.arabicName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.bodyTypeID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">CarSell Details</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"carsell.statusID!=4\\\">\\r\\n        <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n          <div class=\\\"card-header border-bottom-0\\\">CarSell Status</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(carsell,2)\\\">\\r\\n                <i class=\\\"fas fa-check-circle\\\"></i> Accepted\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(carsell,3)\\\">\\r\\n                <i class=\\\"fas fa-truck\\\"></i> Rejected\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(carsell,4)\\\">\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Sold\\r\\n              </button>\\r\\n            </div>\\r\\n            <br />\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>Reason</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reason\\\" required=\\\"required\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Customer Details</div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Customer Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.fullName}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Contact\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.mobile}}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Email\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ customerInfo.email}}</div>\\r\\n              </div>-->\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Address\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.address}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <!-- Report summary card example-->\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Car Informations</div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Car Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Description\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.description }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Make\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ makeInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Model\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ modelInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Year\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.year }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Registration No.\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.registrationNo }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Price\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.price }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Car Details</div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Country\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ countryInfo.name }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      City\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ cityInfo.name }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Body Color\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.bodyColor }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Transmition\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.transmition }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Assembly\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"mr-2\\\">\\r\\n                  {{ carsell.assembly }}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Kilometer\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.kilometer }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Fuel Type\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.fuelType }}</div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Engine Type\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.engineType }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Features\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngFor=\\\"let item of featureInfo \\\" class=\\\"mr-2\\\">\\r\\n                  <label class=\\\"badge badge-pill\\\">{{ item.name }}</label>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Is Inspected\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ carsell.isInspected}}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div *ngFor=\\\"let item of images\\\" class=\\\"mr-2\\\">\\r\\n                  <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                  <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-left-dark shadow \\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-header border-bottom-0\\\">Images</div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let item of images\\\">\\r\\n              <div class=\\\"col-md-2\\\">\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"img-thumbnail\\\" alt=\\\"\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"carSellForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Car Sell Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Customer</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter a valid Saudi Arabia phone number\\\" formControlName=\\\"customerPhone\\\">\\r\\n\\r\\n              <!--<select class=\\\"custom-select\\\" id=\\\"customerID\\\" formControlName=\\\"customerID\\\">\\r\\n                <option [ngValue]=\\\"option.customerID\\\" selected=\\\"option.customerID == customerID\\\" *ngFor=\\\"let option of CustomerList\\\"> {{option.fullName}} </option>\\r\\n              </select>-->\\r\\n              <!--<div *ngIf=\\\"f.customerID.invalid && (f.customerID.dirty || f.customerID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.customerID.errors.required\\\">\\r\\n                  Customer is required.\\r\\n                </div>\\r\\n              </div>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n              <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                  Address is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                  Description is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Registration No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=registrationNo placeholder=\\\"\\\" formControlName=\\\"registrationNo\\\">\\r\\n              <div *ngIf=\\\"f.registrationNo.invalid && (f.registrationNo.dirty || f.registrationNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.registrationNo.errors.required\\\">\\r\\n                  Registration No. is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Body Type</label>\\r\\n              <select class=\\\"custom-select\\\" id=\\\"bodyTypeID\\\" formControlName=\\\"bodyTypeID\\\">\\r\\n                <option [ngValue]=\\\"option.bodyTypeID\\\" selected=\\\"option.bodyTypeID == bodyTypeID\\\" *ngFor=\\\"let option of BodyTypeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.bodyTypeID.invalid && (f.bodyTypeID.dirty || f.bodyTypeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.bodyTypeID.errors.required\\\">\\r\\n                  Body Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Features</label>\\r\\n              <ng-select [items]=\\\"FeaturesList\\\" bindLabel=\\\"name\\\" bindValue=\\\"featureID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedFeatureID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Country</label>\\r\\n              <select class=\\\"custom-select\\\" id=countryCode formControlName=\\\"countryCode\\\" (change)=\\\"onSelect($event)\\\" [(ngModel)]=\\\"countryCode\\\">\\r\\n                <option [ngValue]=\\\"option.code\\\" selected=\\\"option.code == code\\\" *ngFor=\\\"let option of CountryList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.countryCode.invalid && (f.countryCode.dirty || f.countryCode.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.countryCode.errors.required\\\">\\r\\n                  Country is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">City</label>\\r\\n              <select class=\\\"custom-select\\\" id=cityID formControlName=\\\"cityID\\\" required>\\r\\n                <option [ngValue]=\\\"option.id\\\" selected=\\\"option.id == id\\\"\\r\\n                        *ngFor=\\\"let option of CityList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.cityID.invalid && (f.cityID.dirty || f.cityID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.cityID.errors.required\\\">\\r\\n                  City is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Fuel Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=fuelType placeholder=\\\"\\\" formControlName=\\\"fuelType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Petrol</option>\\r\\n                <option>Diesel</option>\\r\\n                <option>Electric</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.fuelType.invalid && (f.fuelType.dirty || f.fuelType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.fuelType.errors.required\\\">\\r\\n                  Fuel Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Engine Type</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=engineType placeholder=\\\"\\\" formControlName=\\\"engineType\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Inline Engine Layout</option>\\r\\n                <option>Flat Engine</option>\\r\\n                <option>V-Engine</option>\\r\\n                <option>Twin Cylinder</option>\\r\\n                <option>Three Cylinder</option>\\r\\n                <option>Four Cylinder</option>\\r\\n                <option>Five Cylinder</option>\\r\\n                <option>Six Cylinder</option>\\r\\n                <option>Seven Cylinder</option>\\r\\n                <option>Eight Cylinders</option>\\r\\n                <option>Nine Cylinders</option>\\r\\n                <option>Ten Cylinders</option>\\r\\n                <option>Eleven Cylinders</option>\\r\\n                <option>Twelve Cylinders</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.engineType.invalid && (f.fuelType.dirty || f.engineType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.engineType.errors.required\\\">\\r\\n                  Engine Type Type is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Kilometer</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=kilometer placeholder=\\\"\\\" formControlName=\\\"kilometer\\\">\\r\\n              <div *ngIf=\\\"f.kilometer.invalid && (f.kilometer.dirty || f.kilometer.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.kilometer.errors.required\\\">\\r\\n                  Mileage is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Transmition</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=transmition placeholder=\\\"\\\" formControlName=\\\"transmition\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Automatic</option>\\r\\n                <option>Manual</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.transmition.invalid && (f.transmition.dirty || f.transmition.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.transmition.errors.required\\\">\\r\\n                  Transmition is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Price</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n              <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                  Price is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Body Color</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=bodyColor placeholder=\\\"\\\" formControlName=\\\"bodyColor\\\">\\r\\n              <div *ngIf=\\\"f.bodyColor.invalid && (f.bodyColor.dirty || f.bodyColor.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.bodyColor.errors.required\\\">\\r\\n                  Color is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Make</label>\\r\\n              <select class=\\\"custom-select\\\" id=makeID formControlName=\\\"makeID\\\" (change)=\\\"onChange($event)\\\">\\r\\n                <option [ngValue]=\\\"option.makeID\\\" selected=\\\"option.makeID == makeID\\\" *ngFor=\\\"let option of MakeList\\\"> {{option.name}} </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.makeID.invalid && (f.makeID.dirty || f.makeID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.makeID.errors.required\\\">\\r\\n                  Make is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Model</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"modelID\\\">\\r\\n                <option [ngValue]=\\\"option.modelID\\\" selected=\\\"option.modelID == modelID\\\"\\r\\n                        *ngFor=\\\"let option of ModelList\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.modelID.invalid && (f.modelID.dirty || f.modelID.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.modelID.errors.required\\\">\\r\\n                  Model is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Assembly</label>\\r\\n              <select type=\\\"time\\\" class=\\\"form-control\\\" id=assembly placeholder=\\\"\\\" formControlName=\\\"assembly\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Local</option>\\r\\n                <option>Imported</option>\\r\\n                <option>Other</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.assembly.invalid && (f.assembly.dirty || f.assembly.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.assembly.errors.required\\\">\\r\\n                  Assembly is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Year</label>\\r\\n              <select name=\\\"year\\\" id=\\\"year\\\" formControlName=\\\"year\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <option *ngFor=\\\"let option of YearList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.year.invalid && (f.year.dirty || f.year.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.year.errors.required\\\">\\r\\n                  Year is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Is Inspected</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isInspected\\\" formControlName=\\\"isInspected\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isInspected\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=statusID placeholder=\\\"\\\" formControlName=\\\"statusID\\\" value=\\\"1\\\" hidden>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n              <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Car Sell</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Car Sell List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Car Sell\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n            <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <!--<th width=\\\"10%\\\">IMAGE</th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"makeName\\\" (sort)=\\\"onSort($event)\\\">Make Name </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"bodyType\\\" (sort)=\\\"onSort($event)\\\">Body Type </th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"modelName\\\" (sort)=\\\"onSort($event)\\\">Model Name </th>\\r\\n            <!-- <th width=\\\"10%\\\" sortable=\\\"createdDate\\\" (sort)=\\\"onSort($event)\\\">Date </th> -->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"address\\\" (sort)=\\\"onSort($event)\\\">Address </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\" style=\\\"text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <!--<td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>-->\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.makeName}} </td>\\r\\n            <!--<td> {{item.bodyType}} </td>-->\\r\\n            <td> {{item.modelName}} </td>\\r\\n\\r\\n            <!--     -->\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.address}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 1,'btn-success': item.statusID === 2, 'btn-danger':item.statusID === 3, 'btn-dark':item.statusID === 4}\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==4 ? 'Sold' :\\r\\n                             item.statusID ==1 ? 'Pending' :\\r\\n                             item.statusID ==2 ? 'Accepted' :\\r\\n                             item.statusID ==3 ? 'Rejected' :\\r\\n                             item.statusID ==4 ? 'Sold' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <!--<button class=\\\"btn btn-sm btn-warning\\\">-->\\r\\n              <i class=\\\"fas fa-fw fa-eye\\\" (click)=\\\"View(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n              &nbsp;\\r\\n              <!--<button class=\\\"btn btn-sm btn-success \\\" >-->\\r\\n              <i class=\\\"fas fa-fw fa-edit\\\" (click)=\\\"Edit(item.carSellID)\\\"></i>\\r\\n              <!--</button>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Location Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n              <div *ngIf=\\\"f.arabicName.invalid && (f.arabicName.dirty || f.arabicName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicName.errors.required\\\">\\r\\n                  Arabic name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n              <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                  Address is required.\\r\\n                </div>\\r\\n               \\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"arabicAddress\\\">\\r\\n              <div *ngIf=\\\"f.arabicAddress.invalid && (f.arabicAddress.dirty || f.arabicAddress.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicAddress.errors.required\\\">\\r\\n                 Arabic Address is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\">\\r\\n              <div *ngIf=\\\"f.contactNo.invalid && (f.contactNo.dirty || f.contactNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.contactNo.errors.required\\\">\\r\\n                 Contact No is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n              <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                  Email is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" id=descripiton formControlName=\\\"descripiton\\\" height=\\\"100px\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.descripiton.invalid && (f.descripiton.dirty || f.descripiton.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.descripiton.errors.required\\\">\\r\\n                  Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Arabic Description</label>\\r\\n              <textarea class=\\\"form-control\\\" id=descripiton formControlName=\\\"arabicDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n              <div *ngIf=\\\"f.arabicDescription.invalid && (f.arabicDescription.dirty || f.arabicDescription.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.arabicDescription.errors.required\\\">\\r\\n                  Arabic Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n              <div *ngIf=\\\"f.latitude.invalid && (f.latitude.dirty || f.latitude.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.latitude.errors.required\\\">\\r\\n                  Latitude Descripiton is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n              <div *ngIf=\\\"f.longitude.invalid && (f.longitude.dirty || f.longitude.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.longitude.errors.required\\\">\\r\\n                  Longitude is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Amenities</label>\\r\\n              <ng-select [items]=\\\"AmenitiesList\\\" bindLabel=\\\"name\\\" bindValue=\\\"amenitiesID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAmenitiesID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Services</label>\\r\\n              <ng-select [items]=\\\"ServiceList\\\" bindLabel=\\\"serviceTitle\\\" bindValue=\\\"serviceID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedServiceID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.serviceTitle}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Select Landmark</label>\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"landmarkID\\\">\\r\\n                <option [ngValue]=\\\"option.landmarkID\\\" selected=\\\"option.landmarkID == landmarkID\\\"\\r\\n                        *ngFor=\\\"let option of Items\\\">\\r\\n                  {{option.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">GMap Link</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=gmaplink placeholder=\\\"\\\" formControlName=\\\"gmaplink\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">Customer Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"customerStatusID\\\" formControlName=\\\"customerStatusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"customerStatusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"Item Status\\\">IsFeatured</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n              <small>Recommened Files Size: 500X500 & <br>File Size limit is 500 KB</small>\\r\\n              <br>\\r\\n              <label for=\\\"file\\\">Select Images </label>\\r\\n              <input formControlName=\\\"file\\\" id=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control\\\" multiple=\\\"\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n              <div *ngIf=\\\"f.file.touched && f.file.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.file.errors.required\\\">File is required.</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngFor='let url of Images' class=\\\"col-md-2\\\">\\r\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeImage(url)\\\" style=\\\"    background: #E91E63;\\r\\n                    padding: 5px 8px;\\r\\n                    border-radius: 18px;\\r\\n                    color: white;\\r\\n                    position: absolute;\\r\\n                    left: 0;\\\"></i>\\r\\n              <img [src]=\\\"url\\\" style=\\\"padding: 7px; max-width: 200px;  width: auto;height: 180px;\\\"> <br />\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Location\\r\\n            </button>\\r\\n            </div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n                    \\r\\n                    \\r\\n                    <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\">Action</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                    <td> {{item.name}} </td>\\r\\n                    <td> {{item.descripiton}} </td>\\r\\n                    \\r\\n                                 \\r\\n                    <td> {{item.contactNo}} </td>\\r\\n                    \\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                      <!--<a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Customer Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                                <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                    <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                                            Email is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                    <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                            Password is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Mobile</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                                    <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                                            Contact is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\r\\n\\r\\n<div class=\\\"row d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n  <br />\\r\\n  <br />\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h3 class=\\\" mb-0 text-gray-800\\\">Home > Dashboard</h3>\\r\\n  </div>\\r\\n  <hr style=\\\"color:#888\\\" />\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 class=\\\" mb-0 text-gray-800\\\">WELCOME TO GARAGE CUSTOMER CONTROL PANEL</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Feature</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"featureForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Feature Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Display Order</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Features</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Features List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Feature\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 form-group\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!--<div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>-->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"arabicname\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">StatusID</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order</th>\\r\\n            <th width=\\\"15%\\\" style=\\\"\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.arabicName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td> {{item.displayOrder}} </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.featureID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Addons Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Addon</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"10%\\\">Discount </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.discountAmount}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Reviews</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Reviews List</h6>\\r\\n      </div>\\r\\n      <!--<div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Banner\\r\\n        </button>\\r\\n      </div>-->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"35%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Message </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"rate\\\" (sort)=\\\"onSort($event)\\\">Rate </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"location\\\" (sort)=\\\"onSort($event)\\\">Location </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"date\\\" (sort)=\\\"onSort($event)\\\">Date</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\">Status</th>\\r\\n            <!--<th width=\\\"10%\\\">Actions</th>-->\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.message}} </td>\\r\\n            <td> {{item.rate}} </td>\\r\\n            <td> {{item.location}} </td>\\r\\n            <td> {{item.date | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <!--<a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>-->\\r\\n\\r\\n             <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                        <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,103)\\\" *ngIf=\\\"order.statusID!=103\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,104)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (orderOrderCheckout.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}\\r\\n                                            <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                                <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                            </tr>\\r\\n                                        </td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <div class=\\\"modal-header\\\">\\r\\n     \\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n   \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ dataObj.order.statusID == 100 ? \\\"Delivered\\\" : dataObj.order.statusID==101 ?\\\"Order confirmed\\\" : dataObj.order.statusID == 102? \\\"Order prepared\\\" : dataObj.order.statusID == 103? \\\" Order out for delivery\\\" : dataObj.order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n      <hr/>\\r\\n      <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"dataObj.order.statusID!=100\\\">\\r\\n              <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                  <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"\\\">\\r\\n                      <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(dataObj.order,102)\\\" *ngIf=\\\"dataObj.order.statusID!=102\\\">\\r\\n                        <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(dataObj.order,103)\\\" *ngIf=\\\"dataObj.order.statusID!=103\\\">\\r\\n                        <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(dataObj.order,100)\\\" *ngIf=\\\"dataObj.order.statusID!=100\\\">\\r\\n                        <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(dataObj.order,104)\\\">\\r\\n                        <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n              <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Customer Name\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.name }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                   Email\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.email }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Address\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Google Address\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.address }} | Latitude: {{ dataObj.customerOrders.latitude }}| Longitude: {{ dataObj.customerOrders.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Contact Number\\r\\n                                  </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.customerOrders.mobile }}</div>\\r\\n                          </div>\\r\\n                          \\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n\\r\\n                      \\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Order No\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderNo }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Transaction No\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.transactionNo }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Order Type\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderType=='1'?'Home': dataObj.order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                        Order Date\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ dataObj.order.orderDate | date }}</div>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Status\\r\\n                                      </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"mr-2\\\">\\r\\n                                  {{ dataObj.order.statusID == 100 ? \\\"Delivered\\\" : dataObj.order.statusID==101 ?\\\"Order confirmed\\\" : dataObj.order.statusID == 102? \\\"Order prepared\\\" : dataObj.order.statusID == 103? \\\" Order out for delivery\\\" : dataObj.order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 mb-4\\\">\\r\\n              <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Amount Total\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.amountTotal | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Discount\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.discountAmount | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Tax\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.tax | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                Service Charges\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.serviceCharges | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"d-flex align-items-center\\\">\\r\\n                              <div class=\\\"flex-grow-1\\\">\\r\\n                                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                      <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                         Grand Total\\r\\n                              </a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"mr-2\\\">{{ (dataObj.orderCheckouts.grandTotal | number : '1.2-2')}}</div>\\r\\n                          </div>\\r\\n\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                          <table class=\\\"table table-striped\\\">\\r\\n                              <thead>\\r\\n                                  <tr class=\\\"table-header\\\">\\r\\n                                      <th width=\\\"50%\\\">Name </th>\\r\\n                                      <th width=\\\"25\\\">Quantity</th>\\r\\n                                      <th width=\\\"25\\\">Price</th>\\r\\n                                  </tr>\\r\\n                              </thead>\\r\\n                              <tbody>\\r\\n                                  <tr *ngFor=\\\"let item of dataObj.orderDetails \\\">\\r\\n                                      <td> {{item.name}}\\r\\n                                          <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                              <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                          </tr>\\r\\n                                      </td>\\r\\n                                      <td> {{item.quantity}} </td>\\r\\n                                      <td> {{item.price}} </td>\\r\\n                                  </tr>\\r\\n                              </tbody>\\r\\n                          </table>\\r\\n                      </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n</div>    \\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n  </div> -->\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button> -->\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"5%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                        <td> {{item.orderNo}} </td>\\r\\n                        <td> {{item.transactionNo}} </td>\\r\\n                        <td> {{item.customerName}} </td>\\r\\n                        <td> {{item.customerMobile}} </td>\\r\\n                        <!-- <td> {{item.amountTotal | number : '1.2-2'}} </td>\\r\\n                        <td> {{item.tax | number : '1.2-2'}} </td>\\r\\n                        <td> {{item.serviceCharges | number : '1.2-2'}} </td> -->\\r\\n                        <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n                        <td>{{item.orderDate | date}}</td>\\r\\n                        <td><span class=\\\"badge badge-yellow\\\">{{item.orderType==1?\\\"Delivery\\\" :\\\"Pick Up\\\"}}</span></td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 102,'btn-warning': item.statusID === 101,'btn-success': item.statusID === 100, 'btn-danger':item.statusID === 103, 'btn-danger':item.statusID === 104 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Delivered' :\\r\\n                             item.statusID ==101 ? 'Confirmed' :\\r\\n                             item.statusID ==102 ? 'Prepared' :\\r\\n                             item.statusID ==103 ? 'On Delivery' :\\r\\n                             item.statusID ==104 ? 'Cancelled' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <!-- <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"open(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                            <a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"deliveryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Delivery Area Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                                <div class=\\\"form-row\\\">\\r\\n                                    <div class=\\\"form-group col-md-12\\\">\\r\\n            \\r\\n                                        <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Brands</label>\\r\\n                                        <ng-select [items]=\\\"BrandsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"brandID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedBrandIds\\\">\\r\\n                                            <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                                <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                                </div>\\r\\n            \\r\\n                                            </ng-template>\\r\\n                                        </ng-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            \\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Amount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                                    <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                                            Amount is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                     \\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Amenities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"amenitiesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Amenities Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                 \\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Amenities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Amenities List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Amenities\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.arabicName}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.amenitiesID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Timings & Info</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Timings & Info Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\"> Branch Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=BranchName placeholder=\\\"\\\" formControlName=\\\"branchName\\\">\\r\\n                                <div *ngIf=\\\"f.branchName.invalid && (f.branchName.dirty || f.branchName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.branchName.errors.required\\\">\\r\\n                                       Branch Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Address</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchAddress placeholder=\\\"\\\" formControlName=\\\"branchAddress\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Discount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=deliveryNo placeholder=\\\"\\\" formControlName=\\\"deliveryNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Whatsapp No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=whatsappNo placeholder=\\\"\\\" formControlName=\\\"whatsappNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Timing </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchTiming placeholder=\\\"\\\" formControlName=\\\"branchTiming\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Discount Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"discountdescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Application Info</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                   \\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Application Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"appDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Facebook Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=facebook placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Twitter Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=twitter placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Instagram Link </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=instagram placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <!-- <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                 \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Banner Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                                    <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                                            Description is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Banner\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ title }}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismiss()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      {{ message }}\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{ btnCancelText }}</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"accept()\\\">{{ btnOkText }}</button>\\r\\n    </div>\\r\\n\";","export default \"\\r\\n<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Area\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">                      \\r\\n                        <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>                          \\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                     \\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.amount}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Discount</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"discountForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Discount Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Location</label>\\r\\n                  <ng-select [items]=\\\"LocationList\\\" bindLabel=\\\"name\\\" bindValue=\\\"locationID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedLocationID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">From Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" placeholder=\\\"\\\" formControlName=\\\"fromDate\\\" required>\\r\\n                  <div *ngIf=\\\"f.fromDate.invalid && (f.fromDate.dirty || f.fromDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fromDate.errors.required\\\">\\r\\n                      From Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">To Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" placeholder=\\\"\\\" formControlName=\\\"toDate\\\" required>\\r\\n                  <div *ngIf=\\\"f.toDate.invalid && (f.toDate.dirty || f.toDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.toDate.errors.required\\\">\\r\\n                      To Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">From Time</label>\\r\\n                  <ngb-timepicker [(ngModel)]=\\\"fromTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">To Time</label>\\r\\n                  <ngb-timepicker [(ngModel)]=\\\"toTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n\\r\\n              <app-alternateimage></app-alternateimage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Discount</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Discount List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Discount\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From  </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To  </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.fromDate | date}} </td>\\r\\n            <td> {{item.toDate | date}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.discountID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <!--<a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n     <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n            <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n            </ngb-pagination>\\r\\n        </div>\\r\\n    </div> \\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Landmark</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"landmarkForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Landmark Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                 \\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Landmark</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Landmark List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Landmark\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>   \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicName\\\" (sort)=\\\"onSort($event)\\\">Arabic Name </th>                                                                                           \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.arabicName}} </td>\\r\\n                      \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.landmarkID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Services</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"serviceForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Service Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=serviceTitle placeholder=\\\"\\\" formControlName=\\\"serviceTitle\\\">\\r\\n                                <div *ngIf=\\\"f.serviceTitle.invalid && (f.serviceTitle.dirty || f.serviceTitle.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.serviceTitle.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicServiceTitle placeholder=\\\"\\\" formControlName=\\\"arabicServiceTitle\\\">\\r\\n                                \\r\\n                            </div>\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"serviceDescription\\\" placeholder=\\\"\\\" formControlName=\\\"serviceDescription\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicServiceDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicServiceDescription\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Display Order</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"displayOrder\\\" placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group  \\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Services</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Service List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Services\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"serviceTitle\\\" (sort)=\\\"onSort($event)\\\"> Title </th> \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicServiceTitle\\\" (sort)=\\\"onSort($event)\\\"> Arr Title </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"serviceDescription\\\" (sort)=\\\"onSort($event)\\\"> Description </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicServiceDescription\\\" (sort)=\\\"onSort($event)\\\">Arr Description </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.serviceTitle}} </td>\\r\\n                        <td> {{item.arabicServiceTitle}} </td>\\r\\n                        <td> {{item.serviceDescription}} </td>\\r\\n                        <td> {{item.arabicServiceDescription}} </td>\\r\\n                        <td> {{item.displayOrder}} </td>\\r\\n                        <td> {{item.type}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.serviceID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"settingForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Setting Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=title placeholder=\\\"\\\" formControlName=\\\"title\\\">\\r\\n              <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                  Title is required.\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicTitle placeholder=\\\"\\\" formControlName=\\\"arabicTitle\\\">\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Arabic Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"arabicDescription\\\" placeholder=\\\"\\\" formControlName=\\\"arabicDescription\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Page Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pageName\\\" placeholder=\\\"\\\" formControlName=\\\"pageName\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group  \\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Display Order</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"displayOrder\\\" placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Location</label>\\r\\n                  <ng-select [items]=\\\"LocationList\\\" bindLabel=\\\"name\\\" bindValue=\\\"locationID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedLocationID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n\\r\\n              <app-alternateimage></app-alternateimage>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Setting List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Setting\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"title\\\" (sort)=\\\"onSort($event)\\\"> Title </th>   \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicTitle\\\" (sort)=\\\"onSort($event)\\\"> Arabic Title </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"arabicDescription\\\" (sort)=\\\"onSort($event)\\\"> Arabic description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"pageName\\\" (sort)=\\\"onSort($event)\\\"> Page Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\">Type </th>                        \\r\\n                        <th width=\\\"5%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>                        \\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.title}} </td>\\r\\n                        <td> {{item.arabicTitle}} </td>\\r\\n                        <td> {{item.description}} </td>                        \\r\\n                        <td> {{item.arabicDescription}} </td>                        \\r\\n                        <td> {{item.pageName}} </td>\\r\\n                        <td> {{item.type}} </td>\\r\\n                        <td> {{item.displayOrder}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.id)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                            <a (click)=\\\"openConfirmationDialog(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\";","export default \"<router-outlet>\\r\\n\\r\\n</router-outlet>\\r\\n\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ alternateimageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\\r\\n\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\";","export default \"<body id=\\\"page-top\\\">\\r\\n  <!-- Page Wrapper -->\\r\\n  <div id=\\\"wrapper\\\">\\r\\n\\r\\n    <!-- Sidebar -->\\r\\n    <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n\\r\\n      <!-- Sidebar - Brand -->\\r\\n      <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n        <div class=\\\"sidebar-brand-icon\\\">\\r\\n          <img src=\\\"../../assets/img/logo-garage.svg\\\" style=\\\"width: 40%;\\\" />\\r\\n        </div>\\r\\n      </a>\\r\\n\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider my-0\\\">\\r\\n\\r\\n      <!-- Nav Item - Dashboard -->\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n          <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n\\r\\n      <!-- Heading -->\\r\\n      <div class=\\\"sidebar-heading\\\">\\r\\n        Modules\\r\\n      </div>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n          <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n          <span>Settings</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/discount']\\\">Discount</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/services']\\\">Services</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/amenities']\\\">Amenities</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/location']\\\">Locations</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/landmarks']\\\">Landmarks</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/setting']\\\">Setting</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCarSell\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCarSell\\\">\\r\\n          <i class=\\\"fas fa-fw fa-bars\\\"></i>\\r\\n          <span>Car Sell</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCarSell\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/bodytype']\\\">Body Type List</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/features']\\\">Features List</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/carsell']\\\">Car List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseReviews\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseReviews\\\">\\r\\n          <i class=\\\"fas fa-fw fa-receipt\\\"></i>\\r\\n          <span>Customer Reviews</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseReviews\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reviews']\\\">Reviews List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!--<hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseFeatures\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseFeatures\\\">\\r\\n          <i class=\\\"fas fa-fw fa-file-invoice\\\"></i>\\r\\n          <span>Features</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseFeatures\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/features']\\\">Features List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseBodyType\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseBodyType\\\">\\r\\n          <i class=\\\"fas fa-fw fa-book-open\\\"></i>\\r\\n          <span>Body Type</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseBodyType\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/bodytype']\\\">Body Type List</a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>-->\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n\\r\\n      <!-- Sidebar Toggler (Sidebar) -->\\r\\n      <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n        <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n      </div>\\r\\n\\r\\n    </ul>\\r\\n    <!-- End of Sidebar -->\\r\\n    <!-- Content Wrapper -->\\r\\n    <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n\\r\\n      <!-- Main Content -->\\r\\n      <div id=\\\"content\\\">\\r\\n\\r\\n        <!-- Topbar -->\\r\\n        <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n\\r\\n          <!-- Sidebar Toggle (Topbar) -->\\r\\n          <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n          </button>\\r\\n\\r\\n\\r\\n\\r\\n          <!-- Topbar Navbar -->\\r\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\r\\n            <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n              <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">Administrator</span>\\r\\n                <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n              </a>\\r\\n              <!-- Dropdown - User Information -->\\r\\n              <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                  <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n                </a>\\r\\n              </div>\\r\\n            </li>\\r\\n\\r\\n          </ul>\\r\\n\\r\\n        </nav>\\r\\n        <!-- End of Topbar -->\\r\\n        <!-- Begin Page Content -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- End of Main Content -->\\r\\n      <!-- Footer -->\\r\\n      <footer class=\\\"sticky-footer bg-white\\\">\\r\\n        <div class=\\\"container my-auto\\\">\\r\\n          <div class=\\\"copyright text-center my-auto\\\">\\r\\n            <span>Copyright &copy; Garage 2022</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- End of Footer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- End of Content Wrapper -->\\r\\n\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-5\\\">\\r\\n                                    <img src=\\\"../../assets/img/logo-garage.svg\\\" style=\\\"height:110px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">GarageCustomerAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n    console.log('worksheet',worksheet);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n}","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class CarSells {\r\n  carSellID:number;\r\n  customerID:number;\r\n  customerPhone:string;\r\n  name:string;\r\n  description:string;\r\n  registrationNo: string;\r\n  bodyTypeID: number;\r\n  bodyType:string;\r\n  features:string;\r\n  fuelType:string;\r\n  engineType:string;\r\n  kilometer:string;\r\n  year:string;\r\n  makeID:number;\r\n  modelID:number;\r\n  makeName:string;\r\n  modelName:string;\r\n  transmition:string;\r\n  price:number;\r\n  isInspected:boolean;\r\n  cityID:number;\r\n  countryCode:string;\r\n  address:string;\r\n  carSellAddID:number;\r\n  bodyColor:string;\r\n  assembly:string;\r\n  reason:string;\r\n  statusID:number;\r\n  createdBy:number;\r\n  createdDate:string;\r\n  updatedBy:number;   \r\n}\r\nexport class CarSellImages {\r\n  id: number;\r\n  carSellID: number;\r\n  image: string;\r\n  statusID: number;\r\n\r\n}\r\nexport class Customers {\r\n  customerID: number;\r\n  fullName: string;\r\n  email: string;\r\n  mobile: string;\r\n  city: string;\r\n  password: string;\r\n  image: string;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n}\r\n\r\nexport class Make {\r\n  makeID: number;\r\n  rowID: number;\r\n  name: string;\r\n  aArabicName: string;\r\n  imagePath: string;\r\n  lastUpdatedBy: string;\r\n  lastUpdatedDate: string;\r\n  statusID: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n  displayOrder: number;\r\n}\r\nexport class Models {\r\n  modelID: number;\r\n  rowID: number;\r\n  makeID: number;\r\n  name: string;\r\n  arabicName: string;\r\n  year: string;\r\n  engineNo: string;\r\n  recommendedLitres: string;\r\n  imagePath: string;\r\n  lastUpdatedBy: string;\r\n  lastUpdatedDate: string;\r\n  statusID: number;\r\n  createdOn: string;\r\n  createdBy: string;\r\n}\r\nexport class Country {\r\n  code: string;\r\n  name: string;\r\n}\r\nexport class City {\r\n  id: number;\r\n  name: string;\r\n}\r\nexport class Feature {\r\n  featureID: number;\r\n  name: string;\r\n}\r\n","export class DashboardSummary {\r\n  totalOrders: number;\r\n  totalTax: number;\r\n  netSales: number;\r\n  sales: number;\r\n}","export class Orders {\r\n  customerID: number;\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  orderDetailModifier: OrderDetailModifiers[]\r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Report {\r\n\r\n}\r\n\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  tax: number;\r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Amenities } from '../_models/Amenities';\r\n\r\n\r\ninterface SearchAmenitiesResult {\r\n  data: Amenities[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Amenities[], column: SortColumn, direction: string): Amenities[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Amenities, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AmenitiesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Amenities[]>([]);\r\n  private _data$ = new BehaviorSubject<Amenities[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Amenities: Amenities[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Amenities[]>(`api/amenities/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/amenities/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Amenities[]>(url).subscribe(res => {\r\n        this.Amenities = res;\r\n         \r\n        this._data$.next(this.Amenities);\r\n        this._allData$.next(this.Amenities);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAmenitiesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Amenities, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/amenities/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/amenities/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/amenities/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchCategoryResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(brandId) {\r\n    return this.http.get<Appsetting[]>(`api/About/brand/${brandId}`);\r\n  }\r\n\r\n  \r\n  // getAllData(brandId) {\r\n\r\n  //   const url = `api/category/all/${brandId}`;\r\n  //   console.log(url);\r\n  //   tap(() => this._loading$.next(true)),\r\n  //     this.http.get<Category[]>(url).subscribe(res => {\r\n  //       this.categories = res;\r\n  //         debugger\r\n  //       this._data$.next(this.categories);\r\n  //       this._allData$.next(this.categories);\r\n\r\n  //       this._search$.pipe(\r\n  //         switchMap(() => this._search()),\r\n  //         tap(() => this._loading$.next(false))\r\n  //       ).subscribe(result => {\r\n  //         // this._data$.next(result.data);\r\n  //         this._total$.next(result.total);\r\n  //       });\r\n\r\n  //       this._search$.next();\r\n  //     });\r\n  // }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n \r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/About/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/About/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id, brandId) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/banner/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        debugger\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { BodyType } from '../_models/BodyType';\r\n\r\ninterface SearchBodyTypeResult {\r\n  data: BodyType[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: BodyType[], column: SortColumn, direction: string): BodyType[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: BodyType, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BodyTypeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<BodyType[]>([]);\r\n  private _data$ = new BehaviorSubject<BodyType[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public bodytype: BodyType[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList() {\r\n    return this.http.get<BodyType[]>(`api/bodyType/all/`);\r\n  }\r\n  getById(id) {\r\n    \r\n    return this.http.get<BodyType[]>(`api/bodyType/${id}/brand/`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/bodyType/all/`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<BodyType[]>(url).subscribe(res => {\r\n        this.bodytype = res;\r\n           \r\n        this._data$.next(this.bodytype);\r\n        this._allData$.next(this.bodytype);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBodyTypeResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.bodytype, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/bodyType/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/bodyType/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/bodyType/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { CarSellImages, CarSells } from '../_models/CarSell';\r\nimport { Features } from '../_models/Feature';\r\nimport { City } from '../_models/City';\r\nimport { BodyType } from '../_models/BodyType';\r\nimport { Customers, Make, Models } from '../_models/Carsell';\r\n\r\n\r\ninterface SearchCarSellResult {\r\n  data: CarSells[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: CarSells[], column: SortColumn, direction: string): CarSells[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: CarSells, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarSellService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<CarSells[]>([]);\r\n  private _data$ = new BehaviorSubject<CarSells[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public carsells: CarSells[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/carsell/${id}`);\r\n  }\r\n  getcarId(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/carsell/carsellid/${id}`);\r\n  }\r\n  printorder(id) {\r\n    return this.http.get<CarSells[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(fromDate,toDate) {\r\n\r\n    const url = `api/carsell/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<CarSells[]>(url).subscribe(res => {\r\n        this.carsells = res;\r\n           \r\n        this._data$.next(this.carsells);\r\n        this._allData$.next(this.carsells);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCarSellResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.carsells, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/carsell/insert', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  loadCarSellImages(id) {\r\n    debugger\r\n    return this.http.get<CarSellImages[]>( `api/carsell/images/${id}`);\r\n  }\r\n  loadFeature() {\r\n    return this.http.get<Features[]>( `api/feature/all`);\r\n  }\r\n  loadBodyType() {\r\n    return this.http.get<BodyType[]>(`api/bodytype/all`);\r\n  }\r\n  loadMake() {\r\n    return this.http.get<Make[]>( `api/carsell/allMake`);\r\n  }\r\n  loadModel(event) {\r\n    return this.http.get<Models[]>( `api/carsell/allModel/${event}`);\r\n  }\r\n  loadCountry() {\r\n    return this.http.get<Features[]>( `api/carsell/allCountry`);\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  loadCity(event) {\r\n    debugger\r\n    return this.http.get<any[]>( `api/carsell/allCity/${event}`);\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/carsell/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }   \r\n  updatestatus(carsell) {\r\n    debugger\r\n    return this.http.post(`api/carsell/updatestatus`, carsell)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  } \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/customer/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/customer/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Location } from '../_models/Location';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\nimport { State } from '../_models/State';\r\n\r\ninterface SearchDashboardResult {\r\n  data: DashboardSummary[];\r\n  total: number;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DashboadService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public dashboard: DashboardSummary[];\r\n\r\n  GetDashboard(locationID, date) {\r\n    var today = date;\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + dd + '-' + mm;\r\n    return this.http.get<any[]>(`api/dashboard/get/${locationID}/${today}`);\r\n  }\r\n\r\n  GetDashboardRange(locationID, fdate,tdate) {\r\n    return this.http.get<any[]>(`api/dashboard/range/get/${locationID}/${fdate}/${tdate}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData(brandId) {\r\n\r\n    const url = `api/delivery/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Discount } from '../_models/Discount';\r\n\r\n\r\ninterface SearchDiscountResult {\r\n  data: Discount[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Discount[], column: SortColumn, direction: string): Discount[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Discount, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DiscountService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Discount[]>([]);\r\n  private _data$ = new BehaviorSubject<Discount[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Discount: Discount[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Discount[]>(`api/discount/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/discount/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Discount[]>(url).subscribe(res => {\r\n        this.Discount = res;\r\n         \r\n        this._data$.next(this.Discount);\r\n        this._allData$.next(this.Discount);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDiscountResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Discount, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/discount/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/discount/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/discount/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Features } from '../_models/Feature';\r\n\r\n\r\ninterface SearchFeatureResult {\r\n  data: Features[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Features[], column: SortColumn, direction: string): Features[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Features, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FeaturesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Features[]>([]);\r\n  private _data$ = new BehaviorSubject<Features[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Feature: Features[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Features[]>(`api/feature/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/feature/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Features[]>(url).subscribe(res => {\r\n        this.Feature = res;\r\n         \r\n        this._data$.next(this.Feature);\r\n        this._allData$.next(this.Feature);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchFeatureResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Feature, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/feature/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/feature/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/feature/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Landmark } from '../_models/Landmark';\r\n\r\n\r\n\r\ninterface SearchLandmarkResult {\r\n  data: Landmark[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Landmark[], column: SortColumn, direction: string): Landmark[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Landmark, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LandmarkService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Landmark[]>([]);\r\n  private _data$ = new BehaviorSubject<Landmark[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Landmark: Landmark[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Landmark[]>(`api/landmark/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/landmark/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Landmark[]>(url).subscribe(res => {\r\n        this.Landmark = res;\r\n         \r\n        this._data$.next(this.Landmark);\r\n        this._allData$.next(this.Landmark);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLandmarkResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Landmark, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/landmark/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/landmark/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/landmark/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location, LocationImages } from '../_models/Location';\r\nimport { Amenities } from '../_models/Amenities';\r\nimport { Services } from '../_models/Services';\r\nimport { Landmark } from '../_models/Landmark';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Location[]>(`api/location/${id}`);\r\n  }\r\n  getAllLocations() {\r\n    return this.http.get<Location[]>(`api/location/all`);\r\n  }\r\n  getAllData() {\r\n    \r\n    const url = `api/location/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  loadLocationImages(id) {\r\n    debugger\r\n    return this.http.get<LocationImages[]>( `api/location/images/${id}`);\r\n  }\r\n  loadAmenities() {\r\n    return this.http.get<Amenities[]>( `api/amenities/all`);\r\n  }\r\n  loadService() {\r\n    return this.http.get<Services[]>( `api/service/all`);\r\n  }\r\n  loadLandmark() {\r\n    return this.http.get<Landmark[]>( `api/landmark/all`);\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post('api/location/insertlocation', data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger;\r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Offers } from '../_models/Offers';\r\n\r\n\r\ninterface SearchOffersResult {\r\n  data: Offers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Offers[], column: SortColumn, direction: string): Offers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Offers, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OffersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Offers[]>([]);\r\n  private _data$ = new BehaviorSubject<Offers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public offerss: Offers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Offers[]>(`api/offers/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/offers/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Offers[]>(url).subscribe(res => {\r\n        this.offerss = res;\r\n          \r\n        this._data$.next(this.offerss);\r\n        this._allData$.next(this.offerss);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOffersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.offerss, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/offers/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/offers/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/offers/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id,brandId) {\r\n    return this.http.get<any[]>(`api/orders/${id}/brand/${brandId}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(brandID,locationID,fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/${brandID}/${locationID}/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { SortColumn, SortDirection, State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalescategorywiseReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalescategorywiseReport[], column: SortColumn, direction: string): SalescategorywiseReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: SalescategorywiseReport, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salescategorywiseReport: SalescategorywiseReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    debugger;\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salescategorywiseReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesDetailRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { reviews } from '../_models/Reviews';\r\n\r\n\r\ninterface SearchReviewsResult {\r\n  data: reviews[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: reviews[], column: SortColumn, direction: string): reviews[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: reviews, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReviewsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<reviews[]>([]);\r\n  private _data$ = new BehaviorSubject<reviews[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Review: reviews[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getAllData() {\r\n\r\n    const url = `api/reviews/all/`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<reviews[]>(url).subscribe(res => {\r\n        this.Review = res;\r\n        debugger\r\n        this._data$.next(this.Review);\r\n        this._allData$.next(this.Review);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchReviewsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Review, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Services } from '../_models/Services';\r\n\r\n\r\ninterface SearchAmenitiesResult {\r\n  data: Services[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Services[], column: SortColumn, direction: string): Services[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Services, term: string) {\r\n  debugger\r\n  return data.serviceTitle.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Services[]>([]);\r\n  private _data$ = new BehaviorSubject<Services[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Amenities: Services[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Services[]>(`api/service/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/service/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Services[]>(url).subscribe(res => {\r\n        this.Amenities = res;\r\n         \r\n        this._data$.next(this.Amenities);\r\n        this._allData$.next(this.Amenities);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAmenitiesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Amenities, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/service/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/service/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/service/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { setting } from '../_models/Setting';\r\n\r\n\r\ninterface SearchSettingResult {\r\n  data: setting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: setting[], column: SortColumn, direction: string): setting[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: setting, term: string) {\r\n  debugger\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<setting[]>([]);\r\n  private _data$ = new BehaviorSubject<setting[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Setting: setting[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<setting[]>(`api/setting/${id}`);\r\n  }\r\n  getAllData() {\r\n \r\n    const url = `api/setting/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<setting[]>(url).subscribe(res => {\r\n        this.Setting = res;\r\n         \r\n        this._data$.next(this.Setting);\r\n        this._allData$.next(this.Setting);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchSettingResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Setting, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/setting/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/setting/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/setting/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2JvZHl0eXBlL2FkZC9hZGRib2R5VHlwZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BodyTypeService } from 'src/app/_services/bodyType.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addbodyType',\r\n  templateUrl: './addbodyType.component.html',\r\n  styleUrls: ['./addbodyType.component.css']\r\n})\r\nexport class AddbodyTypeComponent implements OnInit {\r\n  submitted = false;\r\n  bodytypeForm: FormGroup;\r\n  loading = false;\r\n  loadingbodyType = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private bodytypeService: BodyTypeService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelected();\r\n  }\r\n\r\n  get f() { return this.bodytypeForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bodytypeForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      displayOrder: [],\r\n      arabicName: [''],\r\n      statusID: [true],\r\n      bodyTypeID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelected() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingbodyType = true;\r\n        this.f.bodyTypeID.setValue(sid);\r\n        this.bodytypeService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingbodyType = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.bodytypeForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bodytypeForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.bodyTypeID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.bodytypeForm.value));\r\n      this.bodytypeService.insert(this.bodytypeForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/bodytype']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.bodytypeService.update(this.bodytypeForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/bodytype']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BodyType } from 'src/app/_models/BodyType';\r\nimport { BodyTypeService } from 'src/app/_services/bodyType.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-bodytype',\r\n  templateUrl: './bodytype.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class BodyTypeComponent implements OnInit {\r\n  data$: Observable<BodyType[]>;  \r\n  oldData: BodyType[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>; \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BodyTypeService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(bodytype) {\r\n        \r\n    this.router.navigate([\"admin/bodytype/edit\", bodytype]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarSells, CarSellImages, Customers, Make, Models, Country, City, Feature } from 'src/app/_models/CarSell';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-carselldetails',\r\n  templateUrl: './carselldetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class CarSelldetailsComponent implements OnInit {\r\n  public carsell = new CarSells();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  reason = [\"\"];\r\n  public customerInfo = new Customers();\r\n  public makeInfo = new Make();\r\n  public modelInfo = new Models();\r\n  public countryInfo = new Country();\r\n  public cityInfo = new City();\r\n  public featureInfo = new Feature();\r\n  public images = new CarSellImages();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: CarSellService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loadCarSellImages(this.carsell.carSellID);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n  setSelectedOrder() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(carsell, status) {\r\n    debugger\r\n    carsell.statusID = status;\r\n    carsell.reason = this.reason;\r\n\r\n    //Update customer\r\n    this.service.updatestatus(carsell).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/carsell']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.carsell = obj.carsell;\r\n    this.customerInfo = obj.customer;\r\n    this.makeInfo = obj.make;\r\n    this.modelInfo = obj.model;\r\n    this.countryInfo = obj.country;\r\n    this.cityInfo = obj.city;\r\n    this.featureInfo = obj.feature;\r\n    this.images = obj.image;\r\n  }\r\n  private loadCarSellImages(carsell) {\r\n    debugger\r\n    this.service.loadCarSellImages(carsell).subscribe((res: any) => {\r\n      this.images = res;\r\n      //this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnNlbGwvY2Fyc2VsbGxpc3QvYWRkY2Fyc2VsbC9hZGRjYXJzZWxsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BodyTypeService } from '../../../../_services/bodyType.service';\r\n\r\n@Component({\r\n  selector: 'app-addcarsell',\r\n  templateUrl: './addcarsell.component.html',\r\n  styleUrls: ['./addcarsell.component.css']\r\n})\r\nexport class AddcarsellComponent implements OnInit {\r\n  submitted = false;\r\n  carSellForm: FormGroup;\r\n  loading = false;\r\n  Images = [];\r\n  FeaturesList = [];\r\n  BodyTypeList = [];\r\n  ModelList = [];\r\n  CustomerList = [];\r\n  MakeList = [];\r\n  CountryList = [];\r\n  CityList = [];\r\n  selectedFeatureID: [];\r\n  selectedBodyTypeID = [];\r\n  selectedModelID = [];\r\n  selectedMakeID = [];\r\n  selectedCityID = [];\r\n  YearList = ['2023', '2022', '2021', '2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990'];\r\n  ButtonText = \"Save\";\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private carsellService: CarSellService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCarSellFeature();\r\n    this.loadBodyType();\r\n    this.loadMake();\r\n    //this.loadCustomer();\r\n    this.loadCountry();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCarSell();\r\n  }\r\n\r\n  get f() { return this.carSellForm.controls; }\r\n\r\n  private createForm() {\r\n    this.carSellForm = this.formBuilder.group({\r\n      carSellID: 0,\r\n      customerID: [0],\r\n      customerPhone: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      statusID: [1],\r\n      createdBy: [],\r\n      updatedBy: [],\r\n      isInspected: [false],\r\n      imagesSource: ['', Validators.required],\r\n      imageUrl: [''],\r\n      carsellImages: [],\r\n      featureID: [null],\r\n      features: [],\r\n      registrationNo: ['', Validators.required],\r\n      bodyTypeID: ['', Validators.required],\r\n      bodyType: [''],\r\n      fuelType: ['', Validators.required],\r\n      engineType: ['', Validators.required],\r\n      kilometer: ['', Validators.required],\r\n      year: ['', Validators.required],\r\n      makeID: [, Validators.required],\r\n      modelID: [, Validators.required],\r\n      transmition: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      cityID: [, Validators.required],\r\n      countryCode: ['', Validators.required],\r\n      carSellAddID: 0,\r\n      bodyColor: ['', Validators.required],\r\n      assembly: ['', Validators.required],\r\n      file: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images = this.Images ?? [];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.carSellForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.customerPhone.setValue(obj.customerPhone);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.assembly.setValue(obj.assembly);\r\n    this.f.cityID.setValue(obj.cityID);\r\n    this.f.bodyColor.setValue(obj.bodyColor);\r\n    this.f.countryCode.setValue(obj.countryCode);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.transmition.setValue(obj.transmition);\r\n    this.f.modelID.setValue(obj.modelID);\r\n    this.f.makeID.setValue(obj.makeID);\r\n    this.f.year.setValue(obj.year);\r\n    this.f.kilometer.setValue(obj.kilometer);\r\n    this.f.fuelType.setValue(obj.fuelType);\r\n    this.f.engineType.setValue(obj.engineType);\r\n    this.f.bodyTypeID.setValue(obj.bodyTypeID);\r\n    this.f.bodyType.setValue(obj.bodyType);\r\n    this.f.registrationNo.setValue(obj.registrationNo);\r\n    this.f.carSellID.setValue(obj.carSellID);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.statusID.setValue(obj.statusID === 1);\r\n    this.loadCarSellImages(this.f.carSellID.value);\r\n    if (obj.features != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.features;\r\n      this.selectedFeatureID = stringToConvert.split(',').map(Number);\r\n      this.f.features.setValue(obj.features);\r\n    }\r\n    if (obj.countryCode != \"\") {\r\n      this.carsellService.loadCity(obj.countryCode).subscribe((res: any) => {\r\n        this.CityList = res;\r\n      });\r\n    }\r\n    if (obj.makeID != \"\") {\r\n      this.carsellService.loadModel(obj.makeID).subscribe((res: any) => {\r\n        this.ModelList = res;\r\n      });\r\n    }\r\n  }\r\n  private loadCarSellImages(id) {\r\n    debugger\r\n    this.carsellService.loadCarSellImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  private loadCarSellFeature() {\r\n    this.carsellService.loadFeature().subscribe((res: any) => {\r\n      this.FeaturesList = res;\r\n    });\r\n  }\r\n  private loadBodyType() {\r\n    this.carsellService.loadBodyType().subscribe((res: any) => {\r\n      this.BodyTypeList = res;\r\n    });\r\n  }\r\n\r\n  private loadMake() {\r\n    this.carsellService.loadMake().subscribe((res: any) => {\r\n      this.MakeList = res;\r\n    });\r\n  }\r\n  private loadCountry() {\r\n    this.carsellService.loadCountry().subscribe((res: any) => {\r\n      this.CountryList = res;\r\n    });\r\n  }\r\n  //private loadCustomer() {\r\n  //  debugger\r\n  //  this.carsellService.loadCustomer().subscribe((res: any) => {\r\n  //    this.CustomerList = res;\r\n  //  });\r\n  //}\r\n\r\n  onSelect(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.carsellService.loadCity(value).subscribe((res: any) => {\r\n      this.CityList = res;\r\n    });\r\n  }\r\n\r\n  onChange(event) {\r\n    let selectElementValue = event.target.value;\r\n    let [index, value] = selectElementValue.split(':').map(item => item.trim());\r\n    console.log(index);\r\n    console.log(value);\r\n\r\n    this.carsellService.loadModel(value).subscribe((res: any) => {\r\n      this.ModelList = res;\r\n    });\r\n  }\r\n  setSelectedCarSell() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.carSellID.setValue(sid);\r\n        this.carsellService.getcarId(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.carSellForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.carSellForm.invalid) { return; }\r\n    this.loading = true;\r\n    //this.f.statusID.setValue(this.f.statusID.value === 1 ? true : false);\r\n    this.f.features.setValue(this.selectedFeatureID == undefined ? \"\" : this.selectedFeatureID.toString());\r\n    if (parseInt(this.f.carSellID.value) === 0) {\r\n      //Insert location\r\n      this.carsellService.insert(this.carSellForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.carsellService.update(this.carSellForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/carsell']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NhcnNlbGwvY2Fyc2VsbGxpc3QvY2Fyc2VsbGxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CarSells } from 'src/app/_models/CarSell';\r\nimport { CarSellService } from 'src/app/_services/carsell.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { NgbdModalContent } from '../../sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-carselllist',\r\n  templateUrl: './carselllist.component.html',\r\n  styleUrls: ['./carselllist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CarselllistComponent implements OnInit {\r\n  data$: Observable<CarSells[]>;\r\n  FeatureList =[];\r\n  oldData: CarSells[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n   \r\n   submit: boolean;\r\n  \r\n   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n   \r\n  \r\n  constructor(public service: CarSellService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    //this.loadLocations();\r\n  }\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n    this.getData();\r\n  }\r\n  Edit(CarSellID) {\r\n     \r\n    this.router.navigate([\"admin/carsell/edit\", CarSellID]);\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/carsell']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  //UpdateStatus(item, status) {\r\n  //  debugger\r\n  //  item.statusID = status;\r\n  //  //Update customer\r\n  //  this.service.updatestatus(item).subscribe(data => {\r\n\r\n  //    if (data != 0) {\r\n  //      this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n  //      this.router.navigate(['/admin/carsell']);\r\n  //    }\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to update record.\")\r\n  //  });\r\n  //}\r\n  \r\n\r\n  getData() {\r\n     debugger\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(carsell) {\r\n    this.router.navigate([\"admin/carselldetails/view\", carsell]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      debugger\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n        debugger\r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  Images = [];\r\n  AmenitiesList =[];\r\n  ServiceList =[];\r\n  LandmarkList =[];\r\n  Items = [];\r\n  selectedAmenitiesID=[];\r\n  selectedServiceID=[];\r\n  selectedLandmarkID=[];\r\n  ButtonText = \"Save\";\r\n   \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();    \r\n    this.loadAmenities();\r\n    this.loadService();\r\n    this.loadLandmark();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n  private createForm() {\r\n    \r\n    this.locationForm = this.formBuilder.group({\r\n      locationID: 0,       \r\n      name: ['', Validators.required],\r\n      descripiton: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      arabicAddress: ['', Validators.required],\r\n      contactNo: ['', Validators.required],  \r\n      arabicName: ['', Validators.required],\r\n      arabicDescription: ['', Validators.required],    \r\n      email: ['', Validators.required],                  \r\n      minOrderAmount: [0],  \r\n      latitude: ['', Validators.required],\r\n      longitude: ['', Validators.required],  \r\n      statusID: [1],\r\n      customerStatusID: [1],\r\n      landmarkID:[],      \r\n      gmaplink: ['', Validators.required],     \r\n      imageURL: [''],\r\n      lastUpdatedBy:[''],                 \r\n      lastUpdatedDate:[''],\r\n      isFeatured:false,\r\n      file: [''],\r\n      imagesSource: [''],\r\n      locationImages: [],\r\n      amenities:[],\r\n      service:[],\r\n      //landmark:[],\r\n      amenitiesID:[null],\r\n      serviceID:[null]\r\n      \r\n      \r\n    });\r\n  }\r\n  onFileChange(event) {\r\n    this.Images=this.Images??[];\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        var fileSize = event.target.files[i].size / 100000;\r\n        if (fileSize > 5) { alert(\"Filesize exceed 500 KB\"); }\r\n        else {\r\n         \r\n          reader.onload = (event: any) => {\r\n            console.log(event.target.result);\r\n            this.Images.push(event.target.result);\r\n            this.locationForm.patchValue({\r\n              imagesSource: this.Images\r\n            });\r\n          }\r\n          reader.readAsDataURL(event.target.files[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.arabicAddress.setValue(obj.arabicAddress);\r\n    this.f.descripiton.setValue(obj.descripiton);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);   \r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);        \r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.gmaplink.setValue(obj.gmaplink);\r\n    this.f.landmarkID.setValue(obj.landmarkID);    \r\n    this.f.imageURL.setValue(obj.imageURL);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.customerStatusID.setValue(obj.customerStatusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured  === true ? 1 : false);    \r\n\r\n    this.loadItemImages(this.f.locationID.value);\r\n\r\n    if (obj.amenities != \"\") {\r\n      var stringToConvert = obj.amenities;\r\n      this.selectedAmenitiesID = stringToConvert.split(',').map(Number);\r\n      this.f.amenities.setValue(obj.amenities);\r\n    }\r\n    if (obj.service != \"\") {\r\n      var stringToConvert = obj.service;\r\n      this.selectedServiceID = stringToConvert.split(',').map(Number);\r\n      this.f.service.setValue(obj.service);\r\n    }\r\n    // if (obj.landmark != \"\") {\r\n    //   var stringToConvert = obj.landmark;\r\n    //   this.selectedLandmarkID = stringToConvert.split(',').map(Number);\r\n    //   this.f.landmark.setValue(obj.landmark);\r\n    // }\r\n  }\r\n  private loadItemImages(id) {\r\n    \r\n    this.locationService.loadLocationImages(id).subscribe((res: any) => {\r\n      this.Images = res;\r\n      this.f.imagesSource.setValue(this.Images);\r\n    });\r\n  }\r\n  removeImage(obj) {\r\n    const index = this.Images.indexOf(obj);\r\n    this.Images.splice(index, 1);\r\n\r\n    this.f.imagesSource.setValue(this.Images);\r\n  }\r\n  private loadAmenities() {\r\n    this.locationService.loadAmenities().subscribe((res: any) => {\r\n      this.AmenitiesList = res;\r\n    });\r\n  }\r\n\r\n  private loadService() {\r\n    this.locationService.loadService().subscribe((res: any) => {\r\n      this.ServiceList = res;\r\n    });\r\n  }\r\n  private loadLandmark() {\r\n    this.locationService.loadLandmark().subscribe((res: any) => {\r\n      this.Items = res;\r\n    });\r\n  }\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {  \r\n   \r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n     \r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.amenities.setValue(this.selectedAmenitiesID == undefined ? \"\" : this.selectedAmenitiesID.toString());\r\n    this.f.service.setValue(this.selectedServiceID == undefined ? \"\" : this.selectedServiceID.toString());\r\n    //this.f.landmark.setValue(this.selectedLandmarkID == undefined ? \"\" : this.selectedLandmarkID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.customerStatusID.setValue(this.f.customerStatusID.value === true ? 1 : 2);\r\n    // this.f.isFeatured.setValue(this.f.isFeatured.value === true ? 1 : 0);\r\n\r\n   \r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n      //Insert location\r\n      console.log(JSON.stringify(this.locationForm.value));\r\n      //this.locationService.insert(this.locationForm.value).subscribe(data => {\r\n      //  this.loading = false;\r\n      //  if (data != 0) {\r\n      //    this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n      //    this.router.navigate(['/admin/location']);\r\n      //  }\r\n        \r\n      //}, error => {\r\n      //  this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n      //  this.loading = false;\r\n      //});\r\n\r\n    } else {\r\n      //Update location\r\n      \r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ConfirmationDialogService } from '../../settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n   \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n     \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVyL2N1c3RvbWVycy9hZGRjdXN0b21lcnMvYWRkY3VzdG9tZXIuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger;\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/customer/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Customers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\n\r\n\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexTitleSubtitle,\r\n  ApexMarkers,\r\n  AnnotationStyle,\r\n  ApexDataLabels,\r\n  ApexStroke,\r\n  ApexGrid,\r\n  ApexYAxis,\r\n  ApexAnnotations,\r\n  ApexNonAxisChartSeries,\r\n  ApexFill,\r\n  ApexLegend,\r\n  ApexTooltip,\r\n  ApexPlotOptions,\r\n  ApexResponsive,\r\n  ApexStates,\r\n  ApexTheme\r\n} from \"ng-apexcharts\";\r\nimport { DashboadService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  title: ApexTitleSubtitle;\r\n};\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions;  \r\n  public chartOptionsDonut;\r\n  selectedLocations = [];\r\n  dashboardSummary=new DashboardSummary();\r\n  \r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  ngOnInit() {\r\n    // const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);   \r\n    // this._datepicker.fromDate=date;\r\n    // this.GetDataDashboard();\r\n    \r\n  }\r\n \r\n  constructor(public service: DashboadService,public ls: LocalStorageService) {\r\n\r\n  }\r\n  BindTodaysSales(sales, timeSlot) {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Sales\",\r\n          data: sales\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 300,\r\n        type: \"bar\"\r\n      },\r\n      title: {\r\n        text: \"\"\r\n      },\r\n      xaxis: {\r\n        categories: timeSlot\r\n      }\r\n    };\r\n\r\n  }\r\n  BindMAEN(maen) {\r\n    \r\n    this.chartOptionsDonut = {\r\n      series: [maen.morning, maen.afterNoon, maen.evening, maen.night],\r\n      chart: {\r\n        type: \"donut\"\r\n      },\r\n      labels: [\"Morning\", \"Evening\", \"Afternoon\", \"Night\"],\r\n      responsive: [\r\n        {\r\n          breakpoint: 250,\r\n          options: {\r\n            colors: ['#2E93fA', '#66DA26', '#546E7A', '#E91E63', '#FF9800'],\r\n            chart: {\r\n              width: 100\r\n            },\r\n            legend: {\r\n              position: \"bottom\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  // GetDashboard() {\r\n    \r\n  //   this.service.GetDashboard(this.ls.getSelectedLocation().locationID,new Date()).subscribe((res: any) => {\r\n      \r\n  //     this.dashboardSummary = res.summarysales;\r\n  //     this.BindTodaysSales(res.todaysales.sales, res.todaysales.timeSlot);\r\n  //     this.BindMAEN(res.maensales);\r\n  //   }, error => {\r\n\r\n  //   });\r\n\r\n  // }\r\n\r\n  // GetDataDashboard(){\r\n  //   this.service.GetDashboardRange(this.ls.getSelectedLocation().locationID,this.parseDate(this._datepicker.fromDate),this.parseDate(this._datepicker.toDate)).subscribe((res: any) => {\r\n    \r\n  //     this.dashboardSummary = res.summarysales;\r\n  //     this.BindTodaysSales(res.todaysales.sales, res.todaysales.timeSlot);\r\n  //     this.BindMAEN(res.maensales);\r\n  //   }, error => {\r\n\r\n  //   });\r\n  // }\r\n  // parseDate(obj) {\r\n  //   return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  // }\r\n \r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FeaturesService } from 'src/app/_services/features.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addfeature',\r\n  templateUrl: './addfeature.component.html',\r\n})\r\nexport class AddfeatureComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  featureForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private featureService: FeaturesService,\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedFeature();\r\n  }\r\n\r\n  get f() { return this.featureForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.featureForm = this.formBuilder.group({\r\n      featureID: 0,\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      displayOrder: [],\r\n      statusID: [true],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.image.setValue(obj.image);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedFeature() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.featureID.setValue(sid);\r\n        this.featureService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.featureForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.featureForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n\r\n    if (parseInt(this.f.featureID.value) === 0) {\r\n      //Insert services\r\n      this.featureService.insert(this.featureForm.value).subscribe(data => {\r\n        debugger\r\n        if (data != 0) {\r\n          debugger\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/features']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n    else {\r\n      //Update banner\r\n      this.featureService.update(this.featureForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/features']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2ZlYXR1cmVzL2ZlYXR1cmVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Features } from '../../_models/Feature';\r\nimport { FeaturesService } from '../../_services/features.service';\r\n//import { NgbdModalContent } from '../../sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\n\r\n@Component({\r\n  selector: 'app-featurelist',\r\n  templateUrl: './featurelist.component.html',\r\n  styleUrls: ['./featurelist.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class FeaturelistComponent implements OnInit {\r\n  data$: Observable<Features[]>;\r\n  FeatureList = [];\r\n  oldData: Features[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: FeaturesService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  Edit(featureID) {\r\n    this.router.navigate([\"admin/features/edit\", featureID]);\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/features']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n\r\n  getData() {\r\n\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(carsell) {\r\n    this.router.navigate([\"admin/carselldetails/view\", carsell]);\r\n  }\r\n\r\n  Filter() {\r\n\r\n    this.getData();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addaddons',\r\n  templateUrl: './addaddons.component.html',\r\n  styleUrls: ['./addaddons.component.css']\r\n})\r\nexport class AddaddonsComponent implements OnInit {\r\n  submitted = false;\r\n  addonForm: FormGroup;\r\n  loading = false;\r\n  loadingaddon = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private addonsService: AddonsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedaddon();\r\n  }\r\n\r\n  get f() { return this.addonForm.controls; }\r\n\r\n  private createForm() {\r\n    this.addonForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      addonID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.addonID.setValue(obj.addonID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedaddon() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingaddon = true;\r\n        this.f.addonID.setValue(sid);\r\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingaddon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.addonForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.addonForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.addonID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.addonForm.value));\r\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public tss: ToastrService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n         debugger;\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      debugger;\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        //.pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',  \r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  \r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID,0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders= res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      //.pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n\r\n        this.getData(this.selectedLocations.toString());\r\n    \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getData(locaionIDs) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionIDs, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          \r\n          this.orderDetails = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());   \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      //.pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.selectedLocation);\r\n    this.loadLocations();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { reviews } from 'src/app/_models/Reviews';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReviewsService } from 'src/app/_services/reviews.service';\r\n\r\n@Component({\r\n  selector: 'app-reviews',\r\n  templateUrl: './reviews.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class ReviewsComponent implements OnInit {\r\n  data$: Observable<reviews[]>;  \r\n  oldData: reviews[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ReviewsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new OrderCheckout();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid, this.selectedBrand).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n  \r\n@Component({\r\n  selector: 'app-modal-content',\r\n  templateUrl: './modal-OrderDetail.component.html'\r\n})\r\nexport class ModalContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  } \r\n\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n\r\n  selector: 'app-orderdetails', \r\n  // templateUrl:'./modal-OrderDetail.component.html'\r\n  template: `\r\n <div class=\"modal-header\">\r\n    \r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n   \r\n<div class=\"card shadow mb-4\">\r\n  <div class=\"card-header py-3\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n              <h6 class=\"m-0 font-weight-bold text-orange\">Order Details - <span class=\"badge badge-info\"> {{ dataObj.order.statusID == 100 ? \"Delivered\" : dataObj.order.statusID==101 ?\"Order confirmed\" : dataObj.order.statusID == 102? \"Order prepared\" : dataObj.order.statusID == 103? \" Order out for delivery\" : dataObj.order.statusID == 104? \"Order Cancelled\" : \"-\" }}</span></h6>\r\n          </div>\r\n          <div class=\"col-md-6 text-right\">\r\n\r\n          </div>\r\n      </div>\r\n      <hr/>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\" *ngIf=\"dataObj.order.statusID!=100\">\r\n              <div class=\"card border-left-info shadow mb-4\">\r\n                  <div class=\"card-header border-bottom-0\">Order Status</div>\r\n                  <div class=\"card-body\">\r\n                    <div class=\"\">\r\n                      <button class=\"btn btn-warning mr-1\" (click)=\"updateOrder(dataObj.order,102)\" *ngIf=\"dataObj.order.statusID!=102\">\r\n                        <i class=\"fas fa-check-circle\"></i> Prepared\r\n                      </button>\r\n                      <button class=\"btn btn-info mr-1\" (click)=\"updateOrder(dataObj.order,103)\" *ngIf=\"dataObj.order.statusID!=103\">\r\n                        <i class=\"fas fa-truck\"></i> Out For Delivery\r\n                      </button>\r\n                      <button class=\"btn btn-success mr-1\" (click)=\"updateOrder(dataObj.order,100)\" *ngIf=\"dataObj.order.statusID!=100\">\r\n                        <i class=\"fas fa-people-carry\"></i> Delivered\r\n                      </button>\r\n                      <button class=\"btn btn-danger mr-1\" (click)=\"updateOrder(dataObj.order,104)\">\r\n                        <i class=\"fas fa-people-carry\"></i> Cancelled\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-6 mb-4\">\r\n\r\n              <div class=\"card border-left-success shadow mb-4\">\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Customer Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                    Customer Name\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.name }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                   Email\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.email }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                    Address\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.addressNickName }}</div>\r\n\r\n\r\n\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                  Google Address\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.address }} | Latitude: {{ dataObj.customerOrders.latitude }}| Longitude: {{ dataObj.customerOrders.longitude }}</div>\r\n\r\n\r\n\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                     Contact Number\r\n                                  </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.customerOrders.mobile }}</div>\r\n                          </div>\r\n                          \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"card border-left-warning shadow \">\r\n\r\n                  <div class=\"card-body\">\r\n\r\n                      <!-- Report summary card example-->\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Order Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Order No\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderNo }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Transaction No\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.transactionNo }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                         Order Type\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderType=='1'?'Home': dataObj.order.orderType=='2'?'Work':'Other' }}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                        Order Date\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ dataObj.order.orderDate | date }}</div>\r\n                          </div>\r\n                          \r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                       Status\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div class=\"mr-2\">\r\n                                  {{ dataObj.order.statusID == 100 ? \"Delivered\" : dataObj.order.statusID==101 ?\"Order confirmed\" : dataObj.order.statusID == 102? \"Order prepared\" : dataObj.order.statusID == 103? \" Order out for delivery\" : dataObj.order.statusID == 104? \"Order Cancelled\" : \"-\" }}\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-6 mb-4\">\r\n              <div class=\"card border-left-danger shadow mb-4\">\r\n\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card\">\r\n                          <div class=\"card-header border-bottom-0\">Billing Information</div>\r\n\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Amount Total\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.amountTotal | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Discount\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.discountAmount | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Tax\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.tax | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                                Service Charges\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.serviceCharges | number : '1.2-2')}}</div>\r\n                          </div>\r\n                          <div class=\"d-flex align-items-center\">\r\n                              <div class=\"flex-grow-1\">\r\n                                  <div class=\"list-group list-group-flush small\">\r\n                                      <a class=\"list-group-item list-group-item-action\" href=\"#!\">\r\n                         Grand Total\r\n                              </a>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"mr-2\">{{ (dataObj.orderCheckouts.grandTotal | number : '1.2-2')}}</div>\r\n                          </div>\r\n\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"card border-left-primary shadow\">\r\n\r\n                  <div class=\"card-body\">\r\n                      <div class=\"tile-body p-0 table-responsive \">\r\n                          <table class=\"table table-striped\">\r\n                              <thead>\r\n                                  <tr class=\"table-header\">\r\n                                      <th width=\"50%\">Name </th>\r\n                                      <th width=\"25\">Quantity</th>\r\n                                      <th width=\"25\">Price</th>\r\n                                  </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                  <tr *ngFor=\"let item of dataObj.orderDetails \">\r\n                                      <td> {{item.name}}\r\n                                          <tr *ngFor=\"let item1 of item.orderDetailModifiers \">\r\n                                              <td class=\"badge badge-pill\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\r\n\r\n                                          </tr>\r\n                                      </td>\r\n                                      <td> {{item.quantity}} </td>\r\n                                      <td> {{item.price}} </td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table>\r\n                      </div>\r\n\r\n                  </div>\r\n\r\n              </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n</div>    \r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n  </div>\r\n\r\n`,\r\n \r\n  \r\n})\r\nexport class NgbdModalContent {\r\n  \r\n  @Input() name;\r\n  dataObj: any = []; \r\n  constructor(public activeModal: NgbActiveModal,public service: OrdersService,\r\n    public ts: ToastService,\r\n    public router: Router) {}    \r\n\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails } from 'src/app/_models/Orders';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalContent } from './modal-content/ngbd-OrderDetail-content.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class OrdersComponent implements OnInit {\r\n  data$: Observable<Orders[]>;\r\n  oldData: Orders[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesorders: Orders[] = [];\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: OrdersService,private modalService: NgbModal,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loadLocations();\r\n  }\r\n\r\n  open(orders) \r\n  {    \r\n            \r\n    this.service.getById(orders, this.selectedBrand).subscribe(res => {          \r\n      console.log(res);\r\n      const modalRef = this.modalService.open(NgbdModalContent);\r\n      modalRef.componentInstance.dataObj = res;      \r\n    });        \r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  getData(locaionID) {\r\n     \r\n    this.service.getAllData(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(orders) {\r\n    this.router.navigate([\"admin/orders/view\", orders]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n          \r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL0RlbGl2ZXJ5L2FkZGRlbGl2ZXJ5L2FkZGRlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-adddelivery',\r\n  templateUrl: './adddelivery.component.html',\r\n  styleUrls: ['./adddelivery.component.css']\r\n})\r\nexport class AdddeliveryComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  deliveryForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  BrandsList = [];\r\n  selectedBrandIds: string[];\r\n  selectedModifierIds: string[];\r\n  private selectedBrand;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private deliveryService: DeliveryService\r\n\r\n  ) \r\n  \r\n  {\r\n    this.createForm();\r\n    this.loadBrands();\r\n     this.selectedBrand =this.ls.getSelectedBrand();\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n  \r\n\r\n \r\n  get f() { return this.deliveryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.deliveryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      amount: [0],\r\n      statusID: [true],\r\n      // brandIDs :[''],\r\n      deliveryAreaID: 0,    \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      brands:[],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.amount.setValue(obj.amount);\r\n    this.f.deliveryAreaID.setValue(obj.deliveryAreaID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);   \r\n    debugger\r\n    if (obj.brands != \"\") {\r\n      var stringToConvert = obj.brands;\r\n      this.selectedBrandIds = stringToConvert.split(',').map(Number);\r\n      this.f.brands.setValue(obj.brands);\r\n    }\r\n  }\r\n\r\n  setSelecteditem() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.deliveryAreaID.setValue(sid);\r\n        this.deliveryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n\r\n          //BrandsFill\r\n          // this.deliveryService.getBrands(this.ls.getSelectedBrand().brandID)\r\n          // .subscribe((res: any) => {            \r\n          //   var stringToConvert = res.items;\r\n          //   this.selectedBrandIds = stringToConvert.split(',').map(Number);              \r\n          // });\r\n\r\n        });\r\n      }\r\n    })\r\n  }\r\n \r\n\r\n\r\n  onSubmit() {\r\n   \r\n    this.deliveryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.deliveryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    this.f.brands.setValue(this.selectedBrandIds == undefined ? \"\" : this.selectedBrandIds.toString());\r\n\r\n    if (parseInt(this.f.deliveryAreaID.value) === 0) {\r\n      //Insert delivery\r\n      this.deliveryService.insert(this.deliveryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update delivery\r\n      this.deliveryService.update(this.deliveryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadBrands() {\r\n    \r\n    this.deliveryService.loadBrands(this.f.brandID).subscribe((res: any) => {\r\n      this.BrandsList = res;\r\n      // this.setSelecteditem();\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FtZW5pdGllcy9hZGRhbWVuaXRpZXMvYWRkYW1lbml0aWVzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AmenitiesService } from 'src/app/_services/amenities.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addamenities',\r\n  templateUrl: './addamenities.component.html',\r\n  styleUrls: ['./addamenities.component.css']\r\n})\r\nexport class AddamenitiesComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  amenitiesForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private amenitiesService: AmenitiesService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.amenitiesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.amenitiesForm = this.formBuilder.group({\r\n      amenitiesID: 0,\r\n      name: ['', Validators.required],   \r\n      arabicName:[''],   \r\n      statusID: [true],      \r\n      image: [''],            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.amenitiesID.setValue(obj.amenitiesID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.amenitiesID.setValue(sid);\r\n        this.amenitiesService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.amenitiesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.amenitiesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.amenitiesID.value) === 0) {\r\n      //Insert amenities\r\n      console.log(JSON.stringify(this.amenitiesForm.value));\r\n      this.amenitiesService.insert(this.amenitiesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/amenities']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.amenitiesService.update(this.amenitiesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/amenities']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FtZW5pdGllcy9hbWVuaXRpZXMuY29tcG9uZW50LmNzcyJ9 */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { Amenities } from 'src/app/_models/Amenities';\r\nimport { AmenitiesService } from 'src/app/_services/amenities.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-amenities',\r\n  templateUrl: './amenities.component.html',\r\n  styleUrls: ['./amenities.component.css']\r\n})\r\n\r\nexport class AmenitiesComponent implements OnInit {\r\n  data$: Observable<Amenities[]>;  \r\n  oldData: Amenities[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: AmenitiesService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    //  this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(amenities) {\r\n    debugger\r\n        this.router.navigate([\"admin/amenities/edit\", amenities]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FwcHNldHRpbmdzL2FwcHNldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  styleUrls: ['./appsettings.component.css']\r\n})\r\nexport class AppsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n  loadingCategory = false;  \r\n  loading = false;\r\n  constructor(  \r\n    public ts :ToastService,\r\n    private appsettingService: AppsettingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,    \r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService\r\n    ) { \r\n      this.createForm();\r\n     \r\n      brandID: this.ls.getSelectedBrand().brandID;\r\n      this.setSelectedCategory();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n \r\n\r\n  get f() { return this.categoryForm.controls; }\r\n  \r\n  private createForm() {\r\n   \r\n    this.categoryForm = this.formBuilder.group({\r\n      branchName: ['', Validators.required],\r\n      branchAddress: [''],\r\n      branchTiming: [''],\r\n      statusID: [true],\r\n      deliveryNo: [''],\r\n      whatsappNo:[''],\r\n      discount: 0,\r\n      discountdescription:[''],          \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      ID: 0,\r\n      AppInfoID: 0,\r\n      appDescription:[''],     \r\n      facebook:[''],\r\n      twitter:[''],\r\n      instagram:[''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\ndebugger;\r\n    this.f.branchName.setValue(obj.branchName);\r\n    this.f.branchAddress.setValue(obj.branchAddress);\r\n    this.f.branchTiming.setValue(obj.branchTiming);\r\n    this.f.deliveryNo.setValue(obj.deliveryNo);\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.discountdescription.setValue(obj.discountdescription);\r\n    this.f.whatsappNo.setValue(obj.whatsappNo);\r\n    this.f.appDescription.setValue(obj.appDescription);\r\n    this.f.facebook.setValue(obj.facebook);\r\n    this.f.twitter.setValue(obj.twitter);\r\n    this.f.instagram.setValue(obj.instagram);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);    \r\n    this.f.ID.setValue(obj.id);\r\n    this.f.appInfoID.setValue(obj.appInfoID);\r\n  }\r\n\r\n  setSelectedCategory() {\r\n    \r\n    this.loadingCategory = true;\r\n    this.appsettingService.getById(this.f.brandID.value).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingCategory = false;\r\n    });\r\n  }\r\n  onSubmit() {    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    debugger;\r\n    if (parseInt(this.f.ID.value) === 0) {\r\n      //Insert appsetting\r\n      this.appsettingService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update appsetting\r\n      this.appsettingService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvbmZpcm0vY29uZmlybS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n\r\n constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n//import { Observable } from 'rxjs/Observable';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmComponent } from './confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmationDialogService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Delivery } from 'src/app/_models/Delivery';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  data$: Observable<Delivery[]>;  \r\n  oldData: Delivery[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DeliveryService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(delivery) {\r\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { alternateimageComponent } from 'src/app/imageupload/alternateimage.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DiscountService } from 'src/app/_services/discount.service';\r\nimport { LocationsService } from '../../../../_services/locations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-adddiscount',\r\n  templateUrl: './adddiscount.component.html',\r\n})\r\nexport class AdddiscountComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  discountForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  LocationList = [];\r\n  selectedLocationID = [];\r\n  fromTime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  toTime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n\r\n\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  //@ViewChild(ImageuploadComponent, { static: true }) arbimg;\r\n  @ViewChild(alternateimageComponent, { static: true }) arbimg;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private discountService: DiscountService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.discountForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.discountForm = this.formBuilder.group({\r\n      discountID: 0,\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      arabicName: [''],\r\n      arabicDescription: [''],\r\n      toDate: ['', Validators.required],\r\n      toTime: [''],\r\n      fromDate: ['', Validators.required],\r\n      fromTime: [''],\r\n      statusID: [true],\r\n      image: [''],\r\n      arabicImage: [''],\r\n      locationID: [null],\r\n      locations: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.discountID.setValue(obj.discountID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.arabicImage.setValue(obj.arabicImage);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.toTime.setValue(obj.toTime);\r\n    this.f.fromTime.setValue(obj.fromTime);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.arbimg.alternateimageUrl = obj.arabicImage;\r\n    //this.arbimg.alternateimageUrl = obj.arabicImage;\r\n    this.fromTime = { hour: new Date(\"1/1/1900 \" + obj.fromTime).getHours(), minute: new Date(\"1/1/1900 \" + obj.fromTime).getMinutes() };\r\n    this.toTime = { hour: new Date(\"1/1/1900 \" + obj.toTime).getHours(), minute: new Date(\"1/1/1900 \" + obj.toTime).getMinutes() };\r\n\r\n    if (obj.locations != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.locations;\r\n      this.selectedLocationID = stringToConvert.split(',').map(Number);\r\n      this.f.locations.setValue(obj.locations);\r\n    }\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.discountID.setValue(sid);\r\n        this.discountService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadLocations() {\r\n    debugger\r\n    this.locationService.getAllLocations().subscribe((res: any) => {\r\n      this.LocationList = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.discountForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.fromTime.setValue(this.fromTime.hour + \":\" + this.fromTime.minute);\r\n    this.f.toTime.setValue(this.toTime.hour + \":\" + this.toTime.minute);\r\n    if (this.discountForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locations.setValue(this.selectedLocationID == undefined ? \"\" : this.selectedLocationID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    this.f.arabicImage.setValue(this.arbimg.alternateimageUrl);\r\n\r\n\r\n    if (parseInt(this.f.discountID.value) === 0) {\r\n      //Insert services\r\n      this.discountService.insert(this.discountForm.value).subscribe(data => {\r\n        debugger\r\n        if (data != 0) {\r\n          debugger\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/discount']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.discountService.update(this.discountForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/discount']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Discount } from 'src/app/_models/Discount';\r\nimport { DiscountService } from 'src/app/_services/discount.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-discount',\r\n  templateUrl: './discount.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class DiscountComponent implements OnInit {\r\n  data$: Observable<Discount[]>;\r\n  oldData: Discount[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: DiscountService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n \r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(discount) {\r\n    this.router.navigate([\"admin/discount/edit\", discount]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if (res != 0) {\r\n  //       this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //       this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2xhbmRtYXJrcy9hZGRsYW5kbWFyay9hZGRsYW5kbWFyay5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LandmarkService } from 'src/app/_services/landmark.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addlandmark',\r\n  templateUrl: './addlandmark.component.html',\r\n  styleUrls: ['./addlandmark.component.css']\r\n})\r\nexport class AddlandmarkComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  landmarkForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private landmarkService: LandmarkService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    debugger\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.landmarkForm.controls; }\r\n\r\n  private createForm() {\r\n    this.landmarkForm = this.formBuilder.group({\r\n      landmarkID: 0,\r\n      name: ['', Validators.required],    \r\n      arabicName:[''],  \r\n      statusID: [true],      \r\n      image: [''],            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n     this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.landmarkID.setValue(obj.landmarkID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.landmarkID.setValue(sid);\r\n        this.landmarkService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.landmarkForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.landmarkForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.landmarkID.value) === 0) {\r\n      //Insert landmark\r\n      console.log(JSON.stringify(this.landmarkForm.value));\r\n      this.landmarkService.insert(this.landmarkForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/landmarks']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.landmarkService.update(this.landmarkForm.value).subscribe(data => {\r\n        debugger\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/landmarks']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2xhbmRtYXJrcy9sYW5kbWFyay5jb21wb25lbnQuY3NzIn0= */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { LandmarkService } from 'src/app/_services/landmark.service';\r\nimport { Landmark } from 'src/app/_models/Landmark';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n@Component({\r\n  selector: 'app-landmark',\r\n  templateUrl: './landmark.component.html',\r\n  styleUrls: ['./landmark.component.css']\r\n})\r\n\r\nexport class LandmarkComponent implements OnInit {\r\n  data$: Observable<Landmark[]>;  \r\n  oldData: LandmarkService[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LandmarkService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  debugger;\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(landmark) {\r\n    debugger\r\n        this.router.navigate([\"admin/landmarks/edit\", landmark]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if(res!=0){\r\n  //       this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9hZGRvZmZlcnMvYWRkb2ZmZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addoffers',\r\n  templateUrl: './addoffers.component.html',\r\n  styleUrls: ['./addoffers.component.css']\r\n})\r\nexport class AddoffersComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  offersForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private offersService: OffersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.offersForm.controls; }\r\n\r\n  private createForm() {\r\n    this.offersForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      offerID: 0,\r\n      image: [''],\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.offerID.setValue(obj.offerID);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.offerID.setValue(sid);\r\n        this.offersService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.offersForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.offersForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    this.f.fromDate.setValue(this.parseDate(this._datepicker.fromDate));\r\n    this.f.toDate.setValue(this.parseDate(this._datepicker.toDate));\r\n\r\n    if (parseInt(this.f.offerID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.offersService.insert(this.offersForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.offersService.update(this.offersForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Offers } from 'src/app/_models/Offers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OffersComponent implements OnInit {\r\n  data$: Observable<Offers[]>;\r\n  oldData: Offers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: OffersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/offers/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NlcnZpY2VzL2FkZHNlcnZpY2VzL2FkZHNlcnZpY2VzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ServicesService } from 'src/app/_services/services.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addservices',\r\n  templateUrl: './addservices.component.html',\r\n  styleUrls: ['./addservices.component.css']\r\n})\r\nexport class AddservicesComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  serviceForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private servicesService: ServicesService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.serviceForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.serviceForm = this.formBuilder.group({\r\n      serviceID: 0,\r\n      serviceTitle: ['', Validators.required],\r\n      serviceDescription: [''],    \r\n      arabicServiceTitle: [''],\r\n      arabicServiceDescription: [''],  \r\n      displayOrder: [0],      \r\n      statusID: [true],      \r\n      image: [''],   \r\n      type: ['']            \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.serviceTitle.setValue(obj.serviceTitle);\r\n    this.f.arabicServiceTitle.setValue(obj.arabicServiceTitle);\r\n    this.f.serviceID.setValue(obj.serviceID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.serviceDescription.setValue(obj.serviceDescription);\r\n    this.f.arabicServiceDescription.setValue(obj.arabicServiceDescription);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.serviceID.setValue(sid);\r\n        this.servicesService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.serviceForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.serviceForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.serviceID.value) === 0) {\r\n      debugger\r\n      //Insert services\r\n      console.log(JSON.stringify(this.serviceForm.value));\r\n      this.servicesService.insert(this.serviceForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/services']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.servicesService.update(this.serviceForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/services']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbXBvbmVudC5jc3MifQ== */\";","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Services } from 'src/app/_models/Services';\r\nimport { ServicesService } from 'src/app/_services/services.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n \r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css']\r\n})\r\n\r\nexport class ServiceComponent implements OnInit {\r\n  data$: Observable<Services[]>;  \r\n  oldData: Services[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: ServicesService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(services) {\r\n    debugger\r\n        this.router.navigate([\"admin/services/edit\", services]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if(res!=0){\r\n  //       this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3NldHRpbmcvYWRkc2V0dGluZy9hZGRzZXR0aW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { alternateimageComponent } from 'src/app/imageupload/alternateimage.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { SettingService } from 'src/app/_services/setting.service';\r\nimport { LocationsService } from '../../../../_services/locations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addsetting',\r\n  templateUrl: './addsetting.component.html',\r\n  styleUrls: ['./addsetting.component.css']\r\n})\r\nexport class AddsettingComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  settingForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  LocationList = [];\r\n  selectedLocationID = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  @ViewChild(alternateimageComponent, { static: true }) altimg;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private settingService: SettingService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.settingForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger\r\n    this.settingForm = this.formBuilder.group({\r\n      id: 0,\r\n      title: ['', Validators.required],\r\n      description: [''],\r\n      arabicTitle: [''],\r\n      arabicDescription: [''],\r\n      displayOrder: [0],\r\n      pageName: [''],\r\n      type: [''],\r\n      statusID: [true],\r\n      image: [''],\r\n      alternateImage: [''],\r\n      locationID: [null],\r\n      locations: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.title.setValue(obj.title);\r\n    this.f.arabicTitle.setValue(obj.arabicTitle);\r\n    this.f.id.setValue(obj.id);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.alternateImage.setValue(obj.alternateImage);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.arabicDescription.setValue(obj.arabicDescription);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.pageName.setValue(obj.pageName);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.altimg.alternateimageUrl = obj.alternateImage;\r\n\r\n    if (obj.locations != \"\") {\r\n      debugger\r\n      var stringToConvert = obj.locations;\r\n      this.selectedLocationID = stringToConvert.split(',').map(Number);\r\n      this.f.locations.setValue(obj.locations);\r\n    }\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.id.setValue(sid);\r\n        this.settingService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadLocations() {\r\n    debugger\r\n    this.locationService.getAllLocations().subscribe((res: any) => {\r\n      this.LocationList = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.settingForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.settingForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.locations.setValue(this.selectedLocationID == undefined ? \"\" : this.selectedLocationID.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    this.f.alternateImage.setValue(this.altimg.alternateimageUrl);\r\n\r\n\r\n    if (parseInt(this.f.id.value) === 0) {\r\n      debugger\r\n      //Insert services\r\n      console.log(JSON.stringify(this.settingForm.value));\r\n      this.settingService.insert(this.settingForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/setting']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.settingService.update(this.settingForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/setting']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { setting } from 'src/app/_models/Setting';\r\nimport { SettingService } from 'src/app/_services/setting.service';\r\nimport { ConfirmationDialogService } from '../confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SettingComponent implements OnInit {\r\n  data$: Observable<setting[]>;\r\n  oldData: setting[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n\r\n  constructor(public service: SettingService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private confirmationDialogService: ConfirmationDialogService) {\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  public async openConfirmationDialog(item) {\r\n    debugger\r\n    \r\n      if(await this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete ... ?') === true)\r\n      {\r\n        this.service.delete(item).subscribe((res: any) => {\r\n          if(res!=0){\r\n            this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n            this.getData();\r\n          }\r\n          else\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n        }, error => {\r\n          this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n        });\r\n      }\r\n    else{}\r\n  }\r\n \r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(setting) {\r\n    this.router.navigate([\"admin/setting/edit\", setting]);\r\n  }\r\n\r\n  // Delete(obj) {\r\n  //   this.service.delete(obj).subscribe((res: any) => {\r\n  //     if (res != 0) {\r\n  //       this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n  //       this.getData();\r\n  //     }\r\n  //     else\r\n  //       this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n  //   }, error => {\r\n  //     this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n  //   });\r\n  // }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ConfirmationDialogService } from './admin/settings/confirm/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n \r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule, NgbTimepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { alternateimageComponent } from './imageupload/alternateimage.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\nimport { CustomersComponent } from './admin/customer/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/customer/customers/addcustomers/addcustomer.component';\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { OffersComponent } from './admin/settings/offers/offers.component';\r\nimport { AddoffersComponent } from './admin/settings/offers/addoffers/addoffers.component';\r\nimport { OrdersComponent } from './admin/sales/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/sales/orderdetails/orderdetails.component';\r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\nimport { AdddeliveryComponent } from './admin/settings/Delivery/adddelivery/adddelivery.component';\r\nimport { AppsettingsComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\nimport { ModalContentComponent } from './admin/sales/orders/modal-content/modal-OrderDetail.component';\r\nimport { NgbdModalContent } from './admin/sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nimport { AmenitiesComponent } from './admin/settings/amenities/amenities.component';\r\nimport { AddamenitiesComponent } from './admin/settings/amenities/addamenities/addamenities.component';\r\nimport { AddlandmarkComponent } from './admin/settings/landmarks/addlandmark/addlandmark.component';\r\nimport { LandmarkComponent } from './admin/settings/landmarks/landmark.component';\r\nimport { AddservicesComponent } from './admin/settings/services/addservices/addservices.component';\r\nimport { ServiceComponent } from './admin/settings/services/services.component';\r\nimport { SettingComponent } from './admin/settings/setting/setting.component';\r\nimport { AddsettingComponent } from './admin/settings/setting/addsetting/addsetting.component';\r\nimport { ConfirmComponent } from './admin/settings/confirm/confirm.component';\r\nimport { ConfirmationDialogService } from './admin/settings/confirm/confirmation-dialog.service';\r\nimport { CarselllistComponent } from './admin/carsell/carselllist/carselllist.component';\r\nimport { CarSelldetailsComponent } from './admin/carsell/carselldetails/carselldetails.component';\r\nimport { AddcarsellComponent } from './admin/carsell/carselllist/addcarsell/addcarsell.component';\r\nimport { ReviewsComponent } from './admin/reviews/reviews.component';\r\nimport { DiscountComponent } from './admin/settings/discount/discount.component';\r\nimport { AdddiscountComponent } from './admin/settings/discount/add/adddiscount.component';\r\nimport { FeaturelistComponent } from './admin/features/featurelist.component';\r\nimport { AddfeatureComponent } from './admin/features/add/addfeature.component';\r\n\r\nimport { BodyTypeComponent } from './admin/bodytype/bodytype.component';\r\nimport { AddbodyTypeComponent } from './admin/bodytype/add/addbodyType.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    alternateimageComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    OffersComponent,\r\n    AddoffersComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    OrdersComponent,\r\n    OrderdetailsComponent,\r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    AdddeliveryComponent,\r\n    AppsettingsComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    ModalContentComponent,\r\n    NgbdModalContent,\r\n    AmenitiesComponent,\r\n    AddamenitiesComponent,\r\n    LandmarkComponent,\r\n    AddlandmarkComponent,\r\n    AddservicesComponent,\r\n    ServiceComponent,\r\n    SettingComponent,\r\n    AddsettingComponent,\r\n    ConfirmComponent,\r\n    CarselllistComponent,\r\n    AddcarsellComponent,\r\n    ReviewsComponent,\r\n    DiscountComponent,\r\n    AdddiscountComponent,\r\n    CarSelldetailsComponent,\r\n    FeaturelistComponent,\r\n    AddfeatureComponent,\r\n    BodyTypeComponent,\r\n    AddbodyTypeComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    NgApexchartsModule,\r\n\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          { path: 'orders', component: OrdersComponent },\r\n          { path: 'orders/add', component: OrderdetailsComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'customer', component: CustomersComponent },\r\n          { path: 'customer/add', component: AddcustomerComponent },\r\n          { path: 'customer/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'banner', component: BannerComponent },\r\n          { path: 'banner/add', component: AddbannerComponent },\r\n          { path: 'banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'offers', component: OffersComponent },\r\n          { path: 'offers/add', component: AddoffersComponent },\r\n          { path: 'offers/edit/:id', component: AddoffersComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n          { path: 'delivery', component: DeliveryComponent },\r\n          { path: 'delivery/add', component: AdddeliveryComponent },\r\n          { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'appsettings', component: AppsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'amenities', component: AmenitiesComponent },\r\n          { path: 'amenities/add', component: AddamenitiesComponent },\r\n          { path: 'amenities/edit/:id', component: AddamenitiesComponent },\r\n\r\n          { path: 'landmarks', component: LandmarkComponent },\r\n          { path: 'landmarks/add', component: AddlandmarkComponent },\r\n          { path: 'landmarks/edit/:id', component: AddlandmarkComponent },\r\n\r\n          { path: 'services', component: ServiceComponent },\r\n          { path: 'services/add', component: AddservicesComponent },\r\n          { path: 'services/edit/:id', component: AddservicesComponent },\r\n\r\n          { path: 'setting', component: SettingComponent },\r\n          { path: 'setting/add', component: AddsettingComponent },\r\n          { path: 'setting/edit/:id', component: AddsettingComponent },\r\n\r\n          { path: 'carsell', component: CarselllistComponent },\r\n          { path: 'carselldetails', component: CarSelldetailsComponent },\r\n          { path: 'carselldetails/view/:id', component: CarSelldetailsComponent },\r\n          { path: 'carsell/add', component: AddcarsellComponent },\r\n          { path: 'carsell/edit/:id', component: AddcarsellComponent },\r\n\r\n          { path: 'reviews', component: ReviewsComponent },\r\n\r\n          { path: 'discount', component: DiscountComponent },\r\n          { path: 'discount/add', component: AdddiscountComponent },\r\n          { path: 'discount/edit/:id', component: AdddiscountComponent },\r\n\r\n          { path: 'features', component: FeaturelistComponent },\r\n          { path: 'features/add', component: AddfeatureComponent },\r\n          { path: 'features/edit/:id', component: AddfeatureComponent },\r\n\r\n          { path: 'bodytype', component: BodyTypeComponent },\r\n          { path: 'bodytype/add', component: AddbodyTypeComponent },\r\n          { path: 'bodytype/edit/:id', component: AddbodyTypeComponent },\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [ConfirmationDialogService],\r\n  exports: [NgbdDatepickerRangePopup, NgbTimepicker],\r\n  bootstrap: [AppComponent, NgbdDatepickerRangePopup, NgbTimepicker]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-alternateimage',\r\n  templateUrl: './alternateimage.component.html'\r\n})\r\nexport class alternateimageComponent {\r\n\r\n  alternateimageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.alternateimageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  branchname = \"\";\r\n  email = \"\";\r\n  // locationID: 0;\r\n  // Locations: [];\r\n  // private selectedBrand;\r\n\r\n  ngOnInit() {\r\n   ///var data = this.ls.getSelectedBrand();\r\n\r\n    \r\n    //this.loadLocations();\r\n\r\n\r\n    // if (data == null)\r\n    //   this.router.navigate([\"/\"]);\r\n\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public ls: LocalStorageService) {\r\n    // this.branchname = this.ls.getSelectedBrand().name;\r\n    // this.email = this.ls.getSelectedBrand().email;\r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private loadLocations() {\r\n    // var loc = this.ls.getLocation();\r\n    // if (loc != null) {\r\n    //   this.Locations = this.ls.getLocation();\r\n    //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n    // }\r\n    // else {\r\n    //   this.service.getAllLocations(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n    //     debugger\r\n    //     if (res.length > 0) {\r\n    //       this.ls.setLocation(res);\r\n    //       this.ls.setSelectedLocation(res[0]);\r\n    //       this.locationID =res[0].locationID;\r\n    //       this.Locations =res;\r\n    //     }\r\n    //     else {\r\n    //       this.router.navigate(['/']);\r\n    //     }\r\n    //   });\r\n    // }\r\n    // this.Locations = this.ls.getLocation();\r\n    // this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  }\r\n  changeloc(LocObj) {\r\n\r\n    // this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    debugger\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\ndebugger\r\n          if(this.f.username.value == \"admin@garage.com\" && this.f.password.value == \"Admin@123\") {\r\n             \r\n            this.router.navigate([\"/admin/dashboard\"]);\r\n            \r\n                  \r\n          }\r\n          else {\r\n            this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n          }\r\n\r\n        } \r\n   \r\n\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n \r\n\r\n \r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}